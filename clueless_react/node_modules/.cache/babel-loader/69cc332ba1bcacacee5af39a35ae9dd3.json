{"ast":null,"code":"var _jsxFileName = \"/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"./Divider.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport PlayerHand from \"./PlayerHand\";\nimport { startClient, socket } from \"./ClientManager\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\nimport Masthead from \"./Masthead\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Store in the App, and passed into children as props\n      actions: [],\n      player_id: 0,\n      character_id: 0,\n      cards: [1, 2, 3],\n      turn: \"Other Players Turn\",\n      currentLocationId: 0,\n      currentRoom: \"\"\n    };\n\n    this.onselectTest = string => {//console.log(\"TESTCALLBACK\" + string);\n      //this.setState({language: langValue});\n    };\n  }\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", message => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n      this.setState({\n        actions: [message, ...this.state.actions]\n      });\n      var newTurn = this.state.turn;\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              //console.log(\"APP: \" + message.message.player_id)\n              //console.log(\"APP: \" + message.message.character)\n              //console.log(\"APP: \" + message.message.cards)\n              this.setState({\n                player_id: message.message.player_id,\n                character_id: message.message.character_id,\n                cards: message.message.cards\n              });\n            }\n          }\n        }\n      }\n\n      if (newTurn != \"Revoked\") {\n        if (message.message_type == 31) {\n          newTurn = \"Movement\";\n        } else if (message.message_type == 32) {\n          newTurn = \"Suggestion\";\n        } else if (message.message_type == 33) {\n          newTurn = \"Disprove\";\n        } else if (message.message_type == 34) {\n          newTurn = \"Accusation\";\n        } else if (message.message_type == 52) {\n          //Does 52 need to be send to everyone? To update their notecard\n          if (message.message.accusation_correct === false) {\n            newTurn = \"Revoked\";\n          }\n        } else if (message.message_type == 61) {\n          newTurn = \"End of Game\";\n        } else if (message.message_type == 21) {\n          if (message.message.broadcast_message.indexOf(\"starting their turn\") != 0) {\n            console.log(\"FOUND\");\n            newTurn = \"Other Players Turn\";\n          }\n        } else {\n          newTurn = \"Other Players Turn\";\n        }\n      }\n\n      this.setState({\n        turn: newTurn\n      });\n    });\n  }\n\n  render() {\n    const imgsrc = \"/Clue-Less-Title.png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Masthead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Gameboard, {\n      actions: this.state.actions,\n      player_id: this.state.player_id,\n      character_id: this.state.character_id,\n      cards: this.state.cards,\n      turn: this.state.turn,\n      changeCurrentLocationId: this.changeCurrentLocationId,\n      changeCurrentRoom: this.changeCurrentRoom,\n      onSelectTest: this.onselectTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/App.js"],"names":["React","Divider","Gameboard","PlayerHand","startClient","socket","NoteBook","MessageBoard","Masthead","App","Component","constructor","props","state","actions","player_id","character_id","cards","turn","currentLocationId","currentRoom","onselectTest","string","componentDidMount","window","location","port","on","message","console","log","JSON","stringify","setState","newTurn","message_type","username","undefined","accusation_correct","broadcast_message","indexOf","render","imgsrc","changeCurrentLocationId","changeCurrentRoom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./Divider.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport PlayerHand from \"./PlayerHand\";\nimport { startClient, socket } from \"./ClientManager\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\nimport Masthead from \"./Masthead\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    // Store in the App, and passed into children as props\n    actions: [],\n    player_id: 0,\n    character_id: 0,\n    cards: [1, 2, 3],\n    turn: \"Other Players Turn\",\n    currentLocationId: 0,\n    currentRoom: \"\",\n  };\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", (message) => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n\n      this.setState({ actions: [message, ...this.state.actions] });\n      var newTurn = this.state.turn;\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              //console.log(\"APP: \" + message.message.player_id)\n              //console.log(\"APP: \" + message.message.character)\n              //console.log(\"APP: \" + message.message.cards)\n              this.setState({\n                player_id: message.message.player_id,\n                character_id: message.message.character_id,\n                cards: message.message.cards,\n              });\n            }\n          }\n        }\n      }\n\n      if (newTurn != \"Revoked\") {\n        if (message.message_type == 31) {\n          newTurn = \"Movement\";\n        } else if (message.message_type == 32) {\n          newTurn = \"Suggestion\";\n        } else if (message.message_type == 33) {\n          newTurn = \"Disprove\";\n        } else if (message.message_type == 34) {\n          newTurn = \"Accusation\";\n        } else if (message.message_type == 52) {\n          //Does 52 need to be send to everyone? To update their notecard\n          if (message.message.accusation_correct === false) {\n            newTurn = \"Revoked\";\n          }\n        } else if (message.message_type == 61) {\n          newTurn = \"End of Game\";\n        } else if (message.message_type == 21) {\n          if (\n            message.message.broadcast_message.indexOf(\"starting their turn\") !=\n            0\n          ) {\n            console.log(\"FOUND\");\n            newTurn = \"Other Players Turn\";\n          }\n        } else {\n          newTurn = \"Other Players Turn\";\n        }\n      }\n\n      this.setState({ turn: newTurn });\n    });\n  }\n\n  onselectTest = (string) => {\n    //console.log(\"TESTCALLBACK\" + string);\n    //this.setState({language: langValue});\n  };\n\n  render() {\n    const imgsrc = \"/Clue-Less-Title.png\";\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Masthead />\n        <Gameboard\n          actions={this.state.actions}\n          player_id={this.state.player_id}\n          character_id={this.state.character_id}\n          cards={this.state.cards}\n          turn={this.state.turn}\n          changeCurrentLocationId={this.changeCurrentLocationId}\n          changeCurrentRoom={this.changeCurrentRoom}\n          onSelectTest={this.onselectTest}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}