{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/MapExample.js\";\n// import React from \"react\";\n// import \"./styles.css\";\n// import { ImageMap } from \"@qiuz/react-image-map\";\n// import { AreaType } from \"./AreaType\";\n// const onMapClick = (area: AreaType, index: number) => {\n//   const tip = `click map${area.href || index + 1}`;\n//   console.log(tip);\n//   alert(tip);\n// };\n// // in hooks\n// export default function Example() {\n//   const img =\n//     \"https://qiuziz.github.io/react-image-map/static/media/example.3373acbe.png\";\n//   const mapArea = [\n//     { left: \"0%\", top: \"6%\", height: \"12%\", width: \"33%\" },\n//     { left: \"10%\", top: \"6%\", height: \"12%\", width: \"33%\" }\n//   ];\n//   const ImageMapComponent = React.useMemo(\n//     () => (s\n//       <ImageMap\n//         className=\"usage-map\"\n//         src={img}\n//         map={mapArea}\n//         onMapClick={onMapClick}\n//       />\n//     ),\n//     [mapArea, img]\n//   );\n//   return <div>{ImageMapComponent}</div>;\n//   }\nimport React from \"react\";\nimport ImageMapper from 'react-image-mapper';\n\nclass MapExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: []\n    };\n    this.state = {\n      actions: this.props.actions,\n      hoveredArea: null,\n      msg: null,\n      moveMsg: null\n    };\n  }\n\n  load() {\n    this.setState({\n      msg: \"Interact with image !\"\n    });\n  }\n\n  clicked(area) {\n    this.setState({\n      msg: `You clicked on ${area.shape} at coords ${JSON.stringify(area.coords)} !`\n    });\n  }\n\n  clickedOutside(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      msg: `You clicked on the image at coords ${JSON.stringify(coords)} !`\n    });\n  }\n\n  moveOnImage(evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !`\n    });\n  }\n\n  enterArea(area) {\n    this.setState({\n      hoveredArea: area,\n      msg: `You entered ${area.shape} ${area.name} at coords ${JSON.stringify(area.coords)} !`\n    });\n  }\n\n  leaveArea(area) {\n    this.setState({\n      hoveredArea: null,\n      msg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(area.coords)} !`\n    });\n  }\n\n  moveOnArea(area, evt) {\n    const coords = {\n      x: evt.nativeEvent.layerX,\n      y: evt.nativeEvent.layerY\n    };\n    this.setState({\n      moveMsg: `You moved on ${area.shape} ${area.name} at coords ${JSON.stringify(coords)} !`\n    });\n  }\n\n  getTipPosition(area) {\n    return {\n      top: `${area.center[1]}px`,\n      left: `${area.center[0]}px`\n    };\n  }\n\n  render() {\n    //console.log('MessageState:' + this.state.actions)\n    //console.log('MessageProps:' + this.props.actions)\n    const URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\";\n    const MAP = {\n      name: \"my-map\",\n      areas: [{\n        name: \"1\",\n        shape: \"poly\",\n        coords: [25, 33, 27, 300, 128, 240, 128, 94],\n        preFillColor: \"green\",\n        fillColor: \"blue\"\n      }, {\n        name: \"2\",\n        shape: \"poly\",\n        coords: [219, 118, 220, 210, 283, 210, 284, 119],\n        preFillColor: \"pink\"\n      }, {\n        name: \"3\",\n        shape: \"poly\",\n        coords: [381, 241, 383, 94, 462, 53, 457, 282],\n        fillColor: \"yellow\"\n      }, {\n        name: \"4\",\n        shape: \"poly\",\n        coords: [245, 285, 290, 285, 274, 239, 249, 238],\n        preFillColor: \"red\"\n      }, {\n        name: \"5\",\n        shape: \"circle\",\n        coords: [170, 100, 25]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(ImageMapper, {\n      src: URL,\n      map: MAP,\n      width: 500,\n      onLoad: () => this.load(),\n      onClick: area => this.clicked(area),\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onMouseMove: (area, _, evt) => this.moveOnArea(area, evt),\n      onImageClick: evt => this.clickedOutside(evt),\n      onImageMouseMove: evt => this.moveOnImage(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }), this.state.hoveredArea && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: { ...this.getTipPosition(this.state.hoveredArea)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }, this.state.hoveredArea && this.state.hoveredArea.name, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default MapExample; // \trender() {\n// \t\treturn (\n// \t\t\t<div className=\"grid\">\n// \t\t\t\t<div className=\"presenter\">\n// \t\t\t\t\t<div style={{ position: \"relative\" }}>\n// \t\t\t\t\t\t<ImageMapper\n// \t\t\t\t\t\t\tsrc={URL}\n// \t\t\t\t\t\t\tmap={MAP}\n// \t\t\t\t\t\t\twidth={500}\n// \t\t\t\t\t\t\tonLoad={() => this.load()}\n// \t\t\t\t\t\t\tonClick={area => this.clicked(area)}\n// \t\t\t\t\t\t\tonMouseEnter={area => this.enterArea(area)}\n// \t\t\t\t\t\t\tonMouseLeave={area => this.leaveArea(area)}\n// \t\t\t\t\t\t\tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n// \t\t\t\t\t\t\tonImageClick={evt => this.clickedOutside(evt)}\n// \t\t\t\t\t\t\tonImageMouseMove={evt => this.moveOnImage(evt)}\n// \t\t\t\t\t\t\tlineWidth={4}\n// \t\t\t\t\t\t\tstrokeColor={\"white\"}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{this.state.hoveredArea && (\n// \t\t\t\t\t\t\t<span\n// \t\t\t\t\t\t\t\tclassName=\"tooltip\"\n// \t\t\t\t\t\t\t\tstyle={{ ...this.getTipPosition(this.state.hoveredArea) }}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t{this.state.hoveredArea && this.state.hoveredArea.name}\n// \t\t\t\t\t\t\t</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<pre className=\"message\">\n// \t\t\t\t\t\t{this.state.msg ? this.state.msg : null}\n// \t\t\t\t\t</pre>\n// \t\t\t\t\t<pre>{this.state.moveMsg ? this.state.moveMsg : null}</pre>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// });","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/MapExample.js"],"names":["React","ImageMapper","MapExample","Component","constructor","props","state","actions","hoveredArea","msg","moveMsg","load","setState","clicked","area","shape","JSON","stringify","coords","clickedOutside","evt","x","nativeEvent","layerX","y","layerY","moveOnImage","enterArea","name","leaveArea","moveOnArea","getTipPosition","top","center","left","render","URL","MAP","areas","preFillColor","fillColor","_"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import \"./styles.css\";\n\n// import { ImageMap } from \"@qiuz/react-image-map\";\n// import { AreaType } from \"./AreaType\";\n\n// const onMapClick = (area: AreaType, index: number) => {\n//   const tip = `click map${area.href || index + 1}`;\n//   console.log(tip);\n//   alert(tip);\n// };\n\n// // in hooks\n// export default function Example() {\n//   const img =\n//     \"https://qiuziz.github.io/react-image-map/static/media/example.3373acbe.png\";\n\n//   const mapArea = [\n//     { left: \"0%\", top: \"6%\", height: \"12%\", width: \"33%\" },\n//     { left: \"10%\", top: \"6%\", height: \"12%\", width: \"33%\" }\n//   ];\n//   const ImageMapComponent = React.useMemo(\n//     () => (s\n//       <ImageMap\n//         className=\"usage-map\"\n//         src={img}\n//         map={mapArea}\n//         onMapClick={onMapClick}\n//       />\n//     ),\n//     [mapArea, img]\n//   );\n\n//   return <div>{ImageMapComponent}</div>;\n//   }\n\nimport React from \"react\";\nimport ImageMapper from 'react-image-mapper';\n\n  class MapExample extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        actions: this.props.actions,\n        hoveredArea: null,\n        msg: null, \n        moveMsg: null\n      };\n    }\n    state = {\n      actions: []\n    };\n  \n    load() {\n      this.setState({ msg: \"Interact with image !\" });\n    }\n    clicked(area) {\n      this.setState({\n        msg: `You clicked on ${area.shape} at coords ${JSON.stringify(\n          area.coords\n        )} !`\n      });\n    }\n\n    clickedOutside(evt) {\n      const coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n      this.setState({\n        msg: `You clicked on the image at coords ${JSON.stringify(coords)} !`\n      });\n    }\n\n    moveOnImage(evt) {\n      const coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n      this.setState({\n        moveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !`\n      });\n    }\n\n    enterArea(area) {\n      this.setState({\n        hoveredArea: area,\n        msg: `You entered ${area.shape} ${area.name} at coords ${JSON.stringify(\n          area.coords\n        )} !`\n      });\n    }\n\n    leaveArea(area) {\n      this.setState({\n        hoveredArea: null,\n        msg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(\n          area.coords\n        )} !`\n      });\n    }\n\n    moveOnArea(area, evt) {\n      const coords = { x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };\n      this.setState({\n        moveMsg: `You moved on ${area.shape} ${\n          area.name\n        } at coords ${JSON.stringify(coords)} !`\n      });\n    }\n  \n    getTipPosition(area) {\n      return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\n    }\n\n  render() {\n    //console.log('MessageState:' + this.state.actions)\n    //console.log('MessageProps:' + this.props.actions)\n  \n    const URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\"\n  const MAP = {\n    name: \"my-map\",\n    areas: [\n     { name: \"1\", shape: \"poly\", coords: [25,33,27,300,128,240,128,94], preFillColor: \"green\", fillColor: \"blue\"  },\n      { name: \"2\", shape: \"poly\", coords: [219,118,220,210,283,210,284,119], preFillColor: \"pink\"  },\n      { name: \"3\", shape: \"poly\", coords: [381,241,383,94,462,53,457,282], fillColor: \"yellow\"  },\n      { name: \"4\", shape: \"poly\", coords: [245,285,290,285,274,239,249,238], preFillColor: \"red\"  },\n      { name: \"5\", shape: \"circle\", coords: [170, 100, 25 ] },\n    ]\n  }\n\n    return (\n  <div className=\"container\">\n    <ImageMapper src={URL} map={MAP} width={500}\n    \tonLoad={() => this.load()}\n    \tonClick={area => this.clicked(area)}\n    \tonMouseEnter={area => this.enterArea(area)}\n    \tonMouseLeave={area => this.leaveArea(area)}\n    \tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n    \tonImageClick={evt => this.clickedOutside(evt)}\n    \tonImageMouseMove={evt => this.moveOnImage(evt)}\n    />\n    {\n    \tthis.state.hoveredArea &&\n    \t<span className=\"tooltip\"\n    \t    style={{ ...this.getTipPosition(this.state.hoveredArea)}}>\n    \t\t{ this.state.hoveredArea && this.state.hoveredArea.name}\n        <p></p>\n    \t</span>\n    }\n</div>\n    );\n  }\n  }\n  \nexport default MapExample;\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className=\"grid\">\n// \t\t\t\t<div className=\"presenter\">\n// \t\t\t\t\t<div style={{ position: \"relative\" }}>\n// \t\t\t\t\t\t<ImageMapper\n// \t\t\t\t\t\t\tsrc={URL}\n// \t\t\t\t\t\t\tmap={MAP}\n// \t\t\t\t\t\t\twidth={500}\n// \t\t\t\t\t\t\tonLoad={() => this.load()}\n// \t\t\t\t\t\t\tonClick={area => this.clicked(area)}\n// \t\t\t\t\t\t\tonMouseEnter={area => this.enterArea(area)}\n// \t\t\t\t\t\t\tonMouseLeave={area => this.leaveArea(area)}\n// \t\t\t\t\t\t\tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n// \t\t\t\t\t\t\tonImageClick={evt => this.clickedOutside(evt)}\n// \t\t\t\t\t\t\tonImageMouseMove={evt => this.moveOnImage(evt)}\n// \t\t\t\t\t\t\tlineWidth={4}\n// \t\t\t\t\t\t\tstrokeColor={\"white\"}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{this.state.hoveredArea && (\n// \t\t\t\t\t\t\t<span\n// \t\t\t\t\t\t\t\tclassName=\"tooltip\"\n// \t\t\t\t\t\t\t\tstyle={{ ...this.getTipPosition(this.state.hoveredArea) }}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t{this.state.hoveredArea && this.state.hoveredArea.name}\n// \t\t\t\t\t\t\t</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<pre className=\"message\">\n// \t\t\t\t\t\t{this.state.msg ? this.state.msg : null}\n// \t\t\t\t\t</pre>\n// \t\t\t\t\t<pre>{this.state.moveMsg ? this.state.moveMsg : null}</pre>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// });\n"]},"metadata":{},"sourceType":"module"}