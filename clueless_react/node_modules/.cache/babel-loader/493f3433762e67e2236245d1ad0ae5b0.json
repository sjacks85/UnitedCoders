{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Gameboard.js\";\nimport React from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\nvar uniqueIDs = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C1\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C2\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C3\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C4\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C5\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C6\"\n}, //6\n{\n  type: \"weapon\",\n  name: \"Candlestick\",\n  image: \"W1\"\n}, //7\n{\n  type: \"weapon\",\n  name: \"Revolver\",\n  image: \"W4\"\n}, //8\n{\n  type: \"weapon\",\n  name: \"Knife\",\n  image: \"W2\"\n}, //9\n{\n  type: \"weapon\",\n  name: \"Pipe\",\n  image: \"W3\"\n}, //10\n{\n  type: \"weapon\",\n  name: \"Rope\",\n  image: \"W5\"\n}, //11\n{\n  type: \"weapon\",\n  name: \"Wrench\",\n  image: \"W6\"\n}, //12\n{\n  type: \"room\",\n  name: \"Study\",\n  roomId: 33,\n  gridX: 4,\n  gridY: 4\n}, //13\n{\n  type: \"room\",\n  name: \"Hall\",\n  roomId: 32,\n  gridX: 2,\n  gridY: 4\n}, //14\n{\n  type: \"room\",\n  name: \"Lounge\",\n  roomId: 31,\n  gridX: 0,\n  gridY: 4\n}, //15\n{\n  type: \"room\",\n  name: \"Dinning\",\n  roomId: 21,\n  gridX: 0,\n  gridY: 2\n}, //16\n{\n  type: \"room\",\n  name: \"Billiard\",\n  roomId: 22,\n  gridX: 2,\n  gridY: 2\n}, //17\n{\n  type: \"room\",\n  name: \"Library\",\n  roomId: 23,\n  gridX: 4,\n  gridY: 2\n}, //18\n{\n  type: \"room\",\n  name: \"Conservatory\",\n  roomId: 13,\n  gridX: 4,\n  gridY: 0\n}, //19\n{\n  type: \"room\",\n  name: \"Ballroom\",\n  roomId: 12,\n  gridX: 2,\n  gridY: 0\n}, //20\n{\n  type: \"room\",\n  name: \"Kitchen\",\n  roomId: 11,\n  gridX: 0,\n  gridY: 0\n}];\nvar startLocations = [//0 Miss Scarlet\n{\n  currentX: 0,\n  currentY: 3\n}, // 1\n{\n  currentX: 4,\n  currentY: 1\n}, // 2\n{\n  currentX: 1,\n  currentY: 2\n}, //3\n{\n  currentX: 1,\n  currentY: 0\n}, //4\n{\n  currentX: 3,\n  currentY: 0\n}, //5\n{\n  currentX: 4,\n  currentY: 3\n}, //Weapons\n{\n  currentX: 0,\n  currentY: 0\n}, {\n  currentX: 4,\n  currentY: 0\n}, {\n  currentX: 0,\n  currentY: 4\n}, {\n  currentX: 4,\n  currentY: 0\n}, {\n  currentX: 2,\n  currentY: 4\n}, {\n  currentX: 4,\n  currentY: 4\n}];\nvar startGrid = [[{\n  roomId: \"11\",\n  roomName: \"Kitchen\",\n  roomObjs: [\"6\"]\n}, {\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"12\",\n  roomName: \"Ballroom\",\n  roomObjs: []\n}, {\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomObjs: [\"0\"]\n}, {\n  roomId: \"13\",\n  roomName: \"Conservatory\",\n  roomObjs: [\"8\"]\n}], [{\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomObjs: [\"3\"]\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomObjs: [\"2\"]\n}], [{\n  roomId: \"21\",\n  roomName: \"Dinning Room\",\n  roomObjs: [\"9\"]\n}, {\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"22\",\n  roomName: \"Billiard Room\",\n  roomObjs: []\n}, {\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"23\",\n  roomName: \"Library\",\n  roomObjs: [\"10\"]\n}], [{\n  roomId: \"2131\",\n  roomName: \"Hallway\",\n  roomObjs: [\"4\"]\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"2232\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"2333\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}], [{\n  roomId: \"31\",\n  roomName: \"Lounge\",\n  roomObjs: [\"7\"]\n}, {\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomObjs: [\"1\"]\n}, {\n  roomId: \"32\",\n  roomName: \"Hall\",\n  roomObjs: []\n}, {\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomObjs: [\"5\"]\n}, {\n  roomId: \"33\",\n  roomName: \"Study\",\n  roomObjs: [\"11\"]\n}]];\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character_id: -1,\n      cards: {},\n      // Gameboard grid\n      grid: startGrid,\n      // Tracks all player and weapon locations\n      locations: startLocations,\n      // Tracks current player location\n      currentX: -1,\n      currentY: -1,\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.inHallway = this.inHallway.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n\n      if (found) {\n        alert(\"Valid movement\"); //Send movement request with requested room\n\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({\n          movementTurn: false,\n          validOptions: []\n        });\n      } else {\n        alert(\"Not valid movement\");\n      }\n    } else {\n      alert(\"Not your movement turn\");\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n    console.log(\"CHARACTER \" + props.character_id);\n\n    if (props.player_id != 0 && state.currentX == -1 && state.currentY == -1) {\n      console.log(\"BMOVEMENT \" + newCurrentX);\n      console.log(\"BMOVEMENT \" + newCurrentY);\n      newCurrentX = state.locations[props.character_id].currentX;\n      newCurrentY = state.locations[props.character_id].currentY;\n      console.log(\"AMOVEMENT \" + newCurrentX);\n      console.log(\"AMOVEMENT \" + newCurrentY);\n    }\n\n    var first = props.actions[0]; //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        console.log(\"Found movement broadcast\");\n\n        if (first.message.character_moved === true) {\n          console.log(\"Character move\");\n          var objId = Number(first.message.moved_character);\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if (objId = props.character_id) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n\n          console.log(\"MOVEMENT \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"MOVEMENT \" + JSON.stringify(newGrid[nx][ny]));\n          console.log(\"MOVEMENT \" + newLocations[objId].currentX);\n          console.log(\"MOVEMENT \" + newLocations[objId].currentY);\n          console.log(\"MOVEMENT \" + newCurrentX);\n          console.log(\"MOVEMENT \" + newCurrentY);\n        }\n\n        if (first.message.weapon_moved === true) {\n          console.log(\"Weapon move\");\n          var objId = Number(first.message.moved_weapon);\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if (objId = props.character_id) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      player_id: props.player_id,\n      character_id: props.character_id,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions\n    };\n  }\n\n  displayPlayerInfo() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 7\n      }\n    }, \"Player=\", this.props.player_id, \" | Character=\", uniqueIDs[this.props.character_id].name, \" | X=\", \" \", this.state.locations[this.props.character_id].currentX, \" | Y=\", \" \", this.state.locations[this.props.character_id].currentY);\n  }\n\n  inHallway() {\n    var cx = this.state.currentX;\n    var cy = this.state.currentY; //console.log(\"HALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n    // if (cx != -1 & cy != -1) {\n    //   return false;\n    // } else {\n    //   var name = this.state.grid[cx][cy].roomName;\n    //   console.log(\"HALLWAY: x\" + cx + \" y\" + cy);\n    //   console.log(\"HALLWAY: \" + name);\n    //   //console.log(\"PLAYER: x\" + cx + \" y\" + cy);\n    //   return false;\n    // }\n\n    return false;\n  }\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\"\n    };\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 9\n        }\n      }, r.map((d, j) => {\n        return /*#__PURE__*/React.createElement(Room, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          },\n          contents: d,\n          x: i,\n          y: j,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }\n        });\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 7\n      }\n    }, this.props.player_id != 0 && this.displayPlayerInfo(), /*#__PURE__*/React.createElement(Box, {\n      actions: this.props.actions,\n      inHallway: this.inHallway(),\n      cards: this.props.cards,\n      turn: this.props.turn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }\n    }, rows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default Gameboard;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Gameboard.js"],"names":["React","Room","Box","makeMovement","uniqueIDs","type","name","image","roomId","gridX","gridY","startLocations","currentX","currentY","startGrid","roomName","roomObjs","Gameboard","Component","constructor","props","state","actions","player_id","character_id","cards","grid","locations","validOptions","movementTurn","handleOnClick","bind","inHallway","dims","parseFloat","length","x","y","myArray","i","requestedLoc","found","JSON","stringify","location","index","alert","movement_id","setState","getDerivedStateFromProps","newcount","count","newLocations","newGrid","newCurrentX","newCurrentY","newmovementTurn","newvalidOptions","console","log","first","undefined","message_type","message","character_moved","objId","Number","moved_character","cx","cy","nx","new_location_x","ny","new_location_y","indexOf","splice","push","weapon_moved","moved_weapon","valid_locations","playerX","playerY","displayPlayerInfo","render","style","margin","width","height","backgroundColor","color","fontSize","tableLayout","rows","map","r","d","j","textAlign","turn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\n\nvar uniqueIDs = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C1\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C2\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C3\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C4\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C5\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C6\" },\n  //6\n  { type: \"weapon\", name: \"Candlestick\", image: \"W1\" },\n  //7\n  { type: \"weapon\", name: \"Revolver\", image: \"W4\" },\n  //8\n  { type: \"weapon\", name: \"Knife\", image: \"W2\" },\n  //9\n  { type: \"weapon\", name: \"Pipe\", image: \"W3\" },\n  //10\n  { type: \"weapon\", name: \"Rope\", image: \"W5\" },\n  //11\n  { type: \"weapon\", name: \"Wrench\", image: \"W6\" },\n  //12\n  { type: \"room\", name: \"Study\", roomId: 33, gridX: 4, gridY: 4 },\n  //13\n  { type: \"room\", name: \"Hall\", roomId: 32, gridX: 2, gridY: 4 },\n  //14\n  { type: \"room\", name: \"Lounge\", roomId: 31, gridX: 0, gridY: 4 },\n  //15\n  { type: \"room\", name: \"Dinning\", roomId: 21, gridX: 0, gridY: 2 },\n  //16\n  { type: \"room\", name: \"Billiard\", roomId: 22, gridX: 2, gridY: 2 },\n  //17\n  { type: \"room\", name: \"Library\", roomId: 23, gridX: 4, gridY: 2 },\n  //18\n  { type: \"room\", name: \"Conservatory\", roomId: 13, gridX: 4, gridY: 0 },\n  //19\n  { type: \"room\", name: \"Ballroom\", roomId: 12, gridX: 2, gridY: 0 },\n  //20\n  { type: \"room\", name: \"Kitchen\", roomId: 11, gridX: 0, gridY: 0 },\n];\n\nvar startLocations = [\n  //0 Miss Scarlet\n  {\n    currentX: 0,\n    currentY: 3,\n  },\n  // 1\n  {\n    currentX: 4,\n    currentY: 1,\n  },\n  // 2\n  {\n    currentX: 1,\n    currentY: 2,\n  },\n  //3\n  {\n    currentX: 1,\n    currentY: 0,\n  },\n  //4\n  {\n    currentX: 3,\n    currentY: 0,\n  },\n  //5\n  {\n    currentX: 4,\n    currentY: 3,\n  },\n  //Weapons\n  {\n    currentX: 0,\n    currentY: 0,\n  },\n  {\n    currentX: 4,\n    currentY: 0,\n  },\n  {\n    currentX: 0,\n    currentY: 4,\n  },\n  {\n    currentX: 4,\n    currentY: 0,\n  },\n  {\n    currentX: 2,\n    currentY: 4,\n  },\n  {\n    currentX: 4,\n    currentY: 4,\n  },\n];\n\nvar startGrid = [\n  [\n    {\n      roomId: \"11\",\n      roomName: \"Kitchen\",\n      roomObjs: [\"6\"],\n    },\n    {\n      roomId: \"1112\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"12\",\n      roomName: \"Ballroom\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"1213\",\n      roomName: \"Hallway\",\n      roomObjs: [\"0\"],\n    },\n    {\n      roomId: \"13\",\n      roomName: \"Conservatory\",\n      roomObjs: [\"8\"],\n    },\n  ],\n  [\n    {\n      roomId: \"1121\",\n      roomName: \"Hallway\",\n      roomObjs: [\"3\"],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"1222\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"1323\",\n      roomName: \"Hallway\",\n      roomObjs: [\"2\"],\n    },\n  ],\n  [\n    {\n      roomId: \"21\",\n      roomName: \"Dinning Room\",\n      roomObjs: [\"9\"],\n    },\n    {\n      roomId: \"2122\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"22\",\n      roomName: \"Billiard Room\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"2223\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"23\",\n      roomName: \"Library\",\n      roomObjs: [\"10\"],\n    },\n  ],\n  [\n    {\n      roomId: \"2131\",\n      roomName: \"Hallway\",\n      roomObjs: [\"4\"],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"2232\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"2333\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n  ],\n  [\n    {\n      roomId: \"31\",\n      roomName: \"Lounge\",\n      roomObjs: [\"7\"],\n    },\n    {\n      roomId: \"3132\",\n      roomName: \"Hallway\",\n      roomObjs: [\"1\"],\n    },\n    {\n      roomId: \"32\",\n      roomName: \"Hall\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"3233\",\n      roomName: \"Hallway\",\n      roomObjs: [\"5\"],\n    },\n    {\n      roomId: \"33\",\n      roomName: \"Study\",\n      roomObjs: [\"11\"],\n    },\n  ],\n];\n\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character_id: -1,\n      cards: {},\n\n      // Gameboard grid\n      grid: startGrid,\n\n      // Tracks all player and weapon locations\n      locations: startLocations,\n\n      // Tracks current player location\n      currentX: -1,\n      currentY: -1,\n\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false,\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.inHallway = this.inHallway.bind(this);\n\n    this.dims = [\n      parseFloat(500 / this.state.grid.length),\n      parseFloat(500 / this.state.grid[0].length),\n    ];\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found =\n          JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n      if (found) {\n        alert(\"Valid movement\");\n\n        //Send movement request with requested room\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({ movementTurn: false, validOptions: [] });\n      } else {\n        alert(\"Not valid movement\");\n      }\n    } else {\n      alert(\"Not your movement turn\");\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n\n    console.log(\"CHARACTER \" + props.character_id)\n    if (props.player_id != 0 && state.currentX == -1 && state.currentY == -1) {\n      \n      console.log(\"BMOVEMENT \" + newCurrentX)\n      console.log(\"BMOVEMENT \" + newCurrentY)\n      newCurrentX = state.locations[props.character_id].currentX;\n      newCurrentY = state.locations[props.character_id].currentY;\n      console.log(\"AMOVEMENT \" + newCurrentX)\n      console.log(\"AMOVEMENT \" + newCurrentY)\n    }\n\n    var first = props.actions[0];\n    //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        console.log(\"Found movement broadcast\");\n        if (first.message.character_moved === true) {\n          console.log(\"Character move\")\n          var objId = Number(first.message.moved_character);\n\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if ((objId = props.character_id)) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n          console.log(\"MOVEMENT \" + JSON.stringify(newGrid[cx][cy]))\n          console.log(\"MOVEMENT \" + JSON.stringify(newGrid[nx][ny]))\n          console.log(\"MOVEMENT \" + newLocations[objId].currentX)\n          console.log(\"MOVEMENT \" + newLocations[objId].currentY)\n          console.log(\"MOVEMENT \" + newCurrentX)\n          console.log(\"MOVEMENT \" + newCurrentY)\n        }\n\n        if (first.message.weapon_moved === true) {\n          console.log(\"Weapon move\")\n          var objId = Number(first.message.moved_weapon);\n\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if ((objId = props.character_id)) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      player_id: props.player_id,\n      character_id: props.character_id,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions,\n    };\n  }\n\n  displayPlayerInfo() {\n    return (\n      <p>\n        Player={this.props.player_id} | Character={uniqueIDs[this.props.character_id].name} | X={\" \"}\n        {this.state.locations[this.props.character_id].currentX} | Y={\" \"}\n        {this.state.locations[this.props.character_id].currentY}\n      </p>\n    );\n  }\n\n  inHallway() {\n    var cx = this.state.currentX;\n    var cy = this.state.currentY;\n    //console.log(\"HALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n    // if (cx != -1 & cy != -1) {\n    //   return false;\n    // } else {\n    //   var name = this.state.grid[cx][cy].roomName;\n    //   console.log(\"HALLWAY: x\" + cx + \" y\" + cy);\n    //   console.log(\"HALLWAY: \" + name);\n    //   //console.log(\"PLAYER: x\" + cx + \" y\" + cy);\n  \n    //   return false;\n    // }\n    return false;\n  }\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\",\n    };\n\n    const rows = this.state.grid.map((r, i) => {\n      return (\n        <tr key={\"row_\" + i}>\n          {r.map((d, j) => {\n            return (\n              <Room\n                key={i + \"_\" + j}\n                dims={this.dims}\n                onClick={() => {\n                  this.handleOnClick(i, j);\n                }}\n                contents={d}\n                x={i}\n                y={j}\n              />\n            );\n          })}\n        </tr>\n      );\n    });\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        {this.props.player_id != 0 && this.displayPlayerInfo()}\n        <Box\n          actions={this.props.actions}\n          inHallway={this.inHallway()}\n          cards={this.props.cards}\n          turn={this.props.turn}\n        />\n        <br />\n        <br />\n        <br />\n        <table cellSpacing=\"0\" id=\"table\" style={style}>\n          <tbody>{rows}</tbody>\n        </table>\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Gameboard;\n"]},"metadata":{},"sourceType":"module"}