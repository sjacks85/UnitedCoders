{"ast":null,"code":"var _jsxFileName = \"/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/Log.js\";\nimport React from 'react';\nimport './Divider.css';\nimport UserInput from './UserInput';\nimport Message from './Message';\n\nclass Log extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addLog = () => {\n      alert(\"addLog\");\n      console.log(this.state); //this.setState({array: this.state.array.concat([{type: 'broadcast', message: \"amanda\"}])})\n\n      let newElement = [{\n        type: 'broadcast',\n        message: \"amanda\"\n      }];\n      this.setState({\n        array: newElement.concat(this.state.array)\n      }); //let temp = [{type: 'broadcast', message: \"amanda\"}].concat(this.state.array)\n      //this.state = {array: temp};\n\n      console.log(\"AddLog \" + this.state);\n    };\n\n    this.state = {\n      array: [{\n        type: 'broadcast',\n        message: \"austin\"\n      }, {\n        type: 'broadcast',\n        message: \"austin\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {//this.addLog()\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.state.array.map(elem => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, elem.type, \": \", elem.message)));\n  }\n\n}\n\nexport default Log;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/Log.js"],"names":["React","UserInput","Message","Log","Component","constructor","props","addLog","alert","console","log","state","newElement","type","message","setState","array","concat","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","render","map","elem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,MApBmB,GAoBV,MAAM;AAEbC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EAHa,CAIb;;AACA,UAAIC,UAAU,GAAG,CAAC;AAACC,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEJ,UAAU,CAACK,MAAX,CAAkB,KAAKN,KAAL,CAAWK,KAA7B;AAAR,OAAd,EANa,CAQb;AACA;;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKC,KAA7B;AAEC,KAhCgB;;AAEjB,SAAKA,KAAL,GAAa;AAACK,MAAAA,KAAK,EAAE,CAAC;AAACH,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OAAD,EAAwC;AAACD,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OAAxC;AAAR,KAAb;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG,CACL;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWK,KAAX,CAAiBS,GAAjB,CAAqBC,IAAI,iBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAI,CAACb,IAAT,QAAiBa,IAAI,CAACZ,OAAtB,CADD,CADH,CADA;AAOD;;AA3C6B;;AA8ClC,eAAeX,GAAf","sourcesContent":["import React from 'react';\nimport './Divider.css';\nimport UserInput from './UserInput';\nimport Message from './Message';\n\nclass Log extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {array: [{type: 'broadcast', message: \"austin\"},{type: 'broadcast', message: \"austin\"}]};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    //this.addLog()\n  }\n\n  addLog = () => {\n\n    alert(\"addLog\")\n    console.log(this.state)\n    //this.setState({array: this.state.array.concat([{type: 'broadcast', message: \"amanda\"}])})\n    let newElement = [{type: 'broadcast', message: \"amanda\"}];\n    this.setState({array: newElement.concat(this.state.array)})\n\n    //let temp = [{type: 'broadcast', message: \"amanda\"}].concat(this.state.array)\n    //this.state = {array: temp};\n    console.log(\"AddLog \" + this.state)\n\n    };\n\n  render() {\n      return (\n      <div>\n        {this.state.array.map(elem => (\n          <p>{elem.type}: {elem.message}</p>\n        ))}\n      </div>\n      );\n    }\n  }\n\nexport default Log;\n"]},"metadata":{},"sourceType":"module"}