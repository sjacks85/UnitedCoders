{"ast":null,"code":"var camelCase = require('camelcase');\n\nvar decamelize = require('decamelize');\n\nvar path = require('path');\n\nvar tokenizeArgString = require('./lib/tokenize-arg-string');\n\nvar util = require('util');\n\nfunction parse(args, opts) {\n  if (!opts) opts = {}; // allow a string argument to be passed in rather\n  // than an argv array.\n\n  args = tokenizeArgString(args); // aliases might have transitive relationships, normalize this.\n\n  var aliases = combineAliases(opts.alias || {});\n  var configuration = Object.assign({\n    'short-option-groups': true,\n    'camel-case-expansion': true,\n    'dot-notation': true,\n    'parse-numbers': true,\n    'boolean-negation': true,\n    'negation-prefix': 'no-',\n    'duplicate-arguments-array': true,\n    'flatten-duplicate-arrays': true,\n    'populate--': false,\n    'combine-arrays': false,\n    'set-placeholder-key': false,\n    'halt-at-non-option': false,\n    'strip-aliased': false,\n    'strip-dashed': false\n  }, opts.configuration);\n  var defaults = opts.default || {};\n  var configObjects = opts.configObjects || [];\n  var envPrefix = opts.envPrefix;\n  var notFlagsOption = configuration['populate--'];\n  var notFlagsArgv = notFlagsOption ? '--' : '_';\n  var newAliases = {}; // allow a i18n handler to be passed in, default to a fake one (util.format).\n\n  var __ = opts.__ || util.format;\n\n  var error = null;\n  var flags = {\n    aliases: {},\n    arrays: {},\n    bools: {},\n    strings: {},\n    numbers: {},\n    counts: {},\n    normalize: {},\n    configs: {},\n    defaulted: {},\n    nargs: {},\n    coercions: {},\n    keys: []\n  };\n  var negative = /^-[0-9]+(\\.[0-9]+)?/;\n  var negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)');\n  [].concat(opts.array).filter(Boolean).forEach(function (opt) {\n    var key = opt.key || opt; // assign to flags[bools|strings|numbers]\n\n    const assignment = Object.keys(opt).map(function (key) {\n      return {\n        boolean: 'bools',\n        string: 'strings',\n        number: 'numbers'\n      }[key];\n    }).filter(Boolean).pop(); // assign key to be coerced\n\n    if (assignment) {\n      flags[assignment][key] = true;\n    }\n\n    flags.arrays[key] = true;\n    flags.keys.push(key);\n  });\n  [].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true;\n    flags.keys.push(key);\n  });\n  [].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true;\n    flags.keys.push(key);\n  });\n  [].concat(opts.number).filter(Boolean).forEach(function (key) {\n    flags.numbers[key] = true;\n    flags.keys.push(key);\n  });\n  [].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true;\n    flags.keys.push(key);\n  });\n  [].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true;\n    flags.keys.push(key);\n  });\n  Object.keys(opts.narg || {}).forEach(function (k) {\n    flags.nargs[k] = opts.narg[k];\n    flags.keys.push(k);\n  });\n  Object.keys(opts.coerce || {}).forEach(function (k) {\n    flags.coercions[k] = opts.coerce[k];\n    flags.keys.push(k);\n  });\n\n  if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n    ;\n    [].concat(opts.config).filter(Boolean).forEach(function (key) {\n      flags.configs[key] = true;\n    });\n  } else {\n    Object.keys(opts.config || {}).forEach(function (k) {\n      flags.configs[k] = opts.config[k];\n    });\n  } // create a lookup table that takes into account all\n  // combinations of aliases: {f: ['foo'], foo: ['f']}\n\n\n  extendAliases(opts.key, aliases, opts.default, flags.arrays); // apply default values to all aliases.\n\n  Object.keys(defaults).forEach(function (key) {\n    (flags.aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key];\n    });\n  });\n  var argv = {\n    _: []\n  };\n  Object.keys(flags.bools).forEach(function (key) {\n    if (Object.prototype.hasOwnProperty.call(defaults, key)) {\n      setArg(key, defaults[key]);\n      setDefaulted(key);\n    }\n  });\n  var notFlags = [];\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    var broken;\n    var key;\n    var letters;\n    var m;\n    var next;\n    var value; // -- separated by =\n\n    if (arg.match(/^--.+=/) || !configuration['short-option-groups'] && arg.match(/^-.+=/)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/); // nargs format = '--f=monkey washing cat'\n\n      if (checkAllAliases(m[1], flags.nargs)) {\n        args.splice(i + 1, 0, m[2]);\n        i = eatNargs(i, m[1], args); // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, 0, m[2]);\n        i = eatArray(i, m[1], args);\n      } else {\n        setArg(m[1], m[2]);\n      }\n    } else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {\n      key = arg.match(negatedBoolean)[1];\n      setArg(key, false); // -- seperated by space.\n    } else if (arg.match(/^--.+/) || !configuration['short-option-groups'] && arg.match(/^-[^-]+/)) {\n      key = arg.match(/^--?(.+)/)[1]; // nargs format = '--foo a b c'\n\n      if (checkAllAliases(key, flags.nargs)) {\n        i = eatNargs(i, key, args); // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args);\n      } else {\n        next = flags.nargs[key] === 0 ? undefined : args[i + 1];\n\n        if (next !== undefined && (!next.match(/^-/) || next.match(negative)) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n          setArg(key, next);\n          i++;\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next);\n          i++;\n        } else {\n          setArg(key, defaultValue(key));\n        }\n      } // dot-notation flag seperated by '='.\n\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/);\n      setArg(m[1], m[2]); // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1];\n      key = arg.match(/^-(.\\..+)/)[1];\n\n      if (next !== undefined && !next.match(/^-/) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n        setArg(key, next);\n        i++;\n      } else {\n        setArg(key, defaultValue(key));\n      }\n    } else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n      letters = arg.slice(1, -1).split('');\n      broken = false;\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2);\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3);\n          key = letters[j]; // nargs format = '-f=monkey washing cat'\n\n          if (checkAllAliases(key, flags.nargs)) {\n            args.splice(i + 1, 0, value);\n            i = eatNargs(i, key, args); // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value);\n            i = eatArray(i, key, args);\n          } else {\n            setArg(key, value);\n          }\n\n          broken = true;\n          break;\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next);\n          continue;\n        } // current letter is an alphabetic character and next value is a number\n\n\n        if (/[A-Za-z]/.test(letters[j]) && /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next);\n          broken = true;\n          break;\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], next);\n          broken = true;\n          break;\n        } else {\n          setArg(letters[j], defaultValue(letters[j]));\n        }\n      }\n\n      key = arg.slice(-1)[0];\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, flags.nargs)) {\n          i = eatNargs(i, key, args); // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args);\n        } else {\n          next = args[i + 1];\n\n          if (next !== undefined && (!/^(-|--)[^-]/.test(next) || next.match(negative)) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n            setArg(key, next);\n            i++;\n          } else if (/^(true|false)$/.test(next)) {\n            setArg(key, next);\n            i++;\n          } else {\n            setArg(key, defaultValue(key));\n          }\n        }\n      }\n    } else if (arg === '--') {\n      notFlags = args.slice(i + 1);\n      break;\n    } else if (configuration['halt-at-non-option']) {\n      notFlags = args.slice(i);\n      break;\n    } else {\n      argv._.push(maybeCoerceNumber('_', arg));\n    }\n  } // order of precedence:\n  // 1. command line arg\n  // 2. value from env var\n  // 3. value from config file\n  // 4. value from config objects\n  // 5. configured default value\n\n\n  applyEnvVars(argv, true); // special case: check env vars that point to config file\n\n  applyEnvVars(argv, false);\n  setConfig(argv);\n  setConfigObjects();\n  applyDefaultsAndAliases(argv, flags.aliases, defaults);\n  applyCoercions(argv);\n  if (configuration['set-placeholder-key']) setPlaceholderKeys(argv); // for any counts either not in args or without an explicit default, set to 0\n\n  Object.keys(flags.counts).forEach(function (key) {\n    if (!hasKey(argv, key.split('.'))) setArg(key, 0);\n  }); // '--' defaults to undefined.\n\n  if (notFlagsOption && notFlags.length) argv[notFlagsArgv] = [];\n  notFlags.forEach(function (key) {\n    argv[notFlagsArgv].push(key);\n  });\n\n  if (configuration['camel-case-expansion'] && configuration['strip-dashed']) {\n    Object.keys(argv).filter(key => key !== '--' && key.includes('-')).forEach(key => {\n      delete argv[key];\n    });\n  }\n\n  if (configuration['strip-aliased']) {\n    // XXX Switch to [].concat(...Object.values(aliases)) once node.js 6 is dropped\n    ;\n    [].concat(...Object.keys(aliases).map(k => aliases[k])).forEach(alias => {\n      if (configuration['camel-case-expansion']) {\n        delete argv[alias.split('.').map(prop => camelCase(prop)).join('.')];\n      }\n\n      delete argv[alias];\n    });\n  } // how many arguments should we consume, based\n  // on the nargs option?\n\n\n  function eatNargs(i, key, args) {\n    var ii;\n    const toEat = checkAllAliases(key, flags.nargs); // nargs will not consume flag arguments, e.g., -abc, --foo,\n    // and terminates when one is observed.\n\n    var available = 0;\n\n    for (ii = i + 1; ii < args.length; ii++) {\n      if (!args[ii].match(/^-[^0-9]/)) available++;else break;\n    }\n\n    if (available < toEat) error = Error(__('Not enough arguments following: %s', key));\n    const consumed = Math.min(available, toEat);\n\n    for (ii = i + 1; ii < consumed + i + 1; ii++) {\n      setArg(key, args[ii]);\n    }\n\n    return i + consumed;\n  } // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n\n\n  function eatArray(i, key, args) {\n    var start = i + 1;\n    var argsToSet = [];\n    var multipleArrayFlag = i > 0;\n\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii]) && !negative.test(args[ii])) {\n        if (ii === start) {\n          setArg(key, defaultForType('array'));\n        }\n\n        multipleArrayFlag = true;\n        break;\n      }\n\n      i = ii;\n      argsToSet.push(args[ii]);\n    }\n\n    if (multipleArrayFlag) {\n      setArg(key, argsToSet.map(function (arg) {\n        return processValue(key, arg);\n      }));\n    } else {\n      argsToSet.forEach(function (arg) {\n        setArg(key, arg);\n      });\n    }\n\n    return i;\n  }\n\n  function setArg(key, val) {\n    unsetDefaulted(key);\n\n    if (/-/.test(key) && configuration['camel-case-expansion']) {\n      var alias = key.split('.').map(function (prop) {\n        return camelCase(prop);\n      }).join('.');\n      addNewAlias(key, alias);\n    }\n\n    var value = processValue(key, val);\n    var splitKey = key.split('.');\n    setKey(argv, splitKey, value); // handle populating aliases of the full key\n\n    if (flags.aliases[key] && flags.aliases[key].forEach) {\n      flags.aliases[key].forEach(function (x) {\n        x = x.split('.');\n        setKey(argv, x, value);\n      });\n    } // handle populating aliases of the first element of the dot-notation key\n\n\n    if (splitKey.length > 1 && configuration['dot-notation']) {\n      ;\n      (flags.aliases[splitKey[0]] || []).forEach(function (x) {\n        x = x.split('.'); // expand alias with nested objects in key\n\n        var a = [].concat(splitKey);\n        a.shift(); // nuke the old key.\n\n        x = x.concat(a);\n        setKey(argv, x, value);\n      });\n    } // Set normalize getter and setter when key is in 'normalize' but isn't an array\n\n\n    if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n      var keys = [key].concat(flags.aliases[key] || []);\n      keys.forEach(function (key) {\n        argv.__defineSetter__(key, function (v) {\n          val = path.normalize(v);\n        });\n\n        argv.__defineGetter__(key, function () {\n          return typeof val === 'string' ? path.normalize(val) : val;\n        });\n      });\n    }\n  }\n\n  function addNewAlias(key, alias) {\n    if (!(flags.aliases[key] && flags.aliases[key].length)) {\n      flags.aliases[key] = [alias];\n      newAliases[alias] = true;\n    }\n\n    if (!(flags.aliases[alias] && flags.aliases[alias].length)) {\n      addNewAlias(alias, key);\n    }\n  }\n\n  function processValue(key, val) {\n    // strings may be quoted, clean this up as we assign values.\n    if (typeof val === 'string' && (val[0] === \"'\" || val[0] === '\"') && val[val.length - 1] === val[0]) {\n      val = val.substring(1, val.length - 1);\n    } // handle parsing boolean arguments --foo=true --bar false.\n\n\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true';\n    }\n\n    var value = maybeCoerceNumber(key, val); // increment a count given as arg (either no value or value parsed as boolean)\n\n    if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n      value = increment;\n    } // Set normalized value when key is in 'normalize' and in 'arrays'\n\n\n    if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n      if (Array.isArray(val)) value = val.map(path.normalize);else value = path.normalize(val);\n    }\n\n    return value;\n  }\n\n  function maybeCoerceNumber(key, value) {\n    if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.coercions)) {\n      const shouldCoerceNumber = isNumber(value) && configuration['parse-numbers'] && Number.isSafeInteger(Math.floor(value));\n      if (shouldCoerceNumber || !isUndefined(value) && checkAllAliases(key, flags.numbers)) value = Number(value);\n    }\n\n    return value;\n  } // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n\n\n  function setConfig(argv) {\n    var configLookup = {}; // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n\n    applyDefaultsAndAliases(configLookup, flags.aliases, defaults);\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey];\n\n      if (configPath) {\n        try {\n          var config = null;\n          var resolvedConfigPath = path.resolve(process.cwd(), configPath);\n\n          if (typeof flags.configs[configKey] === 'function') {\n            try {\n              config = flags.configs[configKey](resolvedConfigPath);\n            } catch (e) {\n              config = e;\n            }\n\n            if (config instanceof Error) {\n              error = config;\n              return;\n            }\n          } else {\n            config = require(resolvedConfigPath);\n          }\n\n          setConfigObject(config);\n        } catch (ex) {\n          if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath));\n        }\n      }\n    });\n  } // set args from config object.\n  // it recursively checks nested objects.\n\n\n  function setConfigObject(config, prev) {\n    Object.keys(config).forEach(function (key) {\n      var value = config[key];\n      var fullKey = prev ? prev + '.' + key : key; // if the value is an inner object and we have dot-notation\n      // enabled, treat inner objects in config the same as\n      // heavily nested dot notations (foo.bar.apple).\n\n      if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {\n        // if the value is an object but not an array, check nested object\n        setConfigObject(value, fullKey);\n      } else {\n        // setting arguments via CLI takes precedence over\n        // values within the config file.\n        if (!hasKey(argv, fullKey.split('.')) || flags.defaulted[fullKey] || flags.arrays[fullKey] && configuration['combine-arrays']) {\n          setArg(fullKey, value);\n        }\n      }\n    });\n  } // set all config objects passed in opts\n\n\n  function setConfigObjects() {\n    if (typeof configObjects === 'undefined') return;\n    configObjects.forEach(function (configObject) {\n      setConfigObject(configObject);\n    });\n  }\n\n  function applyEnvVars(argv, configOnly) {\n    if (typeof envPrefix === 'undefined') return;\n    var prefix = typeof envPrefix === 'string' ? envPrefix : '';\n    Object.keys(process.env).forEach(function (envVar) {\n      if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n        // get array of nested keys and convert them to camel case\n        var keys = envVar.split('__').map(function (key, i) {\n          if (i === 0) {\n            key = key.substring(prefix.length);\n          }\n\n          return camelCase(key);\n        });\n\n        if ((configOnly && flags.configs[keys.join('.')] || !configOnly) && (!hasKey(argv, keys) || flags.defaulted[keys.join('.')])) {\n          setArg(keys.join('.'), process.env[envVar]);\n        }\n      }\n    });\n  }\n\n  function applyCoercions(argv) {\n    var coerce;\n    var applied = {};\n    Object.keys(argv).forEach(function (key) {\n      if (!applied.hasOwnProperty(key)) {\n        // If we haven't already coerced this option via one of its aliases\n        coerce = checkAllAliases(key, flags.coercions);\n\n        if (typeof coerce === 'function') {\n          try {\n            var value = coerce(argv[key]);\n            [].concat(flags.aliases[key] || [], key).forEach(ali => {\n              applied[ali] = argv[ali] = value;\n            });\n          } catch (err) {\n            error = err;\n          }\n        }\n      }\n    });\n  }\n\n  function setPlaceholderKeys(argv) {\n    flags.keys.forEach(key => {\n      // don't set placeholder keys for dot notation options 'foo.bar'.\n      if (~key.indexOf('.')) return;\n      if (typeof argv[key] === 'undefined') argv[key] = undefined;\n    });\n    return argv;\n  }\n\n  function applyDefaultsAndAliases(obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key]);\n        (aliases[key] || []).forEach(function (x) {\n          if (hasKey(obj, x.split('.'))) return;\n          setKey(obj, x.split('.'), defaults[key]);\n        });\n      }\n    });\n  }\n\n  function hasKey(obj, keys) {\n    var o = obj;\n    if (!configuration['dot-notation']) keys = [keys.join('.')];\n    keys.slice(0, -1).forEach(function (key) {\n      o = o[key] || {};\n    });\n    var key = keys[keys.length - 1];\n    if (typeof o !== 'object') return false;else return key in o;\n  }\n\n  function setKey(obj, keys, value) {\n    var o = obj;\n    if (!configuration['dot-notation']) keys = [keys.join('.')];\n    keys.slice(0, -1).forEach(function (key, index) {\n      // TODO(bcoe): in the next major version of yargs, switch to\n      // Object.create(null) for dot notation:\n      key = sanitizeKey(key);\n\n      if (typeof o === 'object' && o[key] === undefined) {\n        o[key] = {};\n      }\n\n      if (typeof o[key] !== 'object' || Array.isArray(o[key])) {\n        // ensure that o[key] is an array, and that the last item is an empty object.\n        if (Array.isArray(o[key])) {\n          o[key].push({});\n        } else {\n          o[key] = [o[key], {}];\n        } // we want to update the empty object at the end of the o[key] array, so set o to that object\n\n\n        o = o[key][o[key].length - 1];\n      } else {\n        o = o[key];\n      }\n    }); // TODO(bcoe): in the next major version of yargs, switch to\n    // Object.create(null) for dot notation:\n\n    const key = sanitizeKey(keys[keys.length - 1]);\n    const isTypeArray = checkAllAliases(keys.join('.'), flags.arrays);\n    const isValueArray = Array.isArray(value);\n    let duplicate = configuration['duplicate-arguments-array']; // nargs has higher priority than duplicate\n\n    if (!duplicate && checkAllAliases(key, flags.nargs)) {\n      duplicate = true;\n\n      if (!isUndefined(o[key]) && flags.nargs[key] === 1 || Array.isArray(o[key]) && o[key].length === flags.nargs[key]) {\n        o[key] = undefined;\n      }\n    }\n\n    if (value === increment) {\n      o[key] = increment(o[key]);\n    } else if (Array.isArray(o[key])) {\n      if (duplicate && isTypeArray && isValueArray) {\n        o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : (Array.isArray(o[key][0]) ? o[key] : [o[key]]).concat([value]);\n      } else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n        o[key] = value;\n      } else {\n        o[key] = o[key].concat([value]);\n      }\n    } else if (o[key] === undefined && isTypeArray) {\n      o[key] = isValueArray ? value : [value];\n    } else if (duplicate && !(o[key] === undefined || checkAllAliases(key, flags.bools) || checkAllAliases(keys.join('.'), flags.bools) || checkAllAliases(key, flags.counts))) {\n      o[key] = [o[key], value];\n    } else {\n      o[key] = value;\n    }\n  } // extend the aliases list with inferred aliases.\n\n\n  function extendAliases(...args) {\n    args.forEach(function (obj) {\n      Object.keys(obj || {}).forEach(function (key) {\n        // short-circuit if we've already added a key\n        // to the aliases array, for example it might\n        // exist in both 'opts.default' and 'opts.key'.\n        if (flags.aliases[key]) return;\n        flags.aliases[key] = [].concat(aliases[key] || []); // For \"--option-name\", also set argv.optionName\n\n        flags.aliases[key].concat(key).forEach(function (x) {\n          if (/-/.test(x) && configuration['camel-case-expansion']) {\n            var c = camelCase(x);\n\n            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n              flags.aliases[key].push(c);\n              newAliases[c] = true;\n            }\n          }\n        }); // For \"--optionName\", also set argv['option-name']\n\n        flags.aliases[key].concat(key).forEach(function (x) {\n          if (x.length > 1 && /[A-Z]/.test(x) && configuration['camel-case-expansion']) {\n            var c = decamelize(x, '-');\n\n            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n              flags.aliases[key].push(c);\n              newAliases[c] = true;\n            }\n          }\n        });\n        flags.aliases[key].forEach(function (x) {\n          flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n            return x !== y;\n          }));\n        });\n      });\n    });\n  } // check if a flag is set for any of a key's aliases.\n\n\n  function checkAllAliases(key, flag) {\n    var isSet = false;\n    var toCheck = [].concat(flags.aliases[key] || [], key);\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key];\n    });\n    return isSet;\n  }\n\n  function setDefaulted(key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      flags.defaulted[k] = true;\n    });\n  }\n\n  function unsetDefaulted(key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      delete flags.defaulted[k];\n    });\n  } // make a best effor to pick a default value\n  // for an option based on name and type.\n\n\n  function defaultValue(key) {\n    if (!checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts) && `${key}` in defaults) {\n      return defaults[key];\n    } else {\n      return defaultForType(guessType(key));\n    }\n  } // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n\n\n  function defaultForType(type) {\n    var def = {\n      boolean: true,\n      string: '',\n      number: undefined,\n      array: []\n    };\n    return def[type];\n  } // given a flag, enforce a default type.\n\n\n  function guessType(key) {\n    var type = 'boolean';\n    if (checkAllAliases(key, flags.strings)) type = 'string';else if (checkAllAliases(key, flags.numbers)) type = 'number';else if (checkAllAliases(key, flags.arrays)) type = 'array';\n    return type;\n  }\n\n  function isNumber(x) {\n    if (x === null || x === undefined) return false; // if loaded from config, may already be a number.\n\n    if (typeof x === 'number') return true; // hexadecimal.\n\n    if (/^0x[0-9a-f]+$/i.test(x)) return true; // don't treat 0123 as a number; as it drops the leading '0'.\n\n    if (x.length > 1 && x[0] === '0') return false;\n    return /^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n  }\n\n  function isUndefined(num) {\n    return num === undefined;\n  }\n\n  return {\n    argv: argv,\n    error: error,\n    aliases: flags.aliases,\n    newAliases: newAliases,\n    configuration: configuration\n  };\n} // if any aliases reference each other, we should\n// merge them together.\n\n\nfunction combineAliases(aliases) {\n  var aliasArrays = [];\n  var change = true;\n  var combined = {}; // turn alias lookup hash {key: ['alias1', 'alias2']} into\n  // a simple array ['key', 'alias1', 'alias2']\n\n  Object.keys(aliases).forEach(function (key) {\n    aliasArrays.push([].concat(aliases[key], key));\n  }); // combine arrays until zero changes are\n  // made in an iteration.\n\n  while (change) {\n    change = false;\n\n    for (var i = 0; i < aliasArrays.length; i++) {\n      for (var ii = i + 1; ii < aliasArrays.length; ii++) {\n        var intersect = aliasArrays[i].filter(function (v) {\n          return aliasArrays[ii].indexOf(v) !== -1;\n        });\n\n        if (intersect.length) {\n          aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii]);\n          aliasArrays.splice(ii, 1);\n          change = true;\n          break;\n        }\n      }\n    }\n  } // map arrays back to the hash-lookup (de-dupe while\n  // we're at it).\n\n\n  aliasArrays.forEach(function (aliasArray) {\n    aliasArray = aliasArray.filter(function (v, i, self) {\n      return self.indexOf(v) === i;\n    });\n    combined[aliasArray.pop()] = aliasArray;\n  });\n  return combined;\n} // this function should only be called when a count is given as an arg\n// it is NOT called to set a default value\n// thus we can start the count at 1 instead of 0\n\n\nfunction increment(orig) {\n  return orig !== undefined ? orig + 1 : 1;\n}\n\nfunction Parser(args, opts) {\n  var result = parse(args.slice(), opts);\n  return result.argv;\n} // parse arguments and return detailed\n// meta information, aliases, etc.\n\n\nParser.detailed = function (args, opts) {\n  return parse(args.slice(), opts);\n}; // TODO(bcoe): in the next major version of yargs, switch to\n// Object.create(null) for dot notation:\n\n\nfunction sanitizeKey(key) {\n  if (key === '__proto__') return '___proto___';\n  return key;\n}\n\nmodule.exports = Parser;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/node_modules/yargs-parser/index.js"],"names":["camelCase","require","decamelize","path","tokenizeArgString","util","parse","args","opts","aliases","combineAliases","alias","configuration","Object","assign","defaults","default","configObjects","envPrefix","notFlagsOption","notFlagsArgv","newAliases","__","format","error","flags","arrays","bools","strings","numbers","counts","normalize","configs","defaulted","nargs","coercions","keys","negative","negatedBoolean","RegExp","concat","array","filter","Boolean","forEach","opt","key","assignment","map","boolean","string","number","pop","push","count","narg","k","coerce","Array","isArray","config","extendAliases","argv","_","prototype","hasOwnProperty","call","setArg","setDefaulted","notFlags","i","length","arg","broken","letters","m","next","value","match","checkAllAliases","splice","eatNargs","eatArray","undefined","test","defaultValue","slice","split","j","maybeCoerceNumber","applyEnvVars","setConfig","setConfigObjects","applyDefaultsAndAliases","applyCoercions","setPlaceholderKeys","hasKey","includes","prop","join","ii","toEat","available","Error","consumed","Math","min","start","argsToSet","multipleArrayFlag","defaultForType","processValue","val","unsetDefaulted","addNewAlias","splitKey","setKey","x","a","shift","__defineSetter__","v","__defineGetter__","substring","isUndefined","increment","shouldCoerceNumber","isNumber","Number","isSafeInteger","floor","configLookup","configKey","configPath","resolvedConfigPath","resolve","process","cwd","e","setConfigObject","ex","prev","fullKey","configObject","configOnly","prefix","env","envVar","lastIndexOf","applied","ali","err","indexOf","obj","o","index","sanitizeKey","isTypeArray","isValueArray","duplicate","c","y","flag","isSet","toCheck","guessType","type","def","num","aliasArrays","change","combined","intersect","aliasArray","self","orig","Parser","result","detailed","module","exports"],"mappings":"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","sourcesContent":["var camelCase = require('camelcase')\nvar decamelize = require('decamelize')\nvar path = require('path')\nvar tokenizeArgString = require('./lib/tokenize-arg-string')\nvar util = require('util')\n\nfunction parse (args, opts) {\n  if (!opts) opts = {}\n  // allow a string argument to be passed in rather\n  // than an argv array.\n  args = tokenizeArgString(args)\n\n  // aliases might have transitive relationships, normalize this.\n  var aliases = combineAliases(opts.alias || {})\n  var configuration = Object.assign({\n    'short-option-groups': true,\n    'camel-case-expansion': true,\n    'dot-notation': true,\n    'parse-numbers': true,\n    'boolean-negation': true,\n    'negation-prefix': 'no-',\n    'duplicate-arguments-array': true,\n    'flatten-duplicate-arrays': true,\n    'populate--': false,\n    'combine-arrays': false,\n    'set-placeholder-key': false,\n    'halt-at-non-option': false,\n    'strip-aliased': false,\n    'strip-dashed': false\n  }, opts.configuration)\n  var defaults = opts.default || {}\n  var configObjects = opts.configObjects || []\n  var envPrefix = opts.envPrefix\n  var notFlagsOption = configuration['populate--']\n  var notFlagsArgv = notFlagsOption ? '--' : '_'\n  var newAliases = {}\n  // allow a i18n handler to be passed in, default to a fake one (util.format).\n  var __ = opts.__ || util.format\n  var error = null\n  var flags = {\n    aliases: {},\n    arrays: {},\n    bools: {},\n    strings: {},\n    numbers: {},\n    counts: {},\n    normalize: {},\n    configs: {},\n    defaulted: {},\n    nargs: {},\n    coercions: {},\n    keys: []\n  }\n  var negative = /^-[0-9]+(\\.[0-9]+)?/\n  var negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)')\n\n  ;[].concat(opts.array).filter(Boolean).forEach(function (opt) {\n    var key = opt.key || opt\n\n    // assign to flags[bools|strings|numbers]\n    const assignment = Object.keys(opt).map(function (key) {\n      return ({\n        boolean: 'bools',\n        string: 'strings',\n        number: 'numbers'\n      })[key]\n    }).filter(Boolean).pop()\n\n    // assign key to be coerced\n    if (assignment) {\n      flags[assignment][key] = true\n    }\n\n    flags.arrays[key] = true\n    flags.keys.push(key)\n  })\n\n  ;[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true\n    flags.keys.push(key)\n  })\n\n  ;[].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true\n    flags.keys.push(key)\n  })\n\n  ;[].concat(opts.number).filter(Boolean).forEach(function (key) {\n    flags.numbers[key] = true\n    flags.keys.push(key)\n  })\n\n  ;[].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true\n    flags.keys.push(key)\n  })\n\n  ;[].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true\n    flags.keys.push(key)\n  })\n\n  Object.keys(opts.narg || {}).forEach(function (k) {\n    flags.nargs[k] = opts.narg[k]\n    flags.keys.push(k)\n  })\n\n  Object.keys(opts.coerce || {}).forEach(function (k) {\n    flags.coercions[k] = opts.coerce[k]\n    flags.keys.push(k)\n  })\n\n  if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n    ;[].concat(opts.config).filter(Boolean).forEach(function (key) {\n      flags.configs[key] = true\n    })\n  } else {\n    Object.keys(opts.config || {}).forEach(function (k) {\n      flags.configs[k] = opts.config[k]\n    })\n  }\n\n  // create a lookup table that takes into account all\n  // combinations of aliases: {f: ['foo'], foo: ['f']}\n  extendAliases(opts.key, aliases, opts.default, flags.arrays)\n\n  // apply default values to all aliases.\n  Object.keys(defaults).forEach(function (key) {\n    (flags.aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key]\n    })\n  })\n\n  var argv = { _: [] }\n\n  Object.keys(flags.bools).forEach(function (key) {\n    if (Object.prototype.hasOwnProperty.call(defaults, key)) {\n      setArg(key, defaults[key])\n      setDefaulted(key)\n    }\n  })\n\n  var notFlags = []\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i]\n    var broken\n    var key\n    var letters\n    var m\n    var next\n    var value\n\n    // -- separated by =\n    if (arg.match(/^--.+=/) || (\n      !configuration['short-option-groups'] && arg.match(/^-.+=/)\n    )) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/)\n\n      // nargs format = '--f=monkey washing cat'\n      if (checkAllAliases(m[1], flags.nargs)) {\n        args.splice(i + 1, 0, m[2])\n        i = eatNargs(i, m[1], args)\n      // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, 0, m[2])\n        i = eatArray(i, m[1], args)\n      } else {\n        setArg(m[1], m[2])\n      }\n    } else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {\n      key = arg.match(negatedBoolean)[1]\n      setArg(key, false)\n\n    // -- seperated by space.\n    } else if (arg.match(/^--.+/) || (\n      !configuration['short-option-groups'] && arg.match(/^-[^-]+/)\n    )) {\n      key = arg.match(/^--?(.+)/)[1]\n\n      // nargs format = '--foo a b c'\n      if (checkAllAliases(key, flags.nargs)) {\n        i = eatNargs(i, key, args)\n      // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args)\n      } else {\n        next = flags.nargs[key] === 0 ? undefined : args[i + 1]\n\n        if (next !== undefined && (!next.match(/^-/) ||\n          next.match(negative)) &&\n          !checkAllAliases(key, flags.bools) &&\n          !checkAllAliases(key, flags.counts)) {\n          setArg(key, next)\n          i++\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next)\n          i++\n        } else {\n          setArg(key, defaultValue(key))\n        }\n      }\n\n    // dot-notation flag seperated by '='.\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n\n    // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1]\n      key = arg.match(/^-(.\\..+)/)[1]\n\n      if (next !== undefined && !next.match(/^-/) &&\n        !checkAllAliases(key, flags.bools) &&\n        !checkAllAliases(key, flags.counts)) {\n        setArg(key, next)\n        i++\n      } else {\n        setArg(key, defaultValue(key))\n      }\n    } else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n      letters = arg.slice(1, -1).split('')\n      broken = false\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2)\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3)\n          key = letters[j]\n\n          // nargs format = '-f=monkey washing cat'\n          if (checkAllAliases(key, flags.nargs)) {\n            args.splice(i + 1, 0, value)\n            i = eatNargs(i, key, args)\n          // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value)\n            i = eatArray(i, key, args)\n          } else {\n            setArg(key, value)\n          }\n\n          broken = true\n          break\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next)\n          continue\n        }\n\n        // current letter is an alphabetic character and next value is a number\n        if (/[A-Za-z]/.test(letters[j]) &&\n          /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        } else {\n          setArg(letters[j], defaultValue(letters[j]))\n        }\n      }\n\n      key = arg.slice(-1)[0]\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, flags.nargs)) {\n          i = eatNargs(i, key, args)\n        // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args)\n        } else {\n          next = args[i + 1]\n\n          if (next !== undefined && (!/^(-|--)[^-]/.test(next) ||\n            next.match(negative)) &&\n            !checkAllAliases(key, flags.bools) &&\n            !checkAllAliases(key, flags.counts)) {\n            setArg(key, next)\n            i++\n          } else if (/^(true|false)$/.test(next)) {\n            setArg(key, next)\n            i++\n          } else {\n            setArg(key, defaultValue(key))\n          }\n        }\n      }\n    } else if (arg === '--') {\n      notFlags = args.slice(i + 1)\n      break\n    } else if (configuration['halt-at-non-option']) {\n      notFlags = args.slice(i)\n      break\n    } else {\n      argv._.push(maybeCoerceNumber('_', arg))\n    }\n  }\n\n  // order of precedence:\n  // 1. command line arg\n  // 2. value from env var\n  // 3. value from config file\n  // 4. value from config objects\n  // 5. configured default value\n  applyEnvVars(argv, true) // special case: check env vars that point to config file\n  applyEnvVars(argv, false)\n  setConfig(argv)\n  setConfigObjects()\n  applyDefaultsAndAliases(argv, flags.aliases, defaults)\n  applyCoercions(argv)\n  if (configuration['set-placeholder-key']) setPlaceholderKeys(argv)\n\n  // for any counts either not in args or without an explicit default, set to 0\n  Object.keys(flags.counts).forEach(function (key) {\n    if (!hasKey(argv, key.split('.'))) setArg(key, 0)\n  })\n\n  // '--' defaults to undefined.\n  if (notFlagsOption && notFlags.length) argv[notFlagsArgv] = []\n  notFlags.forEach(function (key) {\n    argv[notFlagsArgv].push(key)\n  })\n\n  if (configuration['camel-case-expansion'] && configuration['strip-dashed']) {\n    Object.keys(argv).filter(key => key !== '--' && key.includes('-')).forEach(key => {\n      delete argv[key]\n    })\n  }\n\n  if (configuration['strip-aliased']) {\n    // XXX Switch to [].concat(...Object.values(aliases)) once node.js 6 is dropped\n    ;[].concat(...Object.keys(aliases).map(k => aliases[k])).forEach(alias => {\n      if (configuration['camel-case-expansion']) {\n        delete argv[alias.split('.').map(prop => camelCase(prop)).join('.')]\n      }\n\n      delete argv[alias]\n    })\n  }\n\n  // how many arguments should we consume, based\n  // on the nargs option?\n  function eatNargs (i, key, args) {\n    var ii\n    const toEat = checkAllAliases(key, flags.nargs)\n\n    // nargs will not consume flag arguments, e.g., -abc, --foo,\n    // and terminates when one is observed.\n    var available = 0\n    for (ii = i + 1; ii < args.length; ii++) {\n      if (!args[ii].match(/^-[^0-9]/)) available++\n      else break\n    }\n\n    if (available < toEat) error = Error(__('Not enough arguments following: %s', key))\n\n    const consumed = Math.min(available, toEat)\n    for (ii = i + 1; ii < (consumed + i + 1); ii++) {\n      setArg(key, args[ii])\n    }\n\n    return (i + consumed)\n  }\n\n  // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n  function eatArray (i, key, args) {\n    var start = i + 1\n    var argsToSet = []\n    var multipleArrayFlag = i > 0\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii]) && !negative.test(args[ii])) {\n        if (ii === start) {\n          setArg(key, defaultForType('array'))\n        }\n        multipleArrayFlag = true\n        break\n      }\n      i = ii\n      argsToSet.push(args[ii])\n    }\n    if (multipleArrayFlag) {\n      setArg(key, argsToSet.map(function (arg) {\n        return processValue(key, arg)\n      }))\n    } else {\n      argsToSet.forEach(function (arg) {\n        setArg(key, arg)\n      })\n    }\n\n    return i\n  }\n\n  function setArg (key, val) {\n    unsetDefaulted(key)\n\n    if (/-/.test(key) && configuration['camel-case-expansion']) {\n      var alias = key.split('.').map(function (prop) {\n        return camelCase(prop)\n      }).join('.')\n      addNewAlias(key, alias)\n    }\n\n    var value = processValue(key, val)\n\n    var splitKey = key.split('.')\n    setKey(argv, splitKey, value)\n\n    // handle populating aliases of the full key\n    if (flags.aliases[key] && flags.aliases[key].forEach) {\n      flags.aliases[key].forEach(function (x) {\n        x = x.split('.')\n        setKey(argv, x, value)\n      })\n    }\n\n    // handle populating aliases of the first element of the dot-notation key\n    if (splitKey.length > 1 && configuration['dot-notation']) {\n      ;(flags.aliases[splitKey[0]] || []).forEach(function (x) {\n        x = x.split('.')\n\n        // expand alias with nested objects in key\n        var a = [].concat(splitKey)\n        a.shift() // nuke the old key.\n        x = x.concat(a)\n\n        setKey(argv, x, value)\n      })\n    }\n\n    // Set normalize getter and setter when key is in 'normalize' but isn't an array\n    if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n      var keys = [key].concat(flags.aliases[key] || [])\n      keys.forEach(function (key) {\n        argv.__defineSetter__(key, function (v) {\n          val = path.normalize(v)\n        })\n\n        argv.__defineGetter__(key, function () {\n          return typeof val === 'string' ? path.normalize(val) : val\n        })\n      })\n    }\n  }\n\n  function addNewAlias (key, alias) {\n    if (!(flags.aliases[key] && flags.aliases[key].length)) {\n      flags.aliases[key] = [alias]\n      newAliases[alias] = true\n    }\n    if (!(flags.aliases[alias] && flags.aliases[alias].length)) {\n      addNewAlias(alias, key)\n    }\n  }\n\n  function processValue (key, val) {\n    // strings may be quoted, clean this up as we assign values.\n    if (typeof val === 'string' &&\n      (val[0] === \"'\" || val[0] === '\"') &&\n      val[val.length - 1] === val[0]\n    ) {\n      val = val.substring(1, val.length - 1)\n    }\n\n    // handle parsing boolean arguments --foo=true --bar false.\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true'\n    }\n\n    var value = maybeCoerceNumber(key, val)\n\n    // increment a count given as arg (either no value or value parsed as boolean)\n    if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n      value = increment\n    }\n\n    // Set normalized value when key is in 'normalize' and in 'arrays'\n    if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n      if (Array.isArray(val)) value = val.map(path.normalize)\n      else value = path.normalize(val)\n    }\n    return value\n  }\n\n  function maybeCoerceNumber (key, value) {\n    if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.coercions)) {\n      const shouldCoerceNumber = isNumber(value) && configuration['parse-numbers'] && (\n        Number.isSafeInteger(Math.floor(value))\n      )\n      if (shouldCoerceNumber || (!isUndefined(value) && checkAllAliases(key, flags.numbers))) value = Number(value)\n    }\n    return value\n  }\n\n  // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n  function setConfig (argv) {\n    var configLookup = {}\n\n    // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n    applyDefaultsAndAliases(configLookup, flags.aliases, defaults)\n\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey]\n      if (configPath) {\n        try {\n          var config = null\n          var resolvedConfigPath = path.resolve(process.cwd(), configPath)\n\n          if (typeof flags.configs[configKey] === 'function') {\n            try {\n              config = flags.configs[configKey](resolvedConfigPath)\n            } catch (e) {\n              config = e\n            }\n            if (config instanceof Error) {\n              error = config\n              return\n            }\n          } else {\n            config = require(resolvedConfigPath)\n          }\n\n          setConfigObject(config)\n        } catch (ex) {\n          if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath))\n        }\n      }\n    })\n  }\n\n  // set args from config object.\n  // it recursively checks nested objects.\n  function setConfigObject (config, prev) {\n    Object.keys(config).forEach(function (key) {\n      var value = config[key]\n      var fullKey = prev ? prev + '.' + key : key\n\n      // if the value is an inner object and we have dot-notation\n      // enabled, treat inner objects in config the same as\n      // heavily nested dot notations (foo.bar.apple).\n      if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {\n        // if the value is an object but not an array, check nested object\n        setConfigObject(value, fullKey)\n      } else {\n        // setting arguments via CLI takes precedence over\n        // values within the config file.\n        if (!hasKey(argv, fullKey.split('.')) || (flags.defaulted[fullKey]) || (flags.arrays[fullKey] && configuration['combine-arrays'])) {\n          setArg(fullKey, value)\n        }\n      }\n    })\n  }\n\n  // set all config objects passed in opts\n  function setConfigObjects () {\n    if (typeof configObjects === 'undefined') return\n    configObjects.forEach(function (configObject) {\n      setConfigObject(configObject)\n    })\n  }\n\n  function applyEnvVars (argv, configOnly) {\n    if (typeof envPrefix === 'undefined') return\n\n    var prefix = typeof envPrefix === 'string' ? envPrefix : ''\n    Object.keys(process.env).forEach(function (envVar) {\n      if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n        // get array of nested keys and convert them to camel case\n        var keys = envVar.split('__').map(function (key, i) {\n          if (i === 0) {\n            key = key.substring(prefix.length)\n          }\n          return camelCase(key)\n        })\n\n        if (((configOnly && flags.configs[keys.join('.')]) || !configOnly) && (!hasKey(argv, keys) || flags.defaulted[keys.join('.')])) {\n          setArg(keys.join('.'), process.env[envVar])\n        }\n      }\n    })\n  }\n\n  function applyCoercions (argv) {\n    var coerce\n    var applied = {}\n    Object.keys(argv).forEach(function (key) {\n      if (!applied.hasOwnProperty(key)) { // If we haven't already coerced this option via one of its aliases\n        coerce = checkAllAliases(key, flags.coercions)\n        if (typeof coerce === 'function') {\n          try {\n            var value = coerce(argv[key])\n            ;([].concat(flags.aliases[key] || [], key)).forEach(ali => {\n              applied[ali] = argv[ali] = value\n            })\n          } catch (err) {\n            error = err\n          }\n        }\n      }\n    })\n  }\n\n  function setPlaceholderKeys (argv) {\n    flags.keys.forEach((key) => {\n      // don't set placeholder keys for dot notation options 'foo.bar'.\n      if (~key.indexOf('.')) return\n      if (typeof argv[key] === 'undefined') argv[key] = undefined\n    })\n    return argv\n  }\n\n  function applyDefaultsAndAliases (obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key])\n\n        ;(aliases[key] || []).forEach(function (x) {\n          if (hasKey(obj, x.split('.'))) return\n          setKey(obj, x.split('.'), defaults[key])\n        })\n      }\n    })\n  }\n\n  function hasKey (obj, keys) {\n    var o = obj\n\n    if (!configuration['dot-notation']) keys = [keys.join('.')]\n\n    keys.slice(0, -1).forEach(function (key) {\n      o = (o[key] || {})\n    })\n\n    var key = keys[keys.length - 1]\n\n    if (typeof o !== 'object') return false\n    else return key in o\n  }\n\n  function setKey (obj, keys, value) {\n    var o = obj\n\n    if (!configuration['dot-notation']) keys = [keys.join('.')]\n\n    keys.slice(0, -1).forEach(function (key, index) {\n      // TODO(bcoe): in the next major version of yargs, switch to\n      // Object.create(null) for dot notation:\n      key = sanitizeKey(key)\n\n      if (typeof o === 'object' && o[key] === undefined) {\n        o[key] = {}\n      }\n\n      if (typeof o[key] !== 'object' || Array.isArray(o[key])) {\n        // ensure that o[key] is an array, and that the last item is an empty object.\n        if (Array.isArray(o[key])) {\n          o[key].push({})\n        } else {\n          o[key] = [o[key], {}]\n        }\n\n        // we want to update the empty object at the end of the o[key] array, so set o to that object\n        o = o[key][o[key].length - 1]\n      } else {\n        o = o[key]\n      }\n    })\n\n    // TODO(bcoe): in the next major version of yargs, switch to\n    // Object.create(null) for dot notation:\n    const key = sanitizeKey(keys[keys.length - 1])\n\n    const isTypeArray = checkAllAliases(keys.join('.'), flags.arrays)\n    const isValueArray = Array.isArray(value)\n    let duplicate = configuration['duplicate-arguments-array']\n\n    // nargs has higher priority than duplicate\n    if (!duplicate && checkAllAliases(key, flags.nargs)) {\n      duplicate = true\n      if ((!isUndefined(o[key]) && flags.nargs[key] === 1) || (Array.isArray(o[key]) && o[key].length === flags.nargs[key])) {\n        o[key] = undefined\n      }\n    }\n\n    if (value === increment) {\n      o[key] = increment(o[key])\n    } else if (Array.isArray(o[key])) {\n      if (duplicate && isTypeArray && isValueArray) {\n        o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : (Array.isArray(o[key][0]) ? o[key] : [o[key]]).concat([value])\n      } else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n        o[key] = value\n      } else {\n        o[key] = o[key].concat([value])\n      }\n    } else if (o[key] === undefined && isTypeArray) {\n      o[key] = isValueArray ? value : [value]\n    } else if (duplicate && !(o[key] === undefined || checkAllAliases(key, flags.bools) || checkAllAliases(keys.join('.'), flags.bools) || checkAllAliases(key, flags.counts))) {\n      o[key] = [ o[key], value ]\n    } else {\n      o[key] = value\n    }\n  }\n\n  // extend the aliases list with inferred aliases.\n  function extendAliases (...args) {\n    args.forEach(function (obj) {\n      Object.keys(obj || {}).forEach(function (key) {\n        // short-circuit if we've already added a key\n        // to the aliases array, for example it might\n        // exist in both 'opts.default' and 'opts.key'.\n        if (flags.aliases[key]) return\n\n        flags.aliases[key] = [].concat(aliases[key] || [])\n        // For \"--option-name\", also set argv.optionName\n        flags.aliases[key].concat(key).forEach(function (x) {\n          if (/-/.test(x) && configuration['camel-case-expansion']) {\n            var c = camelCase(x)\n            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n              flags.aliases[key].push(c)\n              newAliases[c] = true\n            }\n          }\n        })\n        // For \"--optionName\", also set argv['option-name']\n        flags.aliases[key].concat(key).forEach(function (x) {\n          if (x.length > 1 && /[A-Z]/.test(x) && configuration['camel-case-expansion']) {\n            var c = decamelize(x, '-')\n            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n              flags.aliases[key].push(c)\n              newAliases[c] = true\n            }\n          }\n        })\n        flags.aliases[key].forEach(function (x) {\n          flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n            return x !== y\n          }))\n        })\n      })\n    })\n  }\n\n  // check if a flag is set for any of a key's aliases.\n  function checkAllAliases (key, flag) {\n    var isSet = false\n    var toCheck = [].concat(flags.aliases[key] || [], key)\n\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key]\n    })\n\n    return isSet\n  }\n\n  function setDefaulted (key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      flags.defaulted[k] = true\n    })\n  }\n\n  function unsetDefaulted (key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      delete flags.defaulted[k]\n    })\n  }\n\n  // make a best effor to pick a default value\n  // for an option based on name and type.\n  function defaultValue (key) {\n    if (!checkAllAliases(key, flags.bools) &&\n        !checkAllAliases(key, flags.counts) &&\n        `${key}` in defaults) {\n      return defaults[key]\n    } else {\n      return defaultForType(guessType(key))\n    }\n  }\n\n  // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n  function defaultForType (type) {\n    var def = {\n      boolean: true,\n      string: '',\n      number: undefined,\n      array: []\n    }\n\n    return def[type]\n  }\n\n  // given a flag, enforce a default type.\n  function guessType (key) {\n    var type = 'boolean'\n\n    if (checkAllAliases(key, flags.strings)) type = 'string'\n    else if (checkAllAliases(key, flags.numbers)) type = 'number'\n    else if (checkAllAliases(key, flags.arrays)) type = 'array'\n\n    return type\n  }\n\n  function isNumber (x) {\n    if (x === null || x === undefined) return false\n    // if loaded from config, may already be a number.\n    if (typeof x === 'number') return true\n    // hexadecimal.\n    if (/^0x[0-9a-f]+$/i.test(x)) return true\n    // don't treat 0123 as a number; as it drops the leading '0'.\n    if (x.length > 1 && x[0] === '0') return false\n    return /^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x)\n  }\n\n  function isUndefined (num) {\n    return num === undefined\n  }\n\n  return {\n    argv: argv,\n    error: error,\n    aliases: flags.aliases,\n    newAliases: newAliases,\n    configuration: configuration\n  }\n}\n\n// if any aliases reference each other, we should\n// merge them together.\nfunction combineAliases (aliases) {\n  var aliasArrays = []\n  var change = true\n  var combined = {}\n\n  // turn alias lookup hash {key: ['alias1', 'alias2']} into\n  // a simple array ['key', 'alias1', 'alias2']\n  Object.keys(aliases).forEach(function (key) {\n    aliasArrays.push(\n      [].concat(aliases[key], key)\n    )\n  })\n\n  // combine arrays until zero changes are\n  // made in an iteration.\n  while (change) {\n    change = false\n    for (var i = 0; i < aliasArrays.length; i++) {\n      for (var ii = i + 1; ii < aliasArrays.length; ii++) {\n        var intersect = aliasArrays[i].filter(function (v) {\n          return aliasArrays[ii].indexOf(v) !== -1\n        })\n\n        if (intersect.length) {\n          aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii])\n          aliasArrays.splice(ii, 1)\n          change = true\n          break\n        }\n      }\n    }\n  }\n\n  // map arrays back to the hash-lookup (de-dupe while\n  // we're at it).\n  aliasArrays.forEach(function (aliasArray) {\n    aliasArray = aliasArray.filter(function (v, i, self) {\n      return self.indexOf(v) === i\n    })\n    combined[aliasArray.pop()] = aliasArray\n  })\n\n  return combined\n}\n\n// this function should only be called when a count is given as an arg\n// it is NOT called to set a default value\n// thus we can start the count at 1 instead of 0\nfunction increment (orig) {\n  return orig !== undefined ? orig + 1 : 1\n}\n\nfunction Parser (args, opts) {\n  var result = parse(args.slice(), opts)\n\n  return result.argv\n}\n\n// parse arguments and return detailed\n// meta information, aliases, etc.\nParser.detailed = function (args, opts) {\n  return parse(args.slice(), opts)\n}\n\n// TODO(bcoe): in the next major version of yargs, switch to\n// Object.create(null) for dot notation:\nfunction sanitizeKey (key) {\n  if (key === '__proto__') return '___proto___'\n  return key\n}\n\nmodule.exports = Parser\n"]},"metadata":{},"sourceType":"script"}