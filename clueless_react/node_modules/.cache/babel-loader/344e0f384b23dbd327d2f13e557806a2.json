{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/MessageBoard.js\";\nimport React from \"react\";\nimport { subscribeToTimer, subscribeToMessage, subscribeToArray, subscribeToCards, subscribeToTurn, subscribeToMovement, subscribeToSuggestion, subscribeToDisprove, subscribeToAccusation } from './Api'; // class MessageBoard extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     subscribeToAllMessages((err, x) =>\n//       this.setState({ array : x }));\n//   }\n//   state = {\n//     array: []\n//   };\n// render() {\n//   return (\n//         <ul>\n//         {this.state.array.map(elem => (\n//           <li>{elem}</li>\n//         ))}\n//         </ul>\n//   );\n// }\n// }\n// export default MessageBoard;\n\nclass MessageBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n    subscribeToCards((err, elem) => this.updateArray('Cards info: ' + JSON.stringify(elem)));\n    subscribeToTurn((err, elem) => this.updateArray('Turn request:' + elem));\n    subscribeToMovement((err, elem) => this.updateArray('Movement request: ' + elem));\n    subscribeToSuggestion((err, elem) => this.updateArray('Suggestion request: ' + elem));\n    subscribeToDisprove((err, elem) => this.updateArray('Disprove request: ' + JSON.stringify(elem)));\n    subscribeToAccusation((err, elem) => this.updateArray('Accustation request: ' + elem));\n  }\n\n  updateArray(elem) {\n    this.setState({\n      array: [elem, ...this.state.array]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.state.array.map(elem => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, elem)));\n  }\n\n}\n\nexport default MessageBoard;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/MessageBoard.js"],"names":["React","subscribeToTimer","subscribeToMessage","subscribeToArray","subscribeToCards","subscribeToTurn","subscribeToMovement","subscribeToSuggestion","subscribeToDisprove","subscribeToAccusation","MessageBoard","Component","constructor","props","state","array","err","elem","updateArray","JSON","stringify","setState","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,EAA+CC,gBAA/C,EAAiEC,gBAAjE,EAAmFC,eAAnF,EACEC,mBADF,EACuBC,qBADvB,EAC8CC,mBAD9C,EACmEC,qBADnE,QACgG,OADhG,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAenBC,KAfmB,GAeX;AACNC,MAAAA,KAAK,EAAE;AADD,KAfW;AAEjBX,IAAAA,gBAAgB,CAAC,CAACY,GAAD,EAAMC,IAAN,KACf,KAAKC,WAAL,CAAiB,iBAAiBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAlC,CADc,CAAhB;AAEAZ,IAAAA,eAAe,CAAC,CAACW,GAAD,EAAMC,IAAN,KACd,KAAKC,WAAL,CAAiB,kBAAkBD,IAAnC,CADa,CAAf;AAEAX,IAAAA,mBAAmB,CAAC,CAACU,GAAD,EAAMC,IAAN,KAClB,KAAKC,WAAL,CAAiB,uBAAuBD,IAAxC,CADiB,CAAnB;AAEAV,IAAAA,qBAAqB,CAAC,CAACS,GAAD,EAAMC,IAAN,KACpB,KAAKC,WAAL,CAAiB,yBAAyBD,IAA1C,CADmB,CAArB;AAEAT,IAAAA,mBAAmB,CAAC,CAACQ,GAAD,EAAMC,IAAN,KAClB,KAAKC,WAAL,CAAiB,uBAAuBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAxC,CADiB,CAAnB;AAEAR,IAAAA,qBAAqB,CAAC,CAACO,GAAD,EAAMC,IAAN,KACpB,KAAKC,WAAL,CAAiB,0BAA0BD,IAA3C,CADmB,CAArB;AAED;;AAKDC,EAAAA,WAAW,CAACD,IAAD,EAAO;AAChB,SAAKI,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAG,CAACE,IAAD,EAAO,GAAG,KAAKH,KAAL,CAAWC,KAArB;AAAV,KAAd;AACD;;AAEHO,EAAAA,MAAM,GAAG;AACP,wBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBN,IAAI,iBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADD,CADD,CADN;AAOD;;AAjC0C;;AAoC3C,eAAeP,YAAf","sourcesContent":["import React from \"react\";\nimport { subscribeToTimer, subscribeToMessage, subscribeToArray, subscribeToCards, subscribeToTurn,\n  subscribeToMovement, subscribeToSuggestion, subscribeToDisprove, subscribeToAccusation } from './Api';\n\n\n// class MessageBoard extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     subscribeToAllMessages((err, x) =>\n//       this.setState({ array : x }));\n//   }\n//   state = {\n//     array: []\n//   };\n\n// render() {\n//   return (\n//         <ul>\n//         {this.state.array.map(elem => (\n//           <li>{elem}</li>\n//         ))}\n//         </ul>\n//   );\n// }\n// }\n\n// export default MessageBoard;\n\nclass MessageBoard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    subscribeToCards((err, elem) =>\n      this.updateArray('Cards info: ' + JSON.stringify(elem)));\n    subscribeToTurn((err, elem) =>\n      this.updateArray('Turn request:' + elem));\n    subscribeToMovement((err, elem) =>\n      this.updateArray('Movement request: ' + elem))\n    subscribeToSuggestion((err, elem) =>\n      this.updateArray('Suggestion request: ' + elem))\n    subscribeToDisprove((err, elem) =>\n      this.updateArray('Disprove request: ' + JSON.stringify(elem)))\n    subscribeToAccusation((err, elem) =>\n      this.updateArray('Accustation request: ' + elem))\n  }\n  state = {\n    array: []\n  };\n\n  updateArray(elem) {\n    this.setState({ array : [elem, ...this.state.array] })\n  }\n\nrender() {\n  return (\n        <ul>\n        {this.state.array.map(elem => (\n          <li>{elem}</li>\n        ))}\n        </ul>\n  );\n}\n}\n\nexport default MessageBoard;\n"]},"metadata":{},"sourceType":"module"}