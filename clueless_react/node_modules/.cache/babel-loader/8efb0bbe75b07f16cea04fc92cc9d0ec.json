{"ast":null,"code":"var CARDOBJECTS = require(\"./game_data/cluelessmap.json\"); // Might need to change the name for clarity.\n\n\nclass CardMapper {\n  /* **** STATIC FUNCTIONS THAT BELONG TO THE CARD MAPPER CLASS *** */\n  // Generate Clue-Less Card Mapping.\n  static generateIdMap() {\n    // Get Map Size:\n    CardMapper.MAP_SIZE = 0;\n    CardMapper.MAP_SIZE += CARDOBJECTS.Suspects.length;\n    CardMapper.MAP_SIZE += CARDOBJECTS.Weapons.length;\n    CardMapper.MAP_SIZE += CARDOBJECTS.Rooms.length; // Add Suspects to \"Master Map\"...\n\n    for (const suspect of CARDOBJECTS.Suspects) {\n      CardMapper.idMapping[suspect.Id] = suspect;\n    } // Add Weapons to \"Master Map\"...\n\n\n    for (const weapon of CARDOBJECTS.Weapons) {\n      CardMapper.idMapping[weapon.Id] = weapon;\n    } // Add Rooms to \"Master Map\"...\n\n\n    for (const room of CARDOBJECTS.Rooms) {\n      CardMapper.idMapping[room.Id] = room;\n    }\n\n    return;\n  } // Get Clue-Less Card Object by ID.\n\n\n  static getCardById(id) {\n    return CardMapper.idMapping[id];\n  } // Get Clue-Less Card Name by ID.\n\n\n  static getCardNameById(id) {\n    return CardMapper.idMapping[id].Name;\n  } // Get Clue-Less Card Name by ID.\n\n\n  static getCardImgById(id) {\n    return CardMapper.idMapping[id].Img;\n  } // Get ID Array of All Suspects.\n\n\n  static getAllSuspects() {\n    var suspectIdArray = [];\n    CARDOBJECTS.Suspects.forEach(element => {\n      suspectIdArray.push(element.Id);\n    });\n    return suspectIdArray;\n  } // Get ID Array of All Weapons.\n\n\n  static getAllWeapons() {\n    var weaponIdArray = [];\n    CARDOBJECTS.Weapons.forEach(element => {\n      weaponIdArray.push(element.Id);\n    });\n    return weaponIdArray;\n  } // Get ID Array of All Rooms.\n\n\n  static getAllRooms() {\n    var roomIdArray = [];\n    CARDOBJECTS.Rooms.forEach(element => {\n      roomIdArray.push(element.Id);\n    });\n    return roomIdArray;\n  }\n\n}\n\nCardMapper.idMapping = new Map();\nCardMapper.MAP_SIZE = 0;\nmodule.exports = CardMapper;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/CardMapper.js"],"names":["CARDOBJECTS","require","CardMapper","generateIdMap","MAP_SIZE","Suspects","length","Weapons","Rooms","suspect","idMapping","Id","weapon","room","getCardById","id","getCardNameById","Name","getCardImgById","Img","getAllSuspects","suspectIdArray","forEach","element","push","getAllWeapons","weaponIdArray","getAllRooms","roomIdArray","Map","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,8BAAD,CAAzB,C,CAA2D;;;AAE3D,MAAMC,UAAN,CAAiB;AAIf;AAEA;AACA,SAAOC,aAAP,GAAuB;AACrB;AACAD,IAAAA,UAAU,CAACE,QAAX,GAAsB,CAAtB;AACAF,IAAAA,UAAU,CAACE,QAAX,IAAuBJ,WAAW,CAACK,QAAZ,CAAqBC,MAA5C;AACAJ,IAAAA,UAAU,CAACE,QAAX,IAAuBJ,WAAW,CAACO,OAAZ,CAAoBD,MAA3C;AACAJ,IAAAA,UAAU,CAACE,QAAX,IAAuBJ,WAAW,CAACQ,KAAZ,CAAkBF,MAAzC,CALqB,CAOrB;;AACA,SAAK,MAAMG,OAAX,IAAsBT,WAAW,CAACK,QAAlC,EAA4C;AAC1CH,MAAAA,UAAU,CAACQ,SAAX,CAAqBD,OAAO,CAACE,EAA7B,IAAmCF,OAAnC;AACD,KAVoB,CAWrB;;;AACA,SAAK,MAAMG,MAAX,IAAqBZ,WAAW,CAACO,OAAjC,EAA0C;AACxCL,MAAAA,UAAU,CAACQ,SAAX,CAAqBE,MAAM,CAACD,EAA5B,IAAkCC,MAAlC;AACD,KAdoB,CAerB;;;AACA,SAAK,MAAMC,IAAX,IAAmBb,WAAW,CAACQ,KAA/B,EAAsC;AACpCN,MAAAA,UAAU,CAACQ,SAAX,CAAqBG,IAAI,CAACF,EAA1B,IAAgCE,IAAhC;AACD;;AACD;AACD,GA3Bc,CA6Bf;;;AACA,SAAOC,WAAP,CAAmBC,EAAnB,EAAuB;AACrB,WAAOb,UAAU,CAACQ,SAAX,CAAqBK,EAArB,CAAP;AACD,GAhCc,CAkCf;;;AACA,SAAOC,eAAP,CAAuBD,EAAvB,EAA2B;AACzB,WAAOb,UAAU,CAACQ,SAAX,CAAqBK,EAArB,EAAyBE,IAAhC;AACD,GArCc,CAuCf;;;AACA,SAAOC,cAAP,CAAsBH,EAAtB,EAA0B;AACxB,WAAOb,UAAU,CAACQ,SAAX,CAAqBK,EAArB,EAAyBI,GAAhC;AACD,GA1Cc,CA4Cf;;;AACA,SAAOC,cAAP,GAAwB;AACtB,QAAIC,cAAc,GAAG,EAArB;AACArB,IAAAA,WAAW,CAACK,QAAZ,CAAqBiB,OAArB,CAA8BC,OAAD,IAAa;AACxCF,MAAAA,cAAc,CAACG,IAAf,CAAoBD,OAAO,CAACZ,EAA5B;AACD,KAFD;AAGA,WAAOU,cAAP;AACD,GAnDc,CAqDf;;;AACA,SAAOI,aAAP,GAAuB;AACrB,QAAIC,aAAa,GAAG,EAApB;AACA1B,IAAAA,WAAW,CAACO,OAAZ,CAAoBe,OAApB,CAA6BC,OAAD,IAAa;AACvCG,MAAAA,aAAa,CAACF,IAAd,CAAmBD,OAAO,CAACZ,EAA3B;AACD,KAFD;AAGA,WAAOe,aAAP;AACD,GA5Dc,CA8Df;;;AACA,SAAOC,WAAP,GAAqB;AACnB,QAAIC,WAAW,GAAG,EAAlB;AACA5B,IAAAA,WAAW,CAACQ,KAAZ,CAAkBc,OAAlB,CAA2BC,OAAD,IAAa;AACrCK,MAAAA,WAAW,CAACJ,IAAZ,CAAiBD,OAAO,CAACZ,EAAzB;AACD,KAFD;AAGA,WAAOiB,WAAP;AACD;;AArEc;;AAAX1B,U,CACGQ,S,GAAY,IAAImB,GAAJ,E;AADf3B,U,CAEGE,Q,GAAW,C;AAqEpB0B,MAAM,CAACC,OAAP,GAAiB7B,UAAjB","sourcesContent":["var CARDOBJECTS = require(\"./game_data/cluelessmap.json\"); // Might need to change the name for clarity.\n\nclass CardMapper {\n  static idMapping = new Map();\n  static MAP_SIZE = 0;\n\n  /* **** STATIC FUNCTIONS THAT BELONG TO THE CARD MAPPER CLASS *** */\n\n  // Generate Clue-Less Card Mapping.\n  static generateIdMap() {\n    // Get Map Size:\n    CardMapper.MAP_SIZE = 0;\n    CardMapper.MAP_SIZE += CARDOBJECTS.Suspects.length;\n    CardMapper.MAP_SIZE += CARDOBJECTS.Weapons.length;\n    CardMapper.MAP_SIZE += CARDOBJECTS.Rooms.length;\n\n    // Add Suspects to \"Master Map\"...\n    for (const suspect of CARDOBJECTS.Suspects) {\n      CardMapper.idMapping[suspect.Id] = suspect;\n    }\n    // Add Weapons to \"Master Map\"...\n    for (const weapon of CARDOBJECTS.Weapons) {\n      CardMapper.idMapping[weapon.Id] = weapon;\n    }\n    // Add Rooms to \"Master Map\"...\n    for (const room of CARDOBJECTS.Rooms) {\n      CardMapper.idMapping[room.Id] = room;\n    }\n    return;\n  }\n\n  // Get Clue-Less Card Object by ID.\n  static getCardById(id) {\n    return CardMapper.idMapping[id];\n  }\n\n  // Get Clue-Less Card Name by ID.\n  static getCardNameById(id) {\n    return CardMapper.idMapping[id].Name;\n  }\n\n  // Get Clue-Less Card Name by ID.\n  static getCardImgById(id) {\n    return CardMapper.idMapping[id].Img;\n  }\n\n  // Get ID Array of All Suspects.\n  static getAllSuspects() {\n    var suspectIdArray = [];\n    CARDOBJECTS.Suspects.forEach((element) => {\n      suspectIdArray.push(element.Id);\n    });\n    return suspectIdArray;\n  }\n\n  // Get ID Array of All Weapons.\n  static getAllWeapons() {\n    var weaponIdArray = [];\n    CARDOBJECTS.Weapons.forEach((element) => {\n      weaponIdArray.push(element.Id);\n    });\n    return weaponIdArray;\n  }\n\n  // Get ID Array of All Rooms.\n  static getAllRooms() {\n    var roomIdArray = [];\n    CARDOBJECTS.Rooms.forEach((element) => {\n      roomIdArray.push(element.Id);\n    });\n    return roomIdArray;\n  }\n}\nmodule.exports = CardMapper;\n"]},"metadata":{},"sourceType":"module"}