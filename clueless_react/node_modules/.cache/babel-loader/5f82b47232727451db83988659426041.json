{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Message.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { socket } from './ClientManager.js';\nvar array = [];\nexport default function Message() {\n  const [response, setResponse] = useState(\"\");\n  useEffect(() => {\n    socket.on('turn', data => {\n      console.log('Data ' + data);\n      alert(\"MESSAGE: Your turn to make suggestion\");\n      setResponse(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, response));\n} // class Message extends Component {\n//   constructor(){\n//     super();\n//     window.alertMessage = this.alertMessage.bind(this);\n// }\n//   state = {\n//     getBody: ''\n//   };\n//   componentWillUnmount() {\n//     clearInterval(this.timer)\n//     this.timer = null;\n//   }\n//   alertMessage() {\n//       console.log(\"From the outside\")\n//   }\n//   getItems() {\n//     //http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\n//     //Get request and then assign it to state.getBoby\n//     //return state.getBody in render\n//     //Could also unshift into array, and return the array like Divider:Stubbed_Messages\n//   }\n//   componentDidMount() {\n//     this.getItems();\n//     //Starting timer to fetch every 5 seconds\n//     this.timer = setInterval(()=> this.getItems(), 5000);\n//   }\n// render() {\n//     return (\n//         <p>!{this.state.getBody}!</p>\n//     );\n//   }\n// }\n// export default Message;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Message.js"],"names":["React","useEffect","useState","socket","array","Message","response","setResponse","on","data","console","log","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,IAAIC,KAAK,GAAG,EAAZ;AAEA,eAAe,SAASC,OAAT,GAAmB;AAEhC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACK,EAAP,CAAU,MAAV,EAAkBC,IAAI,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,IAAtB;AACAG,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACAL,MAAAA,WAAW,CAACE,IAAD,CAAX;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF,CADF;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { socket } from './ClientManager.js'\n\nvar array = [];\n\nexport default function Message() {\n\n  const [response, setResponse] = useState(\"\");\n\n  useEffect(() => {\n    socket.on('turn', data => {\n      console.log('Data ' + data);\n      alert(\"MESSAGE: Your turn to make suggestion\");\n      setResponse(data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <p>\n        {response}\n      </p>\n    </div>\n  );\n}\n\n// class Message extends Component {\n//   constructor(){\n//     super();\n//     window.alertMessage = this.alertMessage.bind(this);\n// }\n//   state = {\n//     getBody: ''\n//   };\n  \n//   componentWillUnmount() {\n//     clearInterval(this.timer)\n//     this.timer = null;\n//   }\n//   alertMessage() {\n//       console.log(\"From the outside\")\n//   }\n\n//   getItems() {\n//     //http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\n//     //Get request and then assign it to state.getBoby\n//     //return state.getBody in render\n//     //Could also unshift into array, and return the array like Divider:Stubbed_Messages\n//   }\n\n//   componentDidMount() {\n//     this.getItems();\n//     //Starting timer to fetch every 5 seconds\n//     this.timer = setInterval(()=> this.getItems(), 5000);\n//   }\n  \n// render() {\n//     return (\n//         <p>!{this.state.getBody}!</p>\n//     );\n//   }\n// }\n\n// export default Message;"]},"metadata":{},"sourceType":"module"}