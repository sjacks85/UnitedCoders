{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/LoginPage.js\";\nimport { jsxOpeningFragment, tsImportEqualsDeclaration } from \"@babel/types\";\nimport React from \"react\";\nimport { makeMovement, makeSuggestion, makeAccusation, makeDisprove } from \"./ClientManager\";\nimport \"./LoginPage.css\";\nvar uniqueIDs = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C1\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C2\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C3\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C4\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C5\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C6\"\n}, //6\n{\n  type: \"weapon\",\n  name: \"Candlestick\",\n  image: \"W1\"\n}, //7\n{\n  type: \"weapon\",\n  name: \"Revolver\",\n  image: \"W4\"\n}, //8\n{\n  type: \"weapon\",\n  name: \"Knife\",\n  image: \"W2\"\n}, //9\n{\n  type: \"weapon\",\n  name: \"Pipe\",\n  image: \"W3\"\n}, //10\n{\n  type: \"weapon\",\n  name: \"Rope\",\n  image: \"W5\"\n}, //11\n{\n  type: \"weapon\",\n  name: \"Wrench\",\n  image: \"W6\"\n}, //12\n{\n  type: \"room\",\n  name: \"Study\",\n  roomId: 11\n}, //13\n{\n  type: \"room\",\n  name: \"Hall\",\n  roomId: 12\n}, //14\n{\n  type: \"room\",\n  name: \"Lounge\",\n  roomId: 13\n}, //15\n{\n  type: \"room\",\n  name: \"Dinning Room\",\n  roomId: 23\n}, //16\n{\n  type: \"room\",\n  name: \"Billiard Room\",\n  roomId: 22\n}, //17\n{\n  type: \"room\",\n  name: \"Library\",\n  roomId: 21\n}, //18\n{\n  type: \"room\",\n  name: \"Conservatory\",\n  roomId: 31\n}, //19\n{\n  type: \"room\",\n  name: \"Ballroom\",\n  roomId: 32\n}, //20\n{\n  type: \"room\",\n  name: \"Kitchen\",\n  roomId: 33\n}];\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      character: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCharacter = this.handleCharacter.bind(this);\n    this.handleClickStart = this.handleClickStart.bind(this);\n    this.joinGame = this.joinGame.bind(this);\n    this.startGame = this.startGame.bind(this);\n  } // handleChange(event) {\n  //   this.setState({ value: event.target.value });\n  // }\n\n\n  handleChange(evt) {\n    const value = evt.target.value;\n    this.setState({ ...this.state,\n      [evt.target.name]: value\n    }); //console.log(JSON.stringify(this.state));\n  }\n\n  handleCharacter(evt) {\n    //console.log(evt.target.value);\n    //console.log(typeof evt.target.value);\n    this.setState({\n      character: Number(evt.target.value)\n    }); //console.log(JSON.stringify(this.state));\n  }\n\n  handleClick(evt) {\n    console.log(\"CLICK=\" + JSON.stringify(this.state));\n    this.props.setUsername(this.state.username);\n  }\n\n  handleClickStart(evt) {\n    console.log(\"CLICKSTART=\" + JSON.stringify(this.state)); //this.props.setUsername(this.state.username);\n  }\n\n  createSelectItems(type, array) {\n    let items = uniqueIDs.map((item, i) => {\n      return item.type == type && /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, item.name);\n    }, this);\n    return items;\n  }\n\n  joinGame(mes) {\n    if (mes.active_game === false) {\n      //No active game, create game\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, \"No active games found. Would you like to start a game?\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleClickStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, \"Start Game\"));\n    } else if (mes.game_started === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, \"Whoops the game has started! Unable to join.\"));\n    } else {\n      //Ask for username, character\n\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, \"Username\", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"logininput\",\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, \"Character\", /*#__PURE__*/React.createElement(\"select\", {\n        className: \"loginselect\",\n        name: \"character\",\n        value: this.state.character,\n        onChange: this.handleCharacter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, this.createSelectItems(\"character\", mes.available_characters))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, \"Join Game\"));\n    } // Client\n    // If active game but not started:\n    // Ask player for game id\n    // Ask player for username\n    // Ask player for character\n    // Send join game\n    // If active game but started:\n    // Tell player they canâ€™t join\n    // If no active game:\n    // Ask player if they want to start a game\n    // Ask for username, player\n    // Send join game\n    //     MESSAGE ID 02\n    // Client -> server join game: {\n    // create_game: (bool; true to start game)\n    // game_id: (int; ID of the game to join if joining active game)\n    // username: (string; player username)\n    // character: (int; ID of chosen character)\n    // player_id: (int; ID of player\n    // }\n\n  }\n\n  startGame() {// Client\n    // If game can start,\n    // give host option to start game\n    // If game must start\n    // tell host that they have to start game\n    // Send start game message\n    // MESSAGE ID 04\n    // Client -> server start game: {\n    // start_game: (bool; true to start the game)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"getDerivedStateFromProps-LoginPage\");\n    var first = props.setup_messages[0];\n\n    if (first != undefined) {\n      if (first.message_type == 1) {\n        //         MESSAGE ID 01\n        // Server -> client : {\n        // active_game: (bool; if the host has started a game, either in waiting room or active play)\n        // game_started: (bool; true if the game has started; no more players\n        // game_id: (int; id of the active game)\n        // num_players: (int; number of players joined in the game)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        // available_characters: (int []; IDs of characters available)\n        this.joinGame(first);\n      } else if (first.message_type == 3) {\n        //         MESSAGE ID 03\n        // Server -> client update waiting room: {\n        // num_players: (int; number of current players)\n        // can_start: (bool; true if enough players to start game)\n        // must_start: (bool; true if max players reached and game must start)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        this.startGame();\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, \"Welcome!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, \"!\", this.props.setup_messages, \"!\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, \"Username\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"logininput\",\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, \"Character\", /*#__PURE__*/React.createElement(\"select\", {\n      className: \"loginselect\",\n      name: \"character\",\n      value: this.state.character,\n      onChange: this.handleCharacter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, this.createSelectItems(\"character\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, \"Login\"));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/LoginPage.js"],"names":["jsxOpeningFragment","tsImportEqualsDeclaration","React","makeMovement","makeSuggestion","makeAccusation","makeDisprove","uniqueIDs","type","name","image","roomId","LoginPage","Component","constructor","props","state","username","character","handleChange","bind","handleClick","handleCharacter","handleClickStart","joinGame","startGame","evt","value","target","setState","Number","console","log","JSON","stringify","setUsername","createSelectItems","array","items","map","item","i","mes","active_game","game_started","available_characters","getDerivedStateFromProps","first","setup_messages","undefined","message_type","render"],"mappings":"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","sourcesContent":["import { jsxOpeningFragment, tsImportEqualsDeclaration } from \"@babel/types\";\nimport React from \"react\";\nimport {\n  makeMovement,\n  makeSuggestion,\n  makeAccusation,\n  makeDisprove,\n} from \"./ClientManager\";\nimport \"./LoginPage.css\";\n\nvar uniqueIDs = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C1\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C2\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C3\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C4\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C5\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C6\" },\n  //6\n  { type: \"weapon\", name: \"Candlestick\", image: \"W1\" },\n  //7\n  { type: \"weapon\", name: \"Revolver\", image: \"W4\" },\n  //8\n  { type: \"weapon\", name: \"Knife\", image: \"W2\" },\n  //9\n  { type: \"weapon\", name: \"Pipe\", image: \"W3\" },\n  //10\n  { type: \"weapon\", name: \"Rope\", image: \"W5\" },\n  //11\n  { type: \"weapon\", name: \"Wrench\", image: \"W6\" },\n  //12\n  { type: \"room\", name: \"Study\", roomId: 11 },\n  //13\n  { type: \"room\", name: \"Hall\", roomId: 12 },\n  //14\n  { type: \"room\", name: \"Lounge\", roomId: 13 },\n  //15\n  { type: \"room\", name: \"Dinning Room\", roomId: 23 },\n  //16\n  { type: \"room\", name: \"Billiard Room\", roomId: 22 },\n  //17\n  { type: \"room\", name: \"Library\", roomId: 21 },\n  //18\n  { type: \"room\", name: \"Conservatory\", roomId: 31 },\n  //19\n  { type: \"room\", name: \"Ballroom\", roomId: 32 },\n  //20\n  { type: \"room\", name: \"Kitchen\", roomId: 33 },\n];\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      character: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCharacter = this.handleCharacter.bind(this);\n    this.handleClickStart = this.handleClickStart.bind(this);\n    this.joinGame = this.joinGame.bind(this);\n    this.startGame = this.startGame.bind(this);\n  }\n\n  // handleChange(event) {\n  //   this.setState({ value: event.target.value });\n  // }\n\n  handleChange(evt) {\n    const value = evt.target.value;\n    this.setState({\n      ...this.state,\n      [evt.target.name]: value,\n    });\n    //console.log(JSON.stringify(this.state));\n  }\n\n  handleCharacter(evt) {\n    //console.log(evt.target.value);\n    //console.log(typeof evt.target.value);\n    this.setState({ character: Number(evt.target.value) });\n    //console.log(JSON.stringify(this.state));\n  }\n\n  handleClick(evt) {\n    console.log(\"CLICK=\" + JSON.stringify(this.state));\n    this.props.setUsername(this.state.username);\n  }\n\n  handleClickStart(evt) {\n    console.log(\"CLICKSTART=\" + JSON.stringify(this.state));\n    \n    //this.props.setUsername(this.state.username);\n  }\n\n  createSelectItems(type, array) {\n    let items = uniqueIDs.map((item, i) => {\n      return (\n        item.type == type && (\n          <option key={i} value={i}>\n            {item.name}\n          </option>\n        )\n      );\n    }, this);\n    return items;\n  }\n\n  joinGame(mes) {\n\n    if (mes.active_game === false) {\n      //No active game, create game\n      return (\n        <div>\n        <p>No active games found. Would you like to start a game?</p>\n        <button type=\"submit\" onClick={this.handleClickStart}>\n            Start Game\n          </button>\n      </div>\n      )\n    } else if (mes.game_started === true) {\n      return (\n        <div>\n        <p>Whoops the game has started! Unable to join.</p>\n      </div>\n      )\n    } else {\n      //Ask for username, character\n      <div>\n        <label>\n          Username\n          <input\n            className=\"logininput\"\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br></br>\n        <label>\n          Character\n          <select\n            className=\"loginselect\"\n            name=\"character\"\n            value={this.state.character}\n            onChange={this.handleCharacter}\n          >\n            {this.createSelectItems(\"character\", mes.available_characters)}\n          </select>\n        </label>\n        <br></br>\n        <button type=\"submit\" onClick={this.handleClick}>\n          Join Game\n        </button>\n      </div>\n    }\n    // Client\n    // If active game but not started:\n    // Ask player for game id\n    // Ask player for username\n    // Ask player for character\n    // Send join game\n    // If active game but started:\n    // Tell player they canâ€™t join\n    // If no active game:\n    // Ask player if they want to start a game\n    // Ask for username, player\n    // Send join game\n\n    //     MESSAGE ID 02\n    // Client -> server join game: {\n    // create_game: (bool; true to start game)\n    // game_id: (int; ID of the game to join if joining active game)\n    // username: (string; player username)\n    // character: (int; ID of chosen character)\n    // player_id: (int; ID of player\n    // }\n  }\n\n  startGame() {\n    // Client\n    // If game can start,\n    // give host option to start game\n    // If game must start\n    // tell host that they have to start game\n    // Send start game message\n    // MESSAGE ID 04\n    // Client -> server start game: {\n    // start_game: (bool; true to start the game)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"getDerivedStateFromProps-LoginPage\");\n\n    var first = props.setup_messages[0];\n    if (first != undefined) {\n      if (first.message_type == 1) {\n        //         MESSAGE ID 01\n        // Server -> client : {\n        // active_game: (bool; if the host has started a game, either in waiting room or active play)\n        // game_started: (bool; true if the game has started; no more players\n        // game_id: (int; id of the active game)\n        // num_players: (int; number of players joined in the game)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        // available_characters: (int []; IDs of characters available)\n\n        this.joinGame(first);\n      } else if (first.message_type == 3) {\n        //         MESSAGE ID 03\n        // Server -> client update waiting room: {\n        // num_players: (int; number of current players)\n        // can_start: (bool; true if enough players to start game)\n        // must_start: (bool; true if max players reached and game must start)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        this.startGame();\n      }\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Welcome!</h4>\n        <p>!{this.props.setup_messages}!</p>\n        <label>\n          Username\n          <input\n            className=\"logininput\"\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br></br>\n        <label>\n          Character\n          <select\n            className=\"loginselect\"\n            name=\"character\"\n            value={this.state.character}\n            onChange={this.handleCharacter}\n          >\n            {this.createSelectItems(\"character\")}\n          </select>\n        </label>\n        <br></br>\n        <button type=\"submit\" onClick={this.handleClick}>\n          Login\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}