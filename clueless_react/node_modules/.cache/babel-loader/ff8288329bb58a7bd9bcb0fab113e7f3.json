{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"./Divider.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport PlayerHand from \"./PlayerHand\";\nimport { startClient, socket } from \"./ClientManager\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Store in the App, and passed into children as props\n      actions: [],\n      player_id: 0,\n      character_id: 0,\n      cards: [],\n      turn: \"Other Players Turn\"\n    };\n\n    this.onselectTest = string => {\n      console.log(\"TESTCALLBACK\" + string); //this.setState({language: langValue});\n    };\n\n    this.changeCurrentRoom = string => {\n      console.log(\"TESTCALLBACKchangeCurrentRoom\" + string); //this.setState({language: langValue});\n    };\n\n    this.changeCurrentLocationId = string => {\n      console.log(\"TESTCALLBACKchangeCurrentLocationId\" + string); //this.setState({language: langValue});\n    };\n  }\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", message => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n      this.setState({\n        actions: [message, ...this.state.actions]\n      });\n      var newTurn = this.state.turn;\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              //console.log(\"APP: \" + message.message.player_id)\n              //console.log(\"APP: \" + message.message.character)\n              //console.log(\"APP: \" + message.message.cards)\n              this.setState({\n                player_id: message.message.player_id,\n                character_id: message.message.character_id,\n                cards: message.message.cards\n              });\n            }\n          }\n        }\n      }\n\n      if (newTurn != \"Revoked\") {\n        if (message.message_type == 31) {\n          newTurn = \"Movement\";\n        } else if (message.message_type == 32) {\n          newTurn = \"Suggestion\";\n        } else if (message.message_type == 33) {\n          newTurn = \"Disprove\";\n        } else if (message.message_type == 34) {\n          newTurn = \"Accusation\";\n        } else if (message.message_type == 52) {\n          //Does 52 need to be send to everyone? To update their notecard\n          if (message.message.accusation_correct === false) {\n            newTurn = \"Revoked\";\n          }\n        } else if (message.message_type == 61) {\n          newTurn = \"End of Game\";\n        } else {\n          newTurn = \"Other Players Turn\";\n        }\n      }\n\n      this.setState({\n        turn: newTurn\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Gameboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gameboard, {\n      actions: this.state.actions,\n      player_id: this.state.player_id,\n      character_id: this.state.character_id,\n      cards: this.state.cards,\n      turn: this.state.turn,\n      changecurrentLocId: this.changeCurrentLocationId,\n      changecurrentRoom: this.changeCurrentRoom,\n      onSelectTest: this.onselectTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Username = \", window.location.port), /*#__PURE__*/React.createElement(NoteBook, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Player Hand\"), /*#__PURE__*/React.createElement(PlayerHand, {\n      cards: this.state.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Message Board\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MessageBoard, {\n      actions: this.state.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/App.js"],"names":["React","Divider","Gameboard","PlayerHand","startClient","socket","NoteBook","MessageBoard","App","Component","constructor","props","state","actions","player_id","character_id","cards","turn","onselectTest","string","console","log","changeCurrentRoom","changeCurrentLocationId","componentDidMount","window","location","port","on","message","JSON","stringify","setState","newTurn","message_type","username","undefined","accusation_correct","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./Divider.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport PlayerHand from \"./PlayerHand\";\nimport { startClient, socket } from \"./ClientManager\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    // Store in the App, and passed into children as props\n    actions: [],\n    player_id: 0,\n    character_id: 0,\n    cards: [],\n    turn: \"Other Players Turn\",\n  };\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", (message) => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n\n      this.setState({ actions: [message, ...this.state.actions] });\n      var newTurn = this.state.turn;\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              //console.log(\"APP: \" + message.message.player_id)\n              //console.log(\"APP: \" + message.message.character)\n              //console.log(\"APP: \" + message.message.cards)\n              this.setState({\n                player_id: message.message.player_id,\n                character_id: message.message.character_id,\n                cards: message.message.cards,\n              });\n            }\n          }\n        }\n      }\n\n      if (newTurn != \"Revoked\") {\n        if (message.message_type == 31) {\n          newTurn = \"Movement\";\n        } else if (message.message_type == 32) {\n          newTurn = \"Suggestion\";\n        } else if (message.message_type == 33) {\n          newTurn = \"Disprove\";\n        } else if (message.message_type == 34) {\n          newTurn = \"Accusation\";\n        } else if (message.message_type == 52) {\n          //Does 52 need to be send to everyone? To update their notecard\n          if (message.message.accusation_correct === false) {\n            newTurn = \"Revoked\";\n          }\n        } else if (message.message_type == 61) {\n          newTurn = \"End of Game\";\n        } else {\n          newTurn = \"Other Players Turn\";\n        }\n      }\n\n      this.setState({ turn: newTurn });\n    });\n  }\n\n  onselectTest = (string) => {\n    console.log(\"TESTCALLBACK\" + string);\n    //this.setState({language: langValue});\n  };\n\n  changeCurrentRoom = (string) => {\n    console.log(\"TESTCALLBACKchangeCurrentRoom\" + string);\n    //this.setState({language: langValue});\n  };\n\n  changeCurrentLocationId = (string) => {\n    console.log(\"TESTCALLBACKchangeCurrentLocationId\" + string);\n    //this.setState({language: langValue});\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Gameboard</h1>\n        <div class=\"float-container\">\n          <div class=\"float-child\">\n            <div class=\"green\">\n              <Gameboard\n                actions={this.state.actions}\n                player_id={this.state.player_id}\n                character_id={this.state.character_id}\n                cards={this.state.cards}\n                turn={this.state.turn}\n                changecurrentLocId={this.changeCurrentLocationId}\n                changecurrentRoom={this.changeCurrentRoom}\n                onSelectTest={this.onselectTest}\n              />\n            </div>\n          </div>\n          <div class=\"float-child\">\n            <div class=\"blue\">\n              <p>Username = {window.location.port}</p>\n              <NoteBook></NoteBook>\n              <h4>Player Hand</h4>\n              <PlayerHand cards={this.state.cards} />\n              <h4>Message Board</h4>\n              <p>\n                <MessageBoard actions={this.state.actions} />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}