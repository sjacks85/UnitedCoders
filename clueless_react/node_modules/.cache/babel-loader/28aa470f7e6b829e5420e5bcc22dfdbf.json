{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport { startClient, socket } from \"./ClientManager\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Store in the App, and passed into children as props\n      actions: [],\n      player_id: 0,\n      character: \"\",\n      cards: {},\n      turn: \"\"\n    };\n  }\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", message => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n      this.setState({\n        actions: [message, ...this.state.actions]\n      });\n      var newTurn = \"\";\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              this.setState({\n                player_id: message.message.player_id,\n                character: message.message.character,\n                cards: message.message.cards\n              });\n            }\n          }\n        }\n      } else if (message.message_type == 31) {\n        newTurn = \"Movement\";\n      } else if (message.message_type == 32) {\n        newTurn = \"Suggestion\";\n      } else if (message.message_type == 33) {\n        newTurn = \"Disprove\";\n      } else if (message.message_type == 34) {\n        newTurn = \"Accusation\";\n      } else if (message.message_type == 61) {\n        newTurn = \"End of Game\";\n      } else {\n        newTurn = \"Other Players Turn\";\n      }\n\n      this.setState({\n        turn: newTurn\n      });\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    var first = props.actions[0];\n    var newTurn = state.turn;\n\n    if (first != undefined) {\n      if (first.message_type == 31) {\n        newTurn = \"Movement\";\n      } else if (first.message_type == 32) {\n        newTurn = \"Suggestion\";\n      } else if (first.message_type == 33) {\n        newTurn = \"Disprove\";\n      } else if (first.message_type == 34) {\n        newTurn = \"Accusation\";\n      } else if (first.message_type == 61) {\n        newTurn = \"End of Game\";\n      } else {\n        newTurn = \"Other Players Turn\";\n      }\n    }\n\n    return {\n      turn: newTurn\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Gameboard\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Username = \", window.location.port), /*#__PURE__*/React.createElement(Gameboard, {\n      actions: this.state.actions,\n      player_id: \"P\" + this.state.player_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      actions: this.state.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/App.js"],"names":["React","Divider","Gameboard","startClient","socket","App","Component","constructor","props","state","actions","player_id","character","cards","turn","componentDidMount","window","location","port","on","message","console","log","JSON","stringify","setState","newTurn","message_type","username","undefined","getDerivedStateFromProps","first","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport { startClient, socket } from \"./ClientManager\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    // Store in the App, and passed into children as props\n    actions: [],\n    player_id: 0,\n    character: \"\",\n    cards: {},\n    turn: \"\",\n  };\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", (message) => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n\n      this.setState({ actions: [message, ...this.state.actions] });\n      var newTurn = \"\";\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              this.setState({\n                player_id: message.message.player_id,\n                character: message.message.character,\n                cards: message.message.cards,\n              });\n            }\n          }\n        }\n      } else if (message.message_type == 31) {\n        newTurn = \"Movement\";\n      } else if (message.message_type == 32) {\n        newTurn = \"Suggestion\";\n      } else if (message.message_type == 33) {\n        newTurn = \"Disprove\";\n      } else if (message.message_type == 34) {\n        newTurn = \"Accusation\";\n      } else if (message.message_type == 61) {\n        newTurn = \"End of Game\";\n      } else {\n        newTurn = \"Other Players Turn\";\n      }\n\n      this.setState({ turn: newTurn });\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    var first = props.actions[0];\n    var newTurn = state.turn;\n\n    if (first != undefined) {\n      if (first.message_type == 31) {\n        newTurn = \"Movement\";\n      } else if (first.message_type == 32) {\n        newTurn = \"Suggestion\";\n      } else if (first.message_type == 33) {\n        newTurn = \"Disprove\";\n      } else if (first.message_type == 34) {\n        newTurn = \"Accusation\";\n      } else if (first.message_type == 61) {\n        newTurn = \"End of Game\";\n      } else {\n        newTurn = \"Other Players Turn\";\n      }\n    }\n    return { turn: newTurn };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"bottom\">\n          <h1>Gameboard</h1>\n          <p>Username = {window.location.port}</p>\n          <Gameboard\n            actions={this.state.actions}\n            player_id={\"P\" + this.state.player_id}\n          />\n        </div>\n        <div className=\"bottom\">\n          <Divider actions={this.state.actions} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}