{"ast":null,"code":"var _jsxFileName = \"/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/LoginPage.js\";\nimport React from \"react\";\nimport { sendJoinGame, sendStartGame } from \"./ClientManager\";\nimport \"./LoginPage.css\";\nvar uniqueIDs = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C1\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C2\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C3\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C4\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C5\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C6\"\n}, //6\n{\n  type: \"weapon\",\n  name: \"Candlestick\",\n  image: \"W1\"\n}, //7\n{\n  type: \"weapon\",\n  name: \"Revolver\",\n  image: \"W4\"\n}, //8\n{\n  type: \"weapon\",\n  name: \"Knife\",\n  image: \"W2\"\n}, //9\n{\n  type: \"weapon\",\n  name: \"Pipe\",\n  image: \"W3\"\n}, //10\n{\n  type: \"weapon\",\n  name: \"Rope\",\n  image: \"W5\"\n}, //11\n{\n  type: \"weapon\",\n  name: \"Wrench\",\n  image: \"W6\"\n}, //12\n{\n  type: \"room\",\n  name: \"Study\",\n  roomId: 11\n}, //13\n{\n  type: \"room\",\n  name: \"Hall\",\n  roomId: 12\n}, //14\n{\n  type: \"room\",\n  name: \"Lounge\",\n  roomId: 13\n}, //15\n{\n  type: \"room\",\n  name: \"Dinning Room\",\n  roomId: 23\n}, //16\n{\n  type: \"room\",\n  name: \"Billiard Room\",\n  roomId: 22\n}, //17\n{\n  type: \"room\",\n  name: \"Library\",\n  roomId: 21\n}, //18\n{\n  type: \"room\",\n  name: \"Conservatory\",\n  roomId: 31\n}, //19\n{\n  type: \"room\",\n  name: \"Ballroom\",\n  roomId: 32\n}, //20\n{\n  type: \"room\",\n  name: \"Kitchen\",\n  roomId: 33\n}];\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      character: 0,\n      page: \"\",\n      available_characters: [],\n      game_id: 0,\n      player_id: 0,\n      host: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCharacter = this.handleCharacter.bind(this);\n    this.handleClickStart = this.handleClickStart.bind(this);\n    this.handleClickCreate = this.handleClickCreate.bind(this);\n  } // handleChange(event) {\n  //   this.setState({ value: event.target.value });\n  // }\n\n\n  handleChange(evt) {\n    const value = evt.target.value;\n    this.setState({ ...this.state,\n      [evt.target.name]: value\n    }); //console.log(JSON.stringify(this.state));\n  }\n\n  handleCharacter(evt) {\n    //console.log(evt.target.value);\n    //console.log(typeof evt.target.value);\n    this.setState({\n      character: Number(evt.target.value)\n    }); //console.log(JSON.stringify(this.state));\n  }\n\n  handleClick(evt) {\n    console.log(\"CLICKJOIN=\" + JSON.stringify(this.state));\n    sendJoinGame(false, this.state.game_id, this.state.username, this.state.character, this.state.player_id);\n    this.props.setUsername(this.state.username);\n  }\n\n  handleClickCreate(evt) {\n    console.log(\"CLICKCREATE=\" + JSON.stringify(this.state)); //     MESSAGE ID 02\n    // Client -> server join game: {\n    // create_game: (bool; true to start game)\n    // game_id: (int; ID of the game to join if joining active game)\n    // username: (string; player username)\n    // character: (int; ID of chosen character)\n    // player_id: (int; ID of player\n    // }\n\n    sendJoinGame(true, this.state.game_id, this.state.username, this.state.character, this.state.player_id);\n    this.props.setUsername(this.state.username); //this.props.setUsername(this.state.username);\n  }\n\n  handleClickStart(evt) {\n    console.log(\"CLICKSTART=\" + JSON.stringify(this.state));\n    sendStartGame();\n  }\n\n  createSelectItems(array) {\n    if (array != undefined) {\n      //console.log(JSON.stringify(array));\n      // let items = array.map((item, i) => {\n      //   return (\n      //     item.type == type && (\n      //       <option key={i} value={i}>\n      //         {uniqueIDs[i].name}\n      //       </option>\n      //     )\n      //   );\n      // }, this);\n      let items = array.map(item => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: item,\n          value: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }\n        }, uniqueIDs[item].name);\n      }, this); //console.log(JSON.stringify(items));\n\n      return items;\n    } else {\n      return [];\n    }\n  }\n\n  displayLoginPage() {\n    if (this.state.page == \"\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, \"Whoops the server isn't started\"));\n    } else if (this.state.page == \"create_game\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"No active games found. Would you like to start a game?\"), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, \"Username\", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"logininput\",\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, \"Character\", /*#__PURE__*/React.createElement(\"select\", {\n        className: \"loginselect\",\n        name: \"character\",\n        value: this.state.character,\n        onChange: this.handleCharacter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, this.createSelectItems(this.state.available_characters))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleClickCreate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, \"Create Game\"));\n    } else if (this.state.page == \"unable_to_join\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, \"Whoops the game has started! Unable to join.\"));\n    } else if (this.state.page == \"join_game\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, \"Please pick your username and character to join the game!\"), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, \"Username\", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"logininput\",\n        className: \"logininput\",\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, \"Character\", /*#__PURE__*/React.createElement(\"select\", {\n        className: \"loginselect\",\n        name: \"character\",\n        value: this.state.character,\n        onChange: this.handleCharacter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, this.createSelectItems(this.state.available_characters))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, \"Join Game\"));\n    } else if (this.state.page == \"waiting\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, \"Waiting for others to join\"));\n    } else if (this.state.page == \"can_start\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, \"Min number of players have joined the game. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 57\n        }\n      }), \"Host can start game!\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleClickStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, \"Start Game\"));\n    } else if (this.state.page == \"must_start\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"logintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, \"Max number of players have joined the game. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 57\n        }\n      }), \"Host must start game!\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleClickStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }\n      }, \"Start Game\"));\n    } // Client\n    // If active game but not started:\n    // Ask player for game id\n    // Ask player for username\n    // Ask player for character\n    // Send join game\n    // If active game but started:\n    // Tell player they can’t join\n    // If no active game:\n    // Ask player if they want to start a game\n    // Ask for username, player\n    // Send join game\n    //     MESSAGE ID 02\n    // Client -> server join game: {\n    // create_game: (bool; true to start game)\n    // game_id: (int; ID of the game to join if joining active game)\n    // username: (string; player username)\n    // character: (int; ID of chosen character)\n    // player_id: (int; ID of player\n    // }\n\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps-LoginPage\");\n    var first = props.setup_messages[0];\n    var newPage = state.page;\n    var newAvailChar = state.available_characters;\n    var newGameId = state.game_id;\n    var newPlayerId = state.player_id;\n    var newHost = state.host;\n\n    if (first != undefined) {\n      if (first.message_type == 1) {\n        //         MESSAGE ID 01\n        // Server -> client : {\n        // active_game: (bool; if the host has started a game, either in waiting room or active play)\n        // game_started: (bool; true if the game has started; no more players\n        // game_id: (int; id of the active game)\n        // num_players: (int; number of players joined in the game)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        // available_characters: (int []; IDs of characters available)\n        // player_id: (int, id of player)\n        newAvailChar = first.message.available_characters;\n        newGameId = first.message.game_id;\n        newPlayerId = first.message.player_id;\n\n        if (first.message.active_game === false) {\n          newPage = \"create_game\";\n          newHost = true;\n        } else if (first.message.game_started === true) {\n          newPage = \"unable_to_join\";\n        } else {\n          newPage = \"join_game\";\n        }\n      } else if (first.message_type == 5) {\n        //Direct message to player who joined from server\n        //console.log(\"FOUND TARGET\")\n        newPage = \"waiting\";\n      } else if (first.message_type == 3) {\n        //         MESSAGE ID 03\n        // Server -> client update waiting room: {\n        // num_players: (int; number of current players)\n        // can_start: (bool; true if enough players to start game)\n        // must_start: (bool; true if max players reached and game must start)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        //newPage = \"waiting\";\n        if (state.host === true) {\n          if (first.message.can_start === true) {\n            newPage = \"can_start\";\n          }\n\n          if (first.message.must_start === true) {\n            newPage = \"must_start\";\n          }\n        }\n      }\n    }\n\n    return {\n      page: newPage,\n      available_characters: newAvailChar,\n      game_id: newGameId,\n      player_id: newPlayerId,\n      host: newHost\n    };\n  }\n\n  render() {\n    var logoImage = \"./MastheadImages/CluelessLogo.png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logoImage,\n      height: \"60\",\n      width: \"300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }), this.displayLoginPage());\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/LoginPage.js"],"names":["React","sendJoinGame","sendStartGame","uniqueIDs","type","name","image","roomId","LoginPage","Component","constructor","props","state","username","character","page","available_characters","game_id","player_id","host","handleChange","bind","handleClick","handleCharacter","handleClickStart","handleClickCreate","evt","value","target","setState","Number","console","log","JSON","stringify","setUsername","createSelectItems","array","undefined","items","map","item","displayLoginPage","getDerivedStateFromProps","first","setup_messages","newPage","newAvailChar","newGameId","newPlayerId","newHost","message_type","message","active_game","game_started","can_start","must_start","render","logoImage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,iBAA5C;AACA,OAAO,iBAAP;AAEA,IAAIC,SAAS,GAAG,CACd;AACA;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,cAA3B;AAA2CC,EAAAA,KAAK,EAAE;AAAlD,CAFc,EAGd;AACA;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,WAA3B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAJc,EAKd;AACA;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,iBAA3B;AAA8CC,EAAAA,KAAK,EAAE;AAArD,CANc,EAOd;AACA;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,YAA3B;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CARc,EASd;AACA;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,cAA3B;AAA2CC,EAAAA,KAAK,EAAE;AAAlD,CAVc,EAWd;AACA;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,YAA3B;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CAZc,EAad;AACA;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,aAAxB;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CAdc,EAed;AACA;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,UAAxB;AAAoCC,EAAAA,KAAK,EAAE;AAA3C,CAhBc,EAiBd;AACA;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,OAAxB;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAlBc,EAmBd;AACA;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,MAAxB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CApBc,EAqBd;AACA;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,MAAxB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAtBc,EAuBd;AACA;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,QAAxB;AAAkCC,EAAAA,KAAK,EAAE;AAAzC,CAxBc,EAyBd;AACA;AAAEF,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,OAAtB;AAA+BE,EAAAA,MAAM,EAAE;AAAvC,CA1Bc,EA2Bd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,MAAtB;AAA8BE,EAAAA,MAAM,EAAE;AAAtC,CA5Bc,EA6Bd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,QAAtB;AAAgCE,EAAAA,MAAM,EAAE;AAAxC,CA9Bc,EA+Bd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,cAAtB;AAAsCE,EAAAA,MAAM,EAAE;AAA9C,CAhCc,EAiCd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,eAAtB;AAAuCE,EAAAA,MAAM,EAAE;AAA/C,CAlCc,EAmCd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,SAAtB;AAAiCE,EAAAA,MAAM,EAAE;AAAzC,CApCc,EAqCd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,cAAtB;AAAsCE,EAAAA,MAAM,EAAE;AAA9C,CAtCc,EAuCd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,UAAtB;AAAkCE,EAAAA,MAAM,EAAE;AAA1C,CAxCc,EAyCd;AACA;AAAEH,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,SAAtB;AAAiCE,EAAAA,MAAM,EAAE;AAAzC,CA1Cc,CAAhB;;AA6CA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,oBAAoB,EAAE,EAJX;AAKXC,MAAAA,OAAO,EAAE,CALE;AAMXC,MAAAA,SAAS,EAAE,CANA;AAOXC,MAAAA,IAAI,EAAE;AAPK,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBJ,IAAvB,CAA4B,IAA5B,CAAzB;AACD,GAjBqC,CAmBtC;AACA;AACA;;;AAEAD,EAAAA,YAAY,CAACM,GAAD,EAAM;AAChB,UAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;AACA,SAAKE,QAAL,CAAc,EACZ,GAAG,KAAKjB,KADI;AAEZ,OAACc,GAAG,CAACE,MAAJ,CAAWvB,IAAZ,GAAmBsB;AAFP,KAAd,EAFgB,CAMhB;AACD;;AAEDJ,EAAAA,eAAe,CAACG,GAAD,EAAM;AACnB;AACA;AACA,SAAKG,QAAL,CAAc;AAAEf,MAAAA,SAAS,EAAEgB,MAAM,CAACJ,GAAG,CAACE,MAAJ,CAAWD,KAAZ;AAAnB,KAAd,EAHmB,CAInB;AACD;;AAEDL,EAAAA,WAAW,CAACI,GAAD,EAAM;AACfK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeC,IAAI,CAACC,SAAL,CAAe,KAAKtB,KAApB,CAA3B;AACAX,IAAAA,YAAY,CACV,KADU,EAEV,KAAKW,KAAL,CAAWK,OAFD,EAGV,KAAKL,KAAL,CAAWC,QAHD,EAIV,KAAKD,KAAL,CAAWE,SAJD,EAKV,KAAKF,KAAL,CAAWM,SALD,CAAZ;AAOA,SAAKP,KAAL,CAAWwB,WAAX,CAAuB,KAAKvB,KAAL,CAAWC,QAAlC;AACD;;AAEDY,EAAAA,iBAAiB,CAACC,GAAD,EAAM;AACrBK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBC,IAAI,CAACC,SAAL,CAAe,KAAKtB,KAApB,CAA7B,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAX,IAAAA,YAAY,CACV,IADU,EAEV,KAAKW,KAAL,CAAWK,OAFD,EAGV,KAAKL,KAAL,CAAWC,QAHD,EAIV,KAAKD,KAAL,CAAWE,SAJD,EAKV,KAAKF,KAAL,CAAWM,SALD,CAAZ;AAOA,SAAKP,KAAL,CAAWwB,WAAX,CAAuB,KAAKvB,KAAL,CAAWC,QAAlC,EAjBqB,CAkBrB;AACD;;AAEDW,EAAAA,gBAAgB,CAACE,GAAD,EAAM;AACpBK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBC,IAAI,CAACC,SAAL,CAAe,KAAKtB,KAApB,CAA5B;AACAV,IAAAA,aAAa;AACd;;AAEDkC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACvB,QAAIA,KAAK,IAAIC,SAAb,EAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AAC9B,4BACE;AAAQ,UAAA,GAAG,EAAEA,IAAb;AAAmB,UAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEGtC,SAAS,CAACsC,IAAD,CAAT,CAAgBpC,IAFnB,CADF;AAMD,OAPW,EAOT,IAPS,CAAZ,CAXsB,CAmBtB;;AACA,aAAOkC,KAAP;AACD,KArBD,MAqBO;AACL,aAAO,EAAP;AACD;AACF;;AAEDG,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAK9B,KAAL,CAAWG,IAAX,IAAmB,EAAvB,EAA2B;AACzB,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CADF;AAKD,KAND,MAMO,IAAI,KAAKH,KAAL,CAAWG,IAAX,IAAmB,aAAvB,EAAsC;AAC3C,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,eAIE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKO,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,eAeE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,SAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKS,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKa,iBAAL,CAAuB,KAAKxB,KAAL,CAAWI,oBAAlC,CANH,CAFF,CAfF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,eA2BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKS,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA3BF,CADF;AAiCD,KAlCM,MAkCA,IAAI,KAAKb,KAAL,CAAWG,IAAX,IAAmB,gBAAvB,EAAyC;AAC9C,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,CADF;AAKD,KANM,MAMA,IAAI,KAAKH,KAAL,CAAWG,IAAX,IAAmB,WAAvB,EAAoC;AACzC,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QALpB;AAME,QAAA,QAAQ,EAAE,KAAKO,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,SAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKS,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKa,iBAAL,CAAuB,KAAKxB,KAAL,CAAWI,oBAAlC,CANH,CAFF,CAhBF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,eA4BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKM,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA5BF,CADF;AAkCD,KAnCM,MAmCA,IAAI,KAAKV,KAAL,CAAWG,IAAX,IAAmB,SAAvB,EAAkC;AACvC,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF;AAKD,KANM,MAMA,IAAI,KAAKH,KAAL,CAAWG,IAAX,IAAmB,WAAvB,EAAoC;AACzC,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAC8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9C,yBADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKS,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAYD,KAbM,MAaA,IAAI,KAAKZ,KAAL,CAAWG,IAAX,IAAmB,YAAvB,EAAqC;AAC1C,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAC8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9C,0BADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKS,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAYD,KAlHgB,CAmHjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AAED,SAAOmB,wBAAP,CAAgChC,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C;AAEA,QAAIgC,KAAK,GAAGjC,KAAK,CAACkC,cAAN,CAAqB,CAArB,CAAZ;AACA,QAAIC,OAAO,GAAGlC,KAAK,CAACG,IAApB;AACA,QAAIgC,YAAY,GAAGnC,KAAK,CAACI,oBAAzB;AACA,QAAIgC,SAAS,GAAGpC,KAAK,CAACK,OAAtB;AACA,QAAIgC,WAAW,GAAGrC,KAAK,CAACM,SAAxB;AACA,QAAIgC,OAAO,GAAGtC,KAAK,CAACO,IAApB;;AAEA,QAAIyB,KAAK,IAAIN,SAAb,EAAwB;AACtB,UAAIM,KAAK,CAACO,YAAN,IAAsB,CAA1B,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,QAAAA,YAAY,GAAGH,KAAK,CAACQ,OAAN,CAAcpC,oBAA7B;AACAgC,QAAAA,SAAS,GAAGJ,KAAK,CAACQ,OAAN,CAAcnC,OAA1B;AACAgC,QAAAA,WAAW,GAAGL,KAAK,CAACQ,OAAN,CAAclC,SAA5B;;AACA,YAAI0B,KAAK,CAACQ,OAAN,CAAcC,WAAd,KAA8B,KAAlC,EAAyC;AACvCP,UAAAA,OAAO,GAAG,aAAV;AACAI,UAAAA,OAAO,GAAG,IAAV;AACD,SAHD,MAGO,IAAIN,KAAK,CAACQ,OAAN,CAAcE,YAAd,KAA+B,IAAnC,EAAyC;AAC9CR,UAAAA,OAAO,GAAG,gBAAV;AACD,SAFM,MAEA;AACLA,UAAAA,OAAO,GAAG,WAAV;AACD;AACF,OA1BD,MA0BO,IAAIF,KAAK,CAACO,YAAN,IAAsB,CAA1B,EAA6B;AAClC;AACA;AACAL,QAAAA,OAAO,GAAG,SAAV;AACD,OAJM,MAIA,IAAIF,KAAK,CAACO,YAAN,IAAsB,CAA1B,EAA6B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAIvC,KAAK,CAACO,IAAN,KAAe,IAAnB,EAAyB;AACvB,cAAIyB,KAAK,CAACQ,OAAN,CAAcG,SAAd,KAA4B,IAAhC,EAAsC;AACpCT,YAAAA,OAAO,GAAG,WAAV;AACD;;AACD,cAAIF,KAAK,CAACQ,OAAN,CAAcI,UAAd,KAA6B,IAAjC,EAAuC;AACrCV,YAAAA,OAAO,GAAG,YAAV;AACD;AACF;AACF;AACF;;AACD,WAAO;AACL/B,MAAAA,IAAI,EAAE+B,OADD;AAEL9B,MAAAA,oBAAoB,EAAE+B,YAFjB;AAGL9B,MAAAA,OAAO,EAAE+B,SAHJ;AAIL9B,MAAAA,SAAS,EAAE+B,WAJN;AAKL9B,MAAAA,IAAI,EAAE+B;AALD,KAAP;AAOD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,mCAAhB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEA,SAAV;AAAqB,MAAA,MAAM,EAAC,IAA5B;AAAiC,MAAA,KAAK,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAMG,KAAKhB,gBAAL,EANH,CADF;AAUD;;AAvUqC;;AA0UxC,eAAelC,SAAf","sourcesContent":["import React from \"react\";\nimport { sendJoinGame, sendStartGame } from \"./ClientManager\";\nimport \"./LoginPage.css\";\n\nvar uniqueIDs = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C1\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C2\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C3\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C4\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C5\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C6\" },\n  //6\n  { type: \"weapon\", name: \"Candlestick\", image: \"W1\" },\n  //7\n  { type: \"weapon\", name: \"Revolver\", image: \"W4\" },\n  //8\n  { type: \"weapon\", name: \"Knife\", image: \"W2\" },\n  //9\n  { type: \"weapon\", name: \"Pipe\", image: \"W3\" },\n  //10\n  { type: \"weapon\", name: \"Rope\", image: \"W5\" },\n  //11\n  { type: \"weapon\", name: \"Wrench\", image: \"W6\" },\n  //12\n  { type: \"room\", name: \"Study\", roomId: 11 },\n  //13\n  { type: \"room\", name: \"Hall\", roomId: 12 },\n  //14\n  { type: \"room\", name: \"Lounge\", roomId: 13 },\n  //15\n  { type: \"room\", name: \"Dinning Room\", roomId: 23 },\n  //16\n  { type: \"room\", name: \"Billiard Room\", roomId: 22 },\n  //17\n  { type: \"room\", name: \"Library\", roomId: 21 },\n  //18\n  { type: \"room\", name: \"Conservatory\", roomId: 31 },\n  //19\n  { type: \"room\", name: \"Ballroom\", roomId: 32 },\n  //20\n  { type: \"room\", name: \"Kitchen\", roomId: 33 },\n];\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      character: 0,\n      page: \"\",\n      available_characters: [],\n      game_id: 0,\n      player_id: 0,\n      host: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCharacter = this.handleCharacter.bind(this);\n    this.handleClickStart = this.handleClickStart.bind(this);\n    this.handleClickCreate = this.handleClickCreate.bind(this);\n  }\n\n  // handleChange(event) {\n  //   this.setState({ value: event.target.value });\n  // }\n\n  handleChange(evt) {\n    const value = evt.target.value;\n    this.setState({\n      ...this.state,\n      [evt.target.name]: value,\n    });\n    //console.log(JSON.stringify(this.state));\n  }\n\n  handleCharacter(evt) {\n    //console.log(evt.target.value);\n    //console.log(typeof evt.target.value);\n    this.setState({ character: Number(evt.target.value) });\n    //console.log(JSON.stringify(this.state));\n  }\n\n  handleClick(evt) {\n    console.log(\"CLICKJOIN=\" + JSON.stringify(this.state));\n    sendJoinGame(\n      false,\n      this.state.game_id,\n      this.state.username,\n      this.state.character,\n      this.state.player_id\n    );\n    this.props.setUsername(this.state.username);\n  }\n\n  handleClickCreate(evt) {\n    console.log(\"CLICKCREATE=\" + JSON.stringify(this.state));\n    //     MESSAGE ID 02\n    // Client -> server join game: {\n    // create_game: (bool; true to start game)\n    // game_id: (int; ID of the game to join if joining active game)\n    // username: (string; player username)\n    // character: (int; ID of chosen character)\n    // player_id: (int; ID of player\n    // }\n    sendJoinGame(\n      true,\n      this.state.game_id,\n      this.state.username,\n      this.state.character,\n      this.state.player_id\n    );\n    this.props.setUsername(this.state.username);\n    //this.props.setUsername(this.state.username);\n  }\n\n  handleClickStart(evt) {\n    console.log(\"CLICKSTART=\" + JSON.stringify(this.state));\n    sendStartGame();\n  }\n\n  createSelectItems(array) {\n    if (array != undefined) {\n      //console.log(JSON.stringify(array));\n      // let items = array.map((item, i) => {\n      //   return (\n      //     item.type == type && (\n      //       <option key={i} value={i}>\n      //         {uniqueIDs[i].name}\n      //       </option>\n      //     )\n      //   );\n      // }, this);\n      let items = array.map((item) => {\n        return (\n          <option key={item} value={item}>\n            {/* {uniqueIDs[i].name} */}\n            {uniqueIDs[item].name}\n          </option>\n        );\n      }, this);\n      //console.log(JSON.stringify(items));\n      return items;\n    } else {\n      return [];\n    }\n  }\n\n  displayLoginPage() {\n    if (this.state.page == \"\") {\n      return (\n        <div className=\"logintext\">\n          <p>Whoops the server isn't started</p>\n        </div>\n      );\n    } else if (this.state.page == \"create_game\") {\n      return (\n        <div className=\"logintext\">\n          <p className=\"logintext\">\n            No active games found. Would you like to start a game?\n          </p>\n          <label className=\"logintext\">\n            Username\n            <input\n              className=\"logininput\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br></br>\n          <label className=\"logintext\">\n            Character\n            <select\n              className=\"loginselect\"\n              name=\"character\"\n              value={this.state.character}\n              onChange={this.handleCharacter}\n            >\n              {this.createSelectItems(this.state.available_characters)}\n            </select>\n          </label>\n          <br></br>\n          <button type=\"submit\" onClick={this.handleClickCreate}>\n            Create Game\n          </button>\n        </div>\n      );\n    } else if (this.state.page == \"unable_to_join\") {\n      return (\n        <div className=\"logintext\">\n          <p>Whoops the game has started! Unable to join.</p>\n        </div>\n      );\n    } else if (this.state.page == \"join_game\") {\n      return (\n        <div className=\"logintext\">\n          <p className=\"logintext\">\n            Please pick your username and character to join the game!\n          </p>\n          <label>\n            Username\n            <input\n              className=\"logininput\"\n              className=\"logininput\"\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br></br>\n          <label>\n            Character\n            <select\n              className=\"loginselect\"\n              name=\"character\"\n              value={this.state.character}\n              onChange={this.handleCharacter}\n            >\n              {this.createSelectItems(this.state.available_characters)}\n            </select>\n          </label>\n          <br></br>\n          <button type=\"submit\" onClick={this.handleClick}>\n            Join Game\n          </button>\n        </div>\n      );\n    } else if (this.state.page == \"waiting\") {\n      return (\n        <div className=\"logintext\">\n          <p>Waiting for others to join</p>\n        </div>\n      );\n    } else if (this.state.page == \"can_start\") {\n      return (\n        <div className=\"logintext\">\n          <p className=\"logintext\">\n            Min number of players have joined the game. <br></br>\n            Host can start game!\n          </p>\n          <br></br>\n          <button type=\"submit\" onClick={this.handleClickStart}>\n            Start Game\n          </button>\n        </div>\n      );\n    } else if (this.state.page == \"must_start\") {\n      return (\n        <div className=\"logintext\">\n          <p className=\"logintext\">\n            Max number of players have joined the game. <br></br>\n            Host must start game!\n          </p>\n          <br></br>\n          <button type=\"submit\" onClick={this.handleClickStart}>\n            Start Game\n          </button>\n        </div>\n      );\n    }\n    // Client\n    // If active game but not started:\n    // Ask player for game id\n    // Ask player for username\n    // Ask player for character\n    // Send join game\n    // If active game but started:\n    // Tell player they can’t join\n    // If no active game:\n    // Ask player if they want to start a game\n    // Ask for username, player\n    // Send join game\n\n    //     MESSAGE ID 02\n    // Client -> server join game: {\n    // create_game: (bool; true to start game)\n    // game_id: (int; ID of the game to join if joining active game)\n    // username: (string; player username)\n    // character: (int; ID of chosen character)\n    // player_id: (int; ID of player\n    // }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps-LoginPage\");\n\n    var first = props.setup_messages[0];\n    var newPage = state.page;\n    var newAvailChar = state.available_characters;\n    var newGameId = state.game_id;\n    var newPlayerId = state.player_id;\n    var newHost = state.host;\n\n    if (first != undefined) {\n      if (first.message_type == 1) {\n        //         MESSAGE ID 01\n        // Server -> client : {\n        // active_game: (bool; if the host has started a game, either in waiting room or active play)\n        // game_started: (bool; true if the game has started; no more players\n        // game_id: (int; id of the active game)\n        // num_players: (int; number of players joined in the game)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        // available_characters: (int []; IDs of characters available)\n        // player_id: (int, id of player)\n        newAvailChar = first.message.available_characters;\n        newGameId = first.message.game_id;\n        newPlayerId = first.message.player_id;\n        if (first.message.active_game === false) {\n          newPage = \"create_game\";\n          newHost = true;\n        } else if (first.message.game_started === true) {\n          newPage = \"unable_to_join\";\n        } else {\n          newPage = \"join_game\";\n        }\n      } else if (first.message_type == 5) {\n        //Direct message to player who joined from server\n        //console.log(\"FOUND TARGET\")\n        newPage = \"waiting\";\n      } else if (first.message_type == 3) {\n        //         MESSAGE ID 03\n        // Server -> client update waiting room: {\n        // num_players: (int; number of current players)\n        // can_start: (bool; true if enough players to start game)\n        // must_start: (bool; true if max players reached and game must start)\n        // players: {\n        // Id: (int; Id of player\n        // username: (string; player username)\n        // character: (int; character ID)\n        // }\n        // host: (int; id of host player)\n        //newPage = \"waiting\";\n        if (state.host === true) {\n          if (first.message.can_start === true) {\n            newPage = \"can_start\";\n          }\n          if (first.message.must_start === true) {\n            newPage = \"must_start\";\n          }\n        }\n      }\n    }\n    return {\n      page: newPage,\n      available_characters: newAvailChar,\n      game_id: newGameId,\n      player_id: newPlayerId,\n      host: newHost,\n    };\n  }\n\n  render() {\n    var logoImage = \"./MastheadImages/CluelessLogo.png\";\n    return (\n      <div className=\"loginbox\">\n        <img src={logoImage} height=\"60\" width=\"300\" />\n        <br></br>\n        <br></br>\n        {/* <h4>Welcome!</h4>\n        <p>!{JSON.stringify(this.props.setup_messages)}!</p> */}\n        {this.displayLoginPage()}\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}