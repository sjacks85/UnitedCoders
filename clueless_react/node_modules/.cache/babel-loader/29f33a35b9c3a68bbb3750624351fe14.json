{"ast":null,"code":"var _jsxFileName = \"/Users/erikriis/Desktop/UnitedCoders/clueless_react/src/Gameboard.js\";\nimport React, { useEffect } from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\nimport PlayerHand from \"./PlayerHand\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\nimport \"./Divider.css\";\nimport './GameBoard.css';\nimport './NoteBook.css';\nimport Iframe from 'react-iframe';\nimport { useGameboardMessage } from './useGameboardMessage';\nvar uniqueIDs = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C1\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C2\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C3\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C4\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C5\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C6\"\n}, //6\n{\n  type: \"weapon\",\n  name: \"Candlestick\",\n  image: \"W1\"\n}, //7\n{\n  type: \"weapon\",\n  name: \"Revolver\",\n  image: \"W4\"\n}, //8\n{\n  type: \"weapon\",\n  name: \"Knife\",\n  image: \"W2\"\n}, //9\n{\n  type: \"weapon\",\n  name: \"Pipe\",\n  image: \"W3\"\n}, //10\n{\n  type: \"weapon\",\n  name: \"Rope\",\n  image: \"W5\"\n}, //11\n{\n  type: \"weapon\",\n  name: \"Wrench\",\n  image: \"W6\"\n}, //12\n{\n  type: \"room\",\n  name: \"Study\",\n  roomId: 11\n}, //13\n{\n  type: \"room\",\n  name: \"Hall\",\n  roomId: 12\n}, //14\n{\n  type: \"room\",\n  name: \"Lounge\",\n  roomId: 13\n}, //15\n{\n  type: \"room\",\n  name: \"Dinning Room\",\n  roomId: 23\n}, //16\n{\n  type: \"room\",\n  name: \"Billiard Room\",\n  roomId: 22\n}, //17\n{\n  type: \"room\",\n  name: \"Library\",\n  roomId: 21\n}, //18\n{\n  type: \"room\",\n  name: \"Conservatory\",\n  roomId: 31\n}, //19\n{\n  type: \"room\",\n  name: \"Ballroom\",\n  roomId: 32\n}, //20\n{\n  type: \"room\",\n  name: \"Kitchen\",\n  roomId: 33\n}];\nvar startLocations = [//0 Miss Scarlet\n{\n  currentX: 0,\n  currentY: 3\n}, // 1\n{\n  currentX: 4,\n  currentY: 1\n}, // 2\n{\n  currentX: 1,\n  currentY: 4\n}, //3\n{\n  currentX: 1,\n  currentY: 0\n}, //4\n{\n  currentX: 3,\n  currentY: 0\n}, //5\n{\n  currentX: 4,\n  currentY: 3\n}, //Weapons 6\n{\n  currentX: 0,\n  currentY: 0\n}, //Weapons 7\n{\n  currentX: 2,\n  currentY: 0\n}, //Weapons 8\n{\n  currentX: 4,\n  currentY: 0\n}, //Weapons 9\n{\n  currentX: 0,\n  currentY: 4\n}, //Weapons 10\n{\n  currentX: 2,\n  currentY: 4\n}, //Weapons 11\n{\n  currentX: 4,\n  currentY: 4\n}];\nvar startGrid = [[{\n  uniqueid: 12,\n  roomId: \"11\",\n  roomName: \"Study\",\n  roomObjs: [6]\n}, {\n  uniqueid: 0,\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 13,\n  roomId: \"12\",\n  roomName: \"Hall\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomObjs: [0]\n}, {\n  uniqueid: 14,\n  roomId: \"13\",\n  roomName: \"Lounge\",\n  roomObjs: [9]\n}], [{\n  uniqueid: 0,\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomObjs: [3]\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomObjs: [2]\n}], [{\n  uniqueid: 17,\n  roomId: \"21\",\n  roomName: \"Library\",\n  roomObjs: [7]\n}, {\n  uniqueid: 0,\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 16,\n  roomId: \"22\",\n  roomName: \"Billiard Room\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 15,\n  roomId: \"23\",\n  roomName: \"Dinning Room\",\n  roomObjs: [10]\n}], [{\n  uniqueid: 0,\n  roomId: \"2131\",\n  roomName: \"Hallway\",\n  roomObjs: [4]\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2232\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2333\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}], [{\n  uniqueid: 18,\n  roomId: \"31\",\n  roomName: \"Conservatory\",\n  roomObjs: [8]\n}, {\n  uniqueid: 0,\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomObjs: [1]\n}, {\n  uniqueid: 19,\n  roomId: \"32\",\n  roomName: \"Ballroom\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomObjs: [5]\n}, {\n  uniqueid: 20,\n  roomId: \"33\",\n  roomName: \"Kitchen\",\n  roomObjs: [11]\n}]]; // var startLocationsIframe = [{ \"playerId\": \"P1\", \"roomId\": \"1213\" }, { \"playerId\": \"P2\", \"roomId\": \"3132\" }, { \"playerId\": \"P3\", \"roomId\": \"1323\" }, { \"playerId\": \"P4\", \"roomId\": \"1121\" }, { \"playerId\": \"P5\", \"roomId\": \"2131\" }, { \"playerId\": \"P6\", \"roomId\": \"3233\" }, { \"playerId\": \"W1\", \"roomId\": \"11\" }, { \"playerId\": \"W2\", \"roomId\": \"21\" }, { \"playerId\": \"W3\", \"roomId\": \"31\" }, { \"playerId\": \"W4\", \"roomId\": \"13\" }, { \"playerId\": \"W5\", \"roomId\": \"23\" }, { \"playerId\": \"W6\", \"roomId\": \"33\" }];\n\nvar startLocationsIframe = convertLocations(startLocations);\nvar iframeUrl = \"./Board.html?startLocations=\" + JSON.stringify(startLocationsIframe);\nexport const ScreenWidth = ({\n  children\n}) => {\n  const screenWidth = useScreenWidth();\n  return children(screenWidth);\n};\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character_id: -1,\n      cards: {},\n      // Gameboard grid\n      grid: startGrid,\n      // Tracks all player and weapon locations\n      locations: startLocations,\n      // Tracks current player location\n      currentX: -1,\n      currentY: -1,\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.displayIcons = this.displayIcons.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  }\n\n  displayIcons() {\n    const objects = uniqueIDs.map((object, index) => {\n      const imgsrc = \"/gameboard/\" + index.toString() + \".png\";\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }\n      }, \" \", index.toString(), /*#__PURE__*/React.createElement(\"img\", {\n        src: imgsrc,\n        height: \"45\",\n        width: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 12\n      }\n    }, objects);\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n\n      if (found) {\n        alert(\"That's a valid location to movement! Moving to the \" + this.state.grid[x][y].roomName); //Send movement request with requested room\n\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({\n          movementTurn: false,\n          validOptions: []\n        });\n      } else {\n        alert(\"That's an invalid location to movement. Try again!\");\n      }\n    } else {\n      alert(\"It's not your turn to move!\");\n    }\n  }\n\n  provideCurrentRoom() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY; //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n\n    if (cx == -1 & cy == -1) {\n      return \"\";\n    } else {\n      var name = this.state.grid[cx][cy].roomName; //console.log(\"HALLWAY: \" + name);\n\n      return name;\n    }\n  }\n\n  provideCurrentLocationId() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY; //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n\n    if (cx == -1 & cy == -1) {\n      return \"\";\n    } else {\n      var locid = this.state.grid[cx][cy].uniqueid; //console.log(\"HALLWAY: \" + locid);\n\n      return locid;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions; //console.log(\"CHARACTER \" + props.character_id)\n\n    if (props.player_id != 0 && state.currentX == -1 && state.currentY == -1) {\n      //console.log(\"BMOVEMENT \" + newCurrentX)\n      //console.log(\"BMOVEMENT \" + newCurrentY)\n      newCurrentX = state.locations[props.character_id].currentX;\n      newCurrentY = state.locations[props.character_id].currentY; //console.log(\"AMOVEMENT \" + newCurrentX)\n      //console.log(\"AMOVEMENT \" + newCurrentY)\n    }\n\n    var first = props.actions[0]; //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        //console.log(\"Found movement broadcast\");\n        if (first.message.character_moved === true) {\n          //console.log(\"Character move\")\n          var objId = Number(first.message.moved_character);\n          console.log(\"Character move: \" + objId);\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY; //console.log(\"MOVEMENT current\" + cx + \" \" + cy)\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y; //console.log(\"MOVEMENT new\" + nx + \" \" + ny)\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if (objId = props.character_id) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          } // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[cx][cy]))\n          // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[nx][ny]))\n          //console.log(\"MOVEMENT \" + newLocations[objId].currentX)\n          // console.log(\"MOVEMENT \" + newLocations[objId].currentY)\n          //console.log(\"MOVEMENT \" + newCurrentX)\n          //console.log(\"MOVEMENT \" + newCurrentY)\n\n        }\n\n        if (first.message.weapon_moved === true) {\n          //console.log(\"Weapon move\")\n          var objId = Number(first.message.moved_weapon);\n          console.log(\"Weapon move: \" + objId);\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      player_id: props.player_id,\n      character_id: props.character_id,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions\n    };\n  }\n\n  displayPlayerInfo() {\n    let string = \"\";\n\n    if (this.props.player_id != 0) {\n      let cx = this.state.locations[this.props.character_id].currentX;\n      let cy = this.state.locations[this.props.character_id].currentY;\n      let roomName = this.state.grid[cx][cy].roomName;\n      string = \"Username = \" + window.location.port + \" | Character = \" + uniqueIDs[this.props.character_id].name + \" | Location = \" + roomName; //string = \"Username = \" + window.location.port + \" | Player = \" + this.props.player_id + \" | Current Location = [\" + this.state.locations[this.props.character_id].currentX + \", \" + this.state.locations[this.props.character_id].currentY + \"]\";\n    } else {\n      string = \"Username = \" + window.location.port;\n    }\n\n    return string;\n  }\n\n  useGameboardCommunication() {\n    useEffect(() => {\n      const handler = event => {\n        // const data = JSON.parse(event.data)\n        const requestedMove = event.data;\n        alert(requestedMove);\n        var requestedCoords = convertIdToCoords(requestedMove); //validate this\n        //send new board layout to iframe\n        //handleOnClick(requestedCoords[0], requestedCoords[1]);\n      };\n\n      window.addEventListener(\"message\", handler);\n    }, []);\n  }\n\n  render() {\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 9\n        }\n      }, r.map((d, j) => {\n        return /*#__PURE__*/React.createElement(Room, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          },\n          contents: d,\n          x: i,\n          y: j,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }\n        });\n      }));\n    });\n\n    if (this.props.player_id != 0) {\n      this.props.onSelectTest(\"KATHRYN FROM GAMEBOARD\"); //this.props.changeCurrentRoom(this.provideCurrentRoom())\n      //this.props.changeCurrentLocationId(this.provideCurrentLocationId())\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 15\n      }\n    }, \"Gameboard\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 15\n      }\n    }, this.displayPlayerInfo()), /*#__PURE__*/React.createElement(Iframe, {\n      id: \"board-iframe\",\n      url: iframeUrl,\n      marginwidth: \"0\",\n      marginheight: \"0\",\n      hspace: \"0\",\n      vspace: \"0\",\n      frameborder: \"0\",\n      scrolling: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(GameboardCommunication, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"gameboard_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 17\n      }\n    }, rows)))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-child\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      actions: this.props.actions,\n      currentLocId: this.provideCurrentLocationId(),\n      currentRoom: this.provideCurrentRoom(),\n      cards: this.props.cards,\n      turn: this.props.turn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 15\n      }\n    }, \"Player Notebook\"), /*#__PURE__*/React.createElement(NoteBook, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 15\n      }\n    }, \"Player Hand\"), /*#__PURE__*/React.createElement(PlayerHand, {\n      cards: this.state.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 15\n      }\n    }, \"Message Board\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MessageBoard, {\n      actions: this.props.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n} //Iframe Communication\n// function useGameboardCommunication() {\n//   useEffect(() => {\n//     const handler = event => {\n//       // const data = JSON.parse(event.data)\n//       const requestedMove = event.data;\n//       alert(requestedMove)\n//      var requestedCoords = convertIdToCoords(requestedMove);\n//      //validate this\n//      //send new board layout to iframe\n//      //handleOnClick(requestedCoords[0], requestedCoords[1]);\n//     }\n//     window.addEventListener(\"message\", handler)\n//   }, [])\n// }\n\nfunction convertLocations(locations) {\n  // var locations = this.state.locations;\n  var convertedLocations = [];\n\n  for (var i = 0; i < 6; i++) {\n    var locationObject = {\n      playerId: 'P' + (i + 1),\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY)\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  for (var i = 6; i < locations.length; i++) {\n    var locationObject = {\n      playerId: 'W' + (i - 5),\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY)\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  return convertedLocations;\n} //convert locations to room ID\n\n\nfunction convertCoordsToId(x, y) {\n  return startGrid[x][y].roomId;\n} //convert locations to room ID\n\n\nfunction convertIdToCoords(id) {\n  // startGrid is an array of json objects...iterate through array until you fin matching ID, return coords\n  var coords = [];\n\n  for (var i = 0; i < startGrid.length; i++) {\n    var row = startGrid[i];\n\n    for (var j = 0; j < row.length; j++) {\n      if (row[j].roomId === id) {\n        coords = [i, j];\n      }\n    }\n  }\n\n  return coords;\n}\n\nlet GameboardCommunication = p => (useGameboardCommunication(), null);\n\nexport default Gameboard;","map":{"version":3,"sources":["/Users/erikriis/Desktop/UnitedCoders/clueless_react/src/Gameboard.js"],"names":["React","useEffect","Room","Box","makeMovement","PlayerHand","NoteBook","MessageBoard","Iframe","useGameboardMessage","uniqueIDs","type","name","image","roomId","startLocations","currentX","currentY","startGrid","uniqueid","roomName","roomObjs","startLocationsIframe","convertLocations","iframeUrl","JSON","stringify","ScreenWidth","children","screenWidth","useScreenWidth","Gameboard","Component","constructor","props","state","actions","player_id","character_id","cards","grid","locations","validOptions","movementTurn","handleOnClick","bind","displayIcons","dims","parseFloat","length","objects","map","object","index","imgsrc","toString","x","y","myArray","i","requestedLoc","found","location","alert","movement_id","setState","provideCurrentRoom","cx","cy","provideCurrentLocationId","locid","getDerivedStateFromProps","newcount","count","newLocations","newGrid","newCurrentX","newCurrentY","newmovementTurn","newvalidOptions","first","undefined","message_type","message","character_moved","objId","Number","moved_character","console","log","nx","new_location_x","ny","new_location_y","indexOf","splice","push","weapon_moved","moved_weapon","valid_locations","playerX","playerY","displayPlayerInfo","string","window","port","useGameboardCommunication","handler","event","requestedMove","data","requestedCoords","convertIdToCoords","addEventListener","render","rows","r","d","j","onSelectTest","turn","convertedLocations","locationObject","playerId","convertCoordsToId","id","coords","row","GameboardCommunication","p"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\nimport PlayerHand from \"./PlayerHand\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\nimport \"./Divider.css\";\nimport './GameBoard.css';\nimport './NoteBook.css';\nimport Iframe from 'react-iframe'\n\nimport { useGameboardMessage } from './useGameboardMessage';\n\nvar uniqueIDs = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C1\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C2\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C3\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C4\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C5\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C6\" },\n  //6\n  { type: \"weapon\", name: \"Candlestick\", image: \"W1\" },\n  //7\n  { type: \"weapon\", name: \"Revolver\", image: \"W4\" },\n  //8\n  { type: \"weapon\", name: \"Knife\", image: \"W2\" },\n  //9\n  { type: \"weapon\", name: \"Pipe\", image: \"W3\" },\n  //10\n  { type: \"weapon\", name: \"Rope\", image: \"W5\" },\n  //11\n  { type: \"weapon\", name: \"Wrench\", image: \"W6\" },\n  //12\n  { type: \"room\", name: \"Study\", roomId: 11 },\n  //13\n  { type: \"room\", name: \"Hall\", roomId: 12 },\n  //14\n  { type: \"room\", name: \"Lounge\", roomId: 13 },\n  //15\n  { type: \"room\", name: \"Dinning Room\", roomId: 23 },\n  //16\n  { type: \"room\", name: \"Billiard Room\", roomId: 22 },\n  //17\n  { type: \"room\", name: \"Library\", roomId: 21 },\n  //18\n  { type: \"room\", name: \"Conservatory\", roomId: 31 },\n  //19\n  { type: \"room\", name: \"Ballroom\", roomId: 32 },\n  //20\n  { type: \"room\", name: \"Kitchen\", roomId: 33 },\n];\n\nvar startLocations = [\n  //0 Miss Scarlet\n  {\n    currentX: 0,\n    currentY: 3,\n  },\n  // 1\n  {\n    currentX: 4,\n    currentY: 1,\n  },\n  // 2\n  {\n    currentX: 1,\n    currentY: 4,\n  },\n  //3\n  {\n    currentX: 1,\n    currentY: 0,\n  },\n  //4\n  {\n    currentX: 3,\n    currentY: 0,\n  },\n  //5\n  {\n    currentX: 4,\n    currentY: 3,\n  },\n  //Weapons 6\n  {\n    currentX: 0,\n    currentY: 0,\n  },\n  //Weapons 7\n  {\n    currentX: 2,\n    currentY: 0,\n  },\n  //Weapons 8\n  {\n    currentX: 4,\n    currentY: 0,\n  },\n  //Weapons 9\n  {\n    currentX: 0,\n    currentY: 4,\n  },\n  //Weapons 10\n  {\n    currentX: 2,\n    currentY: 4,\n  },\n  //Weapons 11\n  {\n    currentX: 4,\n    currentY: 4,\n  },\n];\n\n\n\n\nvar startGrid = [\n  [\n    {\n      uniqueid: 12,\n      roomId: \"11\",\n      roomName: \"Study\",\n      roomObjs: [6],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1112\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 13,\n      roomId: \"12\",\n      roomName: \"Hall\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1213\",\n      roomName: \"Hallway\",\n      roomObjs: [0],\n    },\n    {\n      uniqueid: 14,\n      roomId: \"13\",\n      roomName: \"Lounge\",\n      roomObjs: [9],\n    },\n  ],\n  [\n    {\n      uniqueid: 0,\n      roomId: \"1121\",\n      roomName: \"Hallway\",\n      roomObjs: [3],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1222\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1323\",\n      roomName: \"Hallway\",\n      roomObjs: [2],\n    },\n  ],\n  [\n    {\n      uniqueid: 17,\n      roomId: \"21\",\n      roomName: \"Library\",\n      roomObjs: [7],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2122\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 16,\n      roomId: \"22\",\n      roomName: \"Billiard Room\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2223\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 15,\n      roomId: \"23\",\n      roomName: \"Dinning Room\",\n      roomObjs: [10],\n    },\n  ],\n  [\n    {\n      uniqueid: 0,\n      roomId: \"2131\",\n      roomName: \"Hallway\",\n      roomObjs: [4],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2232\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2333\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n  ],\n  [\n    {\n      uniqueid: 18,\n      roomId: \"31\",\n      roomName: \"Conservatory\",\n      roomObjs: [8],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"3132\",\n      roomName: \"Hallway\",\n      roomObjs: [1],\n    },\n    {\n      uniqueid: 19,\n      roomId: \"32\",\n      roomName: \"Ballroom\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"3233\",\n      roomName: \"Hallway\",\n      roomObjs: [5],\n    },\n    {\n      uniqueid: 20,\n      roomId: \"33\",\n      roomName: \"Kitchen\",\n      roomObjs: [11],\n    },\n  ],\n];\n\n\n\n\n// var startLocationsIframe = [{ \"playerId\": \"P1\", \"roomId\": \"1213\" }, { \"playerId\": \"P2\", \"roomId\": \"3132\" }, { \"playerId\": \"P3\", \"roomId\": \"1323\" }, { \"playerId\": \"P4\", \"roomId\": \"1121\" }, { \"playerId\": \"P5\", \"roomId\": \"2131\" }, { \"playerId\": \"P6\", \"roomId\": \"3233\" }, { \"playerId\": \"W1\", \"roomId\": \"11\" }, { \"playerId\": \"W2\", \"roomId\": \"21\" }, { \"playerId\": \"W3\", \"roomId\": \"31\" }, { \"playerId\": \"W4\", \"roomId\": \"13\" }, { \"playerId\": \"W5\", \"roomId\": \"23\" }, { \"playerId\": \"W6\", \"roomId\": \"33\" }];\n\nvar startLocationsIframe = convertLocations(startLocations);\nvar iframeUrl = \"./Board.html?startLocations=\" + JSON.stringify(startLocationsIframe);\n\n\nexport const ScreenWidth = ({\n  children,\n}) => {\n  const screenWidth = useScreenWidth();\n\n  return children(screenWidth);\n};\n\n\n\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character_id: -1,\n      cards: {},\n\n      // Gameboard grid\n      grid: startGrid,\n\n      // Tracks all player and weapon locations\n      locations: startLocations,\n\n      // Tracks current player location\n      currentX: -1,\n      currentY: -1,\n\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false,\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.displayIcons = this.displayIcons.bind(this);\n\n    this.dims = [\n      parseFloat(500 / this.state.grid.length),\n      parseFloat(500 / this.state.grid[0].length),\n    ];\n  }\n\n\n  displayIcons() {\n    const objects = uniqueIDs.map((object, index) => {\n      const imgsrc = \"/gameboard/\" + index.toString() + \".png\";\n      return (\n        <p>\n          {\" \"}\n          {index.toString()}\n          <img src={imgsrc} height=\"45\" width=\"30\" />\n        </p>\n      );\n    });\n\n    return <div>{objects}</div>;\n  }\n\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found =\n          JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n      if (found) {\n        alert(\"That's a valid location to movement! Moving to the \" + this.state.grid[x][y].roomName);\n\n        //Send movement request with requested room\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({ movementTurn: false, validOptions: [] });\n      } else {\n        alert(\"That's an invalid location to movement. Try again!\");\n      }\n    } else {\n      alert(\"It's not your turn to move!\");\n    }\n  }\n\n\n  provideCurrentRoom() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY;\n    //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n    if (cx == -1 & cy == -1) {\n      return \"\";\n    } else {\n      var name = this.state.grid[cx][cy].roomName;\n      //console.log(\"HALLWAY: \" + name);\n      return name;\n    }\n  }\n\n  provideCurrentLocationId() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY;\n    //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n    if (cx == -1 & cy == -1) {\n      return \"\";\n    } else {\n      var locid = this.state.grid[cx][cy].uniqueid;\n      //console.log(\"HALLWAY: \" + locid);\n      return locid;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n\n    //console.log(\"CHARACTER \" + props.character_id)\n    if (props.player_id != 0 && state.currentX == -1 && state.currentY == -1) {\n      //console.log(\"BMOVEMENT \" + newCurrentX)\n      //console.log(\"BMOVEMENT \" + newCurrentY)\n      newCurrentX = state.locations[props.character_id].currentX;\n      newCurrentY = state.locations[props.character_id].currentY;\n      //console.log(\"AMOVEMENT \" + newCurrentX)\n      //console.log(\"AMOVEMENT \" + newCurrentY)\n    }\n\n    var first = props.actions[0];\n    //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        //console.log(\"Found movement broadcast\");\n        if (first.message.character_moved === true) {\n          //console.log(\"Character move\")\n          var objId = Number(first.message.moved_character);\n          console.log(\"Character move: \" + objId);\n\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n          //console.log(\"MOVEMENT current\" + cx + \" \" + cy)\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n          //console.log(\"MOVEMENT new\" + nx + \" \" + ny)\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if ((objId = props.character_id)) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n          // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[cx][cy]))\n          // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[nx][ny]))\n          //console.log(\"MOVEMENT \" + newLocations[objId].currentX)\n          // console.log(\"MOVEMENT \" + newLocations[objId].currentY)\n          //console.log(\"MOVEMENT \" + newCurrentX)\n          //console.log(\"MOVEMENT \" + newCurrentY)\n        }\n\n        if (first.message.weapon_moved === true) {\n          //console.log(\"Weapon move\")\n          var objId = Number(first.message.moved_weapon);\n          console.log(\"Weapon move: \" + objId);\n\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      player_id: props.player_id,\n      character_id: props.character_id,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions,\n    };\n  }\n\n\n  displayPlayerInfo() {\n\n    let string = \"\"\n    if (this.props.player_id != 0) {\n      let cx = this.state.locations[this.props.character_id].currentX;\n      let cy = this.state.locations[this.props.character_id].currentY\n      let roomName = this.state.grid[cx][cy].roomName;\n      string = \"Username = \" + window.location.port + \" | Character = \" + uniqueIDs[this.props.character_id].name + \" | Location = \" + roomName;\n      //string = \"Username = \" + window.location.port + \" | Player = \" + this.props.player_id + \" | Current Location = [\" + this.state.locations[this.props.character_id].currentX + \", \" + this.state.locations[this.props.character_id].currentY + \"]\";\n    } else {\n      string = \"Username = \" + window.location.port;\n    }\n    return string;\n  }\n\n  useGameboardCommunication() {\n    useEffect(() => {\n      const handler = event => {\n        // const data = JSON.parse(event.data)\n        const requestedMove = event.data;\n        alert(requestedMove)\n        \n       var requestedCoords = convertIdToCoords(requestedMove);\n  \n       //validate this\n       //send new board layout to iframe\n       //handleOnClick(requestedCoords[0], requestedCoords[1]);\n  \n      }\n  \n      window.addEventListener(\"message\", handler)\n    }, [])\n  }\n\n\n  render() {\n\n    const rows = this.state.grid.map((r, i) => {\n      return (\n        <tr key={\"row_\" + i}>\n          {r.map((d, j) => {\n            return (\n              <Room\n                key={i + \"_\" + j}\n                dims={this.dims}\n                onClick={() => {\n                  this.handleOnClick(i, j);\n                }}\n                contents={d}\n                x={i}\n                y={j}\n              />\n            );\n          })}\n        </tr>\n      );\n    });\n\n    if (this.props.player_id != 0) {\n      this.props.onSelectTest(\"KATHRYN FROM GAMEBOARD\");\n      //this.props.changeCurrentRoom(this.provideCurrentRoom())\n      //this.props.changeCurrentLocationId(this.provideCurrentLocationId())\n    }\n\n    return (\n\n      < div >\n        <div class=\"float-container\">\n          <div class=\"float-child\">\n            <div class=\"green\">\n              <h3>Gameboard</h3>\n              <p>\n                {this.displayPlayerInfo()}\n              </p>\n\n              <Iframe id=\"board-iframe\" url={iframeUrl}\n                marginwidth=\"0\"\n                marginheight=\"0\"\n                hspace=\"0\"\n                vspace=\"0\"\n                frameborder=\"0\"\n                scrolling=\"no\"\n              />\n\n              {/* {this.initializeGameBoard()} */}\n              <GameboardCommunication></GameboardCommunication>\n\n              <table cellSpacing=\"0\" id=\"gameboard_table\">\n                <tbody>{rows}</tbody>\n              </table>\n\n\n            </div>\n          </div>\n          <div class=\"float-child\">\n            <div class=\"blue\">\n              <Box\n                actions={this.props.actions}\n                currentLocId={this.provideCurrentLocationId()}\n                currentRoom={this.provideCurrentRoom()}\n                cards={this.props.cards}\n                turn={this.props.turn}\n              />\n              <h4>Player Notebook</h4>\n              <NoteBook></NoteBook>\n              <h4>Player Hand</h4>\n              <PlayerHand cards={this.state.cards} />\n              <h4>Message Board</h4>\n              <p>\n                <MessageBoard actions={this.props.actions} />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div >\n\n    );\n  }\n}\n\n\n\n\n//Iframe Communication\n\n// function useGameboardCommunication() {\n//   useEffect(() => {\n//     const handler = event => {\n//       // const data = JSON.parse(event.data)\n//       const requestedMove = event.data;\n//       alert(requestedMove)\n      \n//      var requestedCoords = convertIdToCoords(requestedMove);\n\n//      //validate this\n//      //send new board layout to iframe\n//      //handleOnClick(requestedCoords[0], requestedCoords[1]);\n\n//     }\n\n//     window.addEventListener(\"message\", handler)\n//   }, [])\n// }\n\n\n\nfunction convertLocations(locations) {\n  // var locations = this.state.locations;\n  var convertedLocations = [];\n\n  for (var i = 0; i < 6; i++) {\n    var locationObject = {\n      playerId: 'P' + (i + 1),\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY)\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  for (var i = 6; i < locations.length; i++) {\n    var locationObject = {\n      playerId: 'W' + (i - 5),\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY)\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  return convertedLocations;\n}\n\n\n//convert locations to room ID\nfunction convertCoordsToId(x, y) {\n  return startGrid[x][y].roomId;\n}\n\n//convert locations to room ID\nfunction convertIdToCoords(id) {\n\n  // startGrid is an array of json objects...iterate through array until you fin matching ID, return coords\n  var coords = [];\n\n  for (var i = 0; i < startGrid.length; i++) {\n    var row = startGrid[i];\n    for (var j = 0; j < row.length; j++) {\n      if (row[j].roomId === id) {\n        coords = [i, j];\n      }\n    }\n  }\n\n  return coords;\n}\n\n\nlet GameboardCommunication = p => (useGameboardCommunication(), null)\n\n\n\nexport default Gameboard;\n"]},"metadata":{},"sourceType":"module"}