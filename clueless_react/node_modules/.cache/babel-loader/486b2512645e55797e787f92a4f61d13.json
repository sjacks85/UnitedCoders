{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/PlayerHand.js\";\nimport React from \"react\";\nimport CardMapper from \"./CardMapper\";\nimport \"./PlayerHand.css\";\n\nclass PlayerHand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [1, 2, 3, 4, 5] // Default. Can remove this once we know the cards are being populated.\n\n    };\n    this.updatePlayerHand = this.state.playerHand.map(card => {\n      CardMapper.generateIdMap();\n      var imgLocation = \"./CardImages/\" + CardMapper.getCardImgById(card);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: imgLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      })));\n    });\n    this.state = {\n      assignedCards: false,\n      playerHand: []\n    };\n    this.displayPlayerHand = this.displayPlayerHand.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"CARDS \" + JSON.stringify(state.playerCards));\n    var newassignedCards = state.assignedCards;\n    var newplayerHand = state.playerHand; //console.log(\"CARDS \" + state.assignedCards);\n    //console.log(\"CARDS \" + props.cards + \" \" + props.cards.length);\n\n    if (state.assignedCards == false && props.cards.length != 0) {\n      console.log(\"ASSIGNMENT PLAERHAND\");\n      newplayerHand = props.cards;\n      newassignedCards = true;\n    }\n\n    return {\n      assignedCards: newassignedCards,\n      playerHand: newplayerHand\n    };\n  }\n\n  displayPlayerHand() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"playerHandFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"hs center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, this.updatePlayerHand));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, this.state.assignedCards === true && this.displayPlayerHand());\n  }\n\n}\n\nexport default PlayerHand;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/PlayerHand.js"],"names":["React","CardMapper","PlayerHand","Component","constructor","props","state","cards","updatePlayerHand","playerHand","map","card","generateIdMap","imgLocation","getCardImgById","assignedCards","displayPlayerHand","bind","getDerivedStateFromProps","newassignedCards","newplayerHand","length","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAQnBC,KARmB,GAQX;AACNC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADD,CACkB;;AADlB,KARW;AAAA,SA+BnBC,gBA/BmB,GA+BA,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,GAAtB,CAA2BC,IAAD,IAAU;AACrDV,MAAAA,UAAU,CAACW,aAAX;AACA,UAAIC,WAAW,GAAG,kBAAkBZ,UAAU,CAACa,cAAX,CAA0BH,IAA1B,CAApC;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD,KAVkB,CA/BA;AAEjB,SAAKP,KAAL,GAAa;AACXS,MAAAA,aAAa,EAAE,KADJ;AAEXN,MAAAA,UAAU,EAAE;AAFD,KAAb;AAIA,SAAKO,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAKD,SAAOC,wBAAP,CAAgCb,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C;AACA,QAAIa,gBAAgB,GAAGb,KAAK,CAACS,aAA7B;AACA,QAAIK,aAAa,GAAGd,KAAK,CAACG,UAA1B,CAH4C,CAK5C;AACA;;AACA,QAAIH,KAAK,CAACS,aAAN,IAAuB,KAAvB,IAAgCV,KAAK,CAACE,KAAN,CAAYc,MAAZ,IAAsB,CAA1D,EAA6D;AAC3DC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAH,MAAAA,aAAa,GAAGf,KAAK,CAACE,KAAtB;AACAY,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,WAAO;AACLJ,MAAAA,aAAa,EAAEI,gBADV;AAELV,MAAAA,UAAU,EAAEW;AAFP,KAAP;AAID;;AAcDJ,EAAAA,iBAAiB,GAAG;AAClB,wBACE;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKR,gBAA5B,CADA,CADF;AAKD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWS,aAAX,KAA6B,IAA7B,IAAqC,KAAKC,iBAAL,EADxC,CADF;AAKD;;AA1DsC;;AA6DzC,eAAed,UAAf","sourcesContent":["import React from \"react\";\nimport CardMapper from \"./CardMapper\";\nimport \"./PlayerHand.css\";\n\nclass PlayerHand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      assignedCards: false,\n      playerHand: [],\n    };\n    this.displayPlayerHand = this.displayPlayerHand.bind(this);\n  }\n  state = {\n    cards: [1, 2, 3, 4, 5], // Default. Can remove this once we know the cards are being populated.\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"CARDS \" + JSON.stringify(state.playerCards));\n    var newassignedCards = state.assignedCards;\n    var newplayerHand = state.playerHand;\n\n    //console.log(\"CARDS \" + state.assignedCards);\n    //console.log(\"CARDS \" + props.cards + \" \" + props.cards.length);\n    if (state.assignedCards == false && props.cards.length != 0) {\n      console.log(\"ASSIGNMENT PLAERHAND\");\n      newplayerHand = props.cards;\n      newassignedCards = true;\n    }\n\n    return {\n      assignedCards: newassignedCards,\n      playerHand: newplayerHand,\n    };\n  }\n\n  updatePlayerHand = this.state.playerHand.map((card) => {\n    CardMapper.generateIdMap();\n    var imgLocation = \"./CardImages/\" + CardMapper.getCardImgById(card);\n    return (\n      <li>\n        <div class=\"block\">\n          <img src={imgLocation} />\n        </div>\n      </li>\n    );\n  });\n\n  displayPlayerHand() {\n    return (\n      <div class=\"playerHandFrame\">\n      <ul class=\"hs center\">{this.updatePlayerHand}</ul>\n    </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.assignedCards === true && this.displayPlayerHand()}\n      </div>\n    );\n  }\n}\n\nexport default PlayerHand;\n"]},"metadata":{},"sourceType":"module"}