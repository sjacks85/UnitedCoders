{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_project/clueless_react/src/Divider.js\";\nimport React from 'react';\nimport './Divider.css';\nimport NameForm from './NameForm';\nimport Message from './Message'; // function NonIdiomaticList(props) {\n//     // Build an array of items\n//     let array = [];\n//     for(let i = 0; i < props.items.length; i++) {\n//       array.push(\n//         <Item key={i} item={props.items[i]} />\n//       );\n//     }\n//     // Render it\n//     return (\n//       <div>\n//         {array}\n//       </div>\n//     );\n//   }\n\nfunction Peoples() {\n  const people = [{\n    name: 'chris',\n    color: 'blue'\n  }, {\n    name: 'nick',\n    color: 'red'\n  }];\n  let array = [];\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum turn'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum move = hallway'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum suggestion = white, study, candlestick'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Scarlet turn'\n  });\n  array.unshift({\n    type: 'target',\n    message: 'Your turn'\n  });\n  array.unshift({\n    type: 'respond',\n    message: 'Move?'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Scarlet move = Library'\n  });\n  array.unshift({\n    type: 'respond',\n    message: 'Suggestion?'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, array.map(elem => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, elem.type, \": \", elem.message)));\n}\n\nclass PostRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: null,\n      postTitle: null\n    };\n  }\n\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example'\n      })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id,\n      postTitle: data.title\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card text-center m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Simple POST Request\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Returned Id: \", this.state.postId, \"Returned Title: \", this.state.postTitle));\n  }\n\n}\n\nclass Fetch_Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = user => {\n      let url = 'https://api.github.com/users/' + user + '/repos';\n      fetch(url).then(response => response.json()).then(repos => {\n        console.log(repos);\n        console.log(repos.length);\n        this.setState({\n          repos: repos\n        });\n      });\n    };\n\n    this.state = {\n      repos: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"React fetch example\"), /*#__PURE__*/React.createElement(SearchBar, {\n      handleSubmit: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(RepoList, {\n      repos: this.state.repos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const text = event.target.text.value;\n      this.props.handleSubmit(text);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"text\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Type github user and press ENTER\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass RepoList extends React.Component {\n  render() {\n    var rows = [];\n    this.props.repos.map((repo, index) => rows.push( /*#__PURE__*/React.createElement(RepoItem, {\n      key: index,\n      repo: repo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 58\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, rows);\n  }\n\n}\n\nRepoList.defaultProps = {\n  repos: []\n};\n\nclass RepoItem extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"list-group-item list-group-item-action flex-column align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, this.props.repo.name), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, new Date(Date.parse(this.props.repo.created_at)).toLocaleDateString())), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, this.props.repo.description), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, this.props.repo.html_url));\n  }\n\n}\n\nfunction Divider() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, \"Message Board (new messages at top)\"), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"----------\"), /*#__PURE__*/React.createElement(Peoples, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, \"Game Info\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, \"Characters: plum, scarlet, mustard, white, green, peacock\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 64\n    }\n  }), \"Rooms: study, hall, lounge, dinning, billiard, library, conservatory, ballroom, kitchen\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 94\n    }\n  }), \"Weapons: candlestick, revolver, knife, pipe, rope, wrench\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 64\n    }\n  }), \"Movement: hallway, room, secret\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 38\n    }\n  }), \"Suggestion: character, room, weapon\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 42\n    }\n  }), \"Accusation: character, room, weapon\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 8\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(NameForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default Divider;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_project/clueless_react/src/Divider.js"],"names":["React","NameForm","Message","Peoples","people","name","color","array","unshift","type","message","map","elem","PostRequest","Component","constructor","props","state","postId","postTitle","componentDidMount","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","data","setState","id","render","Fetch_Example","handleSearch","user","url","repos","console","log","length","SearchBar","handleSubmit","event","preventDefault","text","target","value","RepoList","rows","repo","index","push","defaultProps","RepoItem","Date","parse","created_at","toLocaleDateString","description","html_url","Divider"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Divider.css';\nimport NameForm from './NameForm';\nimport Message from './Message';\n\n// function NonIdiomaticList(props) {\n//     // Build an array of items\n//     let array = [];\n//     for(let i = 0; i < props.items.length; i++) {\n//       array.push(\n//         <Item key={i} item={props.items[i]} />\n//       );\n//     }\n  \n//     // Render it\n//     return (\n//       <div>\n//         {array}\n//       </div>\n//     );\n//   }\n\n  function Peoples() {\n    const people = [\n      { name: 'chris', color: 'blue'},\n      { name: 'nick', color: 'red'}\n    ];\n\n    let array = [];\n\n    array.unshift({ type: 'broadcast', message: 'Plum turn'})\n    array.unshift({ type: 'broadcast', message: 'Plum move = hallway'})\n    array.unshift({ type: 'broadcast', message: 'Plum suggestion = white, study, candlestick'})\n    array.unshift({ type: 'broadcast', message: 'Scarlet turn'})\n    array.unshift({ type: 'target', message: 'Your turn'})\n    array.unshift({ type: 'respond', message: 'Move?'})\n    array.unshift({ type: 'broadcast', message: 'Scarlet move = Library'})\n    array.unshift({ type: 'respond', message: 'Suggestion?'})\n\n    return (\n      <div>\n        {array.map(elem => (\n          <p>{elem.type}: {elem.message}</p>\n        ))}\n        {/* {people.map(person => (\n          <p>{person.name} {person.color}</p>\n        ))} */}\n      </div>\n    );\n  }\n\n  class PostRequest extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            postId: null,\n            postTitle: null\n        };\n    }\n\n    componentDidMount() {\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React POST Request Example' })\n        };\n        fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState({ postId: data.id, postTitle: data.title}));\n    }\n\n    render() {\n        return (\n            <div className=\"card text-center m-3\">\n                <h5 className=\"card-header\">Simple POST Request</h5>\n                <div className=\"card-body\">\n                    Returned Id: {this.state.postId}\n                    Returned Title: {this.state.postTitle}\n                </div>\n            </div>\n        );\n    }\n  }\n\n    class Fetch_Example extends React.Component {\n  \n      constructor(props){\n        super(props);\n        this.state = {\n          repos: []\n        };\n      }\n      \n      handleSearch = (user) =>{\n        let url = 'https://api.github.com/users/'+user+'/repos';\n     fetch(url).\n      then(response => response.json()).then((repos) => {\n          console.log(repos);\n          console.log(repos.length);\n          this.setState({\n            repos: repos\n          });\n        });\n      };\n      \n      render(){\n        return (\n          <div className=\"app-container\">\n            <h3>React fetch example</h3>\n            <SearchBar handleSubmit={this.handleSearch} />\n            <RepoList repos={this.state.repos}/>\n          </div>\n        )\n      }\n    }\n    \n    class SearchBar extends React.Component {\n      constructor(props) {\n        super(props);\n      }\n        \n      handleSubmit = (event) => {\n        event.preventDefault();\n        const text = event.target.text.value;\n        this.props.handleSubmit(text);\n      };\n    \n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n            <input\n              name=\"text\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Type github user and press ENTER\"\n            />\n          </form>\n        );\n      }\n    }\n    \n    class RepoList extends React.Component {\n    \n      render(){\n        var rows = [];\n          this.props.repos.map((repo,index) => rows.push(<RepoItem key={index} repo={repo} />))\n        return (\n          <div className=\"list-group\">\n            {rows}\n          </div>\n        )\n      }\n    }\n    RepoList.defaultProps = {\n      repos: []\n    };\n    \n    class RepoItem extends React.Component {\n      render(){\n        return (\n            <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\n        <div className=\"d-flex w-100 justify-content-between\">\n          <h5 className=\"mb-1\">{this.props.repo.name}</h5>\n          <small>{new Date(Date.parse(this.props.repo.created_at)).toLocaleDateString()}</small>\n        </div>\n        <p className=\"mb-1\">{this.props.repo.description}</p>\n        <small>{this.props.repo.html_url}</small>\n      </a>\n        )\n      }\n    }\n\nfunction Divider() {\n  return (\n    <div class=\"float-container\">\n\n    <div class=\"float-child\">\n      <div class=\"green\">\n        <h4>Message Board (new messages at top)</h4>\n        <Message />\n        <p>----------</p>\n        <Peoples />\n      </div>\n    </div>\n\n    \n    <div class=\"float-child\">\n      <div class=\"blue\">\n      <h4>Game Info</h4>\n      <p>\n      Characters: plum, scarlet, mustard, white, green, peacock<br></br>\n      Rooms: study, hall, lounge, dinning, billiard, library, conservatory, ballroom, kitchen<br></br>\n      Weapons: candlestick, revolver, knife, pipe, rope, wrench<br></br>\n      Movement: hallway, room, secret<br></br>\n      Suggestion: character, room, weapon<br></br>\n      Accusation: character, room, weapon<br></br>\n        </p>\n       <h4>User Input</h4>\n      <NameForm />\n      </div>\n    </div>\n    \n    </div>\n\n  );\n}\n\nexport default Divider;"]},"metadata":{},"sourceType":"module"}