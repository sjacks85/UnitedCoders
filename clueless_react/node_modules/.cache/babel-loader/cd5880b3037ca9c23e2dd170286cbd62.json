{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_project/clueless_react/src/Divider.js\";\nimport React from 'react';\nimport './Divider.css';\nimport UserInput from './UserInput';\nimport Message from './Message';\n\nfunction Peoples() {\n  const people = [{\n    name: 'chris',\n    color: 'blue'\n  }, {\n    name: 'nick',\n    color: 'red'\n  }];\n  let array = [];\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum turn'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum move = hallway'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum suggestion = white, study, candlestick'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Scarlet turn'\n  });\n  array.unshift({\n    type: 'target',\n    message: 'Your turn'\n  });\n  array.unshift({\n    type: 'respond',\n    message: 'Move?'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Scarlet move = Library'\n  });\n  array.unshift({\n    type: 'respond',\n    message: 'Suggestion?'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, array.map(elem => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, elem.type, \": \", elem.message)));\n}\n\nclass PostRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: null,\n      postTitle: null\n    };\n  }\n\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example'\n      })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id,\n      postTitle: data.title\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card text-center m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Simple POST Request\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Returned Id: \", this.state.postId, \"Returned Title: \", this.state.postTitle));\n  }\n\n}\n\nfunction Divider() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Message Board (new messages at top)\"), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"----------\"), /*#__PURE__*/React.createElement(Peoples, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Game Info\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Characters: plum, scarlet, mustard, white, green, peacock\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 64\n    }\n  }), \"Rooms: study, hall, lounge, dinning, billiard, library, conservatory, ballroom, kitchen\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 94\n    }\n  }), \"Weapons: candlestick, revolver, knife, pipe, rope, wrench\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 64\n    }\n  }), \"Movement: hallway, room, secret\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 38\n    }\n  }), \"Suggestion: character, room, weapon\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 42\n    }\n  }), \"Accusation: character, room, weapon\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(UserInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default Divider;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_project/clueless_react/src/Divider.js"],"names":["React","UserInput","Message","Peoples","people","name","color","array","unshift","type","message","map","elem","PostRequest","Component","constructor","props","state","postId","postTitle","componentDidMount","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","data","setState","id","render","Divider"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Divider.css';\nimport UserInput from './UserInput';\nimport Message from './Message';\n\n  function Peoples() {\n    const people = [\n      { name: 'chris', color: 'blue'},\n      { name: 'nick', color: 'red'}\n    ];\n\n    let array = [];\n\n    array.unshift({ type: 'broadcast', message: 'Plum turn'})\n    array.unshift({ type: 'broadcast', message: 'Plum move = hallway'})\n    array.unshift({ type: 'broadcast', message: 'Plum suggestion = white, study, candlestick'})\n    array.unshift({ type: 'broadcast', message: 'Scarlet turn'})\n    array.unshift({ type: 'target', message: 'Your turn'})\n    array.unshift({ type: 'respond', message: 'Move?'})\n    array.unshift({ type: 'broadcast', message: 'Scarlet move = Library'})\n    array.unshift({ type: 'respond', message: 'Suggestion?'})\n\n    return (\n      <div>\n        {array.map(elem => (\n          <p>{elem.type}: {elem.message}</p>\n        ))}\n      </div>\n    );\n  }\n\n  class PostRequest extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            postId: null,\n            postTitle: null\n        };\n    }\n\n    componentDidMount() {\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React POST Request Example' })\n        };\n        fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState({ postId: data.id, postTitle: data.title}));\n    }\n\n    render() {\n        return (\n            <div className=\"card text-center m-3\">\n                <h5 className=\"card-header\">Simple POST Request</h5>\n                <div className=\"card-body\">\n                    Returned Id: {this.state.postId}\n                    Returned Title: {this.state.postTitle}\n                </div>\n            </div>\n        );\n    }\n  }\n\nfunction Divider() {\n  return (\n    <div class=\"float-container\">\n\n    <div class=\"float-child\">\n      <div class=\"green\">\n        <h4>Message Board (new messages at top)</h4>\n        <Message />\n        <p>----------</p>\n        <Peoples />\n      </div>\n    </div>\n\n    \n    <div class=\"float-child\">\n      <div class=\"blue\">\n      <h4>Game Info</h4>\n      <p>\n      Characters: plum, scarlet, mustard, white, green, peacock<br></br>\n      Rooms: study, hall, lounge, dinning, billiard, library, conservatory, ballroom, kitchen<br></br>\n      Weapons: candlestick, revolver, knife, pipe, rope, wrench<br></br>\n      Movement: hallway, room, secret<br></br>\n      Suggestion: character, room, weapon<br></br>\n      Accusation: character, room, weapon<br></br>\n        </p>\n       <h4>User Input</h4>\n      <UserInput />\n      </div>\n    </div>\n    \n    </div>\n\n  );\n}\n\nexport default Divider;"]},"metadata":{},"sourceType":"module"}