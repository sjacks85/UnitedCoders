{"ast":null,"code":"var _jsxFileName = \"/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/Gameboard.js\";\nimport React from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\nimport PlayerHand from \"./PlayerHand\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\nimport \"./Divider.css\";\nimport \"./GameBoard.css\";\nimport \"./NoteBook.css\";\nimport Iframe from \"react-iframe\";\nimport \"./hbeat.css\";\nvar uniqueIDsZB = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C0\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C1\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C2\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C3\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C4\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C5\"\n}];\nvar uniqueIDs = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C1\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C2\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C3\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C4\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C5\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C6\"\n}, //6\n{\n  type: \"weapon\",\n  name: \"Candlestick\",\n  image: \"W1\"\n}, //7\n{\n  type: \"weapon\",\n  name: \"Revolver\",\n  image: \"W4\"\n}, //8\n{\n  type: \"weapon\",\n  name: \"Knife\",\n  image: \"W2\"\n}, //9\n{\n  type: \"weapon\",\n  name: \"Pipe\",\n  image: \"W3\"\n}, //10\n{\n  type: \"weapon\",\n  name: \"Rope\",\n  image: \"W5\"\n}, //11\n{\n  type: \"weapon\",\n  name: \"Wrench\",\n  image: \"W6\"\n}, //12\n{\n  type: \"room\",\n  name: \"Study\",\n  roomId: 11\n}, //13\n{\n  type: \"room\",\n  name: \"Hall\",\n  roomId: 12\n}, //14\n{\n  type: \"room\",\n  name: \"Lounge\",\n  roomId: 13\n}, //15\n{\n  type: \"room\",\n  name: \"Dinning Room\",\n  roomId: 23\n}, //16\n{\n  type: \"room\",\n  name: \"Billiard Room\",\n  roomId: 22\n}, //17\n{\n  type: \"room\",\n  name: \"Library\",\n  roomId: 21\n}, //18\n{\n  type: \"room\",\n  name: \"Conservatory\",\n  roomId: 31\n}, //19\n{\n  type: \"room\",\n  name: \"Ballroom\",\n  roomId: 32\n}, //20\n{\n  type: \"room\",\n  name: \"Kitchen\",\n  roomId: 33\n}];\nvar startLocations = [//0 Miss Scarlet\n{\n  currentX: 0,\n  currentY: 3\n}, // 1\n{\n  currentX: 4,\n  currentY: 1\n}, // 2\n{\n  currentX: 1,\n  currentY: 4\n}, //3\n{\n  currentX: 1,\n  currentY: 0\n}, //4\n{\n  currentX: 3,\n  currentY: 0\n}, //5\n{\n  currentX: 4,\n  currentY: 3\n}, //Weapons 6\n{\n  currentX: 0,\n  currentY: 0\n}, //Weapons 7\n{\n  currentX: 2,\n  currentY: 0\n}, //Weapons 8\n{\n  currentX: 4,\n  currentY: 0\n}, //Weapons 9\n{\n  currentX: 0,\n  currentY: 4\n}, //Weapons 10\n{\n  currentX: 2,\n  currentY: 4\n}, //Weapons 11\n{\n  currentX: 4,\n  currentY: 4\n}];\nvar startGrid = [[{\n  uniqueid: 12,\n  roomId: \"11\",\n  roomName: \"Study\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 13,\n  roomId: \"12\",\n  roomName: \"Hall\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomObjs: [0]\n}, {\n  uniqueid: 14,\n  roomId: \"13\",\n  roomName: \"Lounge\",\n  roomObjs: []\n}], [{\n  uniqueid: 0,\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomObjs: [3]\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomObjs: [2]\n}], [{\n  uniqueid: 17,\n  roomId: \"21\",\n  roomName: \"Library\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 16,\n  roomId: \"22\",\n  roomName: \"Billiard Room\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 15,\n  roomId: \"23\",\n  roomName: \"Dinning Room\",\n  roomObjs: []\n}], [{\n  uniqueid: 0,\n  roomId: \"2131\",\n  roomName: \"Hallway\",\n  roomObjs: [4]\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2232\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"2333\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}], [{\n  uniqueid: 18,\n  roomId: \"31\",\n  roomName: \"Conservatory\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomObjs: [1]\n}, {\n  uniqueid: 19,\n  roomId: \"32\",\n  roomName: \"Ballroom\",\n  roomObjs: []\n}, {\n  uniqueid: 0,\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomObjs: [5]\n}, {\n  uniqueid: 20,\n  roomId: \"33\",\n  roomName: \"Kitchen\",\n  roomObjs: []\n}]];\nvar startLocationsIframe = convertLocations(startLocations);\nvar iframeUrl = \"./Board.html?startLocations=\" + JSON.stringify(startLocationsIframe);\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character_id: -1,\n      username: this.props.username,\n      cards: {},\n      chatmessage: this.props.chatmessage,\n      // NEW...\n      final_message: {},\n      show: true,\n      // Gameboard grid\n      grid: startGrid,\n      // Tracks all player and weapon locations\n      locations: startLocations,\n      // Tracks current player location\n      currentX: -1,\n      currentY: -1,\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false,\n      show_nomove: false,\n      // Color Settings / Theme:\n      colorPalette: this.props.colorPalette\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.displayIcons = this.displayIcons.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", event => {\n      this.requestMovement(event.data);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update if the data has changed\n    if (prevProps.colorPalette !== prevState.colorPalette) {\n      this.colorPaletteUpdate();\n    }\n  }\n\n  requestMovement(roomId) {\n    var requestedCoords = convertIdToCoords(roomId);\n    this.handleOnClick(requestedCoords[0], requestedCoords[1]);\n  }\n\n  displayIcons() {\n    const objects = uniqueIDs.map((object, index) => {\n      const imgsrc = \"/gameboard/\" + index.toString() + \".png\";\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }\n      }, \" \", index.toString(), /*#__PURE__*/React.createElement(\"img\", {\n        src: imgsrc,\n        height: \"45\",\n        width: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 12\n      }\n    }, objects);\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n\n      if (found) {\n        alert(\"That's a valid location to movement! Moving to the \" + this.state.grid[x][y].roomName); //Send movement request with requested room\n\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({\n          movementTurn: false,\n          validOptions: []\n        });\n      } else {\n        alert(\"That's an invalid location to movement. Try again!\");\n      }\n    } else {\n      alert(\"It's not your turn to move!\");\n    }\n  }\n\n  provideCurrentRoom() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY; //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n\n    if (cx == -1 & cy == -1) {\n      return \"\";\n    } else {\n      var name = this.state.grid[cx][cy].roomName; //console.log(\"HALLWAY: \" + name);\n\n      return name;\n    }\n  }\n\n  provideCurrentLocationId() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY; //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n\n    if (cx == -1 & cy == -1) {\n      return \"\";\n    } else {\n      var locid = this.state.grid[cx][cy].uniqueid; //console.log(\"HALLWAY: \" + locid);\n\n      return locid;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n    var newshow_nomove = state.show_nomove;\n    var newfinal_message = state.final_message;\n    var newshow = state.show;\n    var newColorPalette = state.colorPalette; //console.log(\"CHARACTER \" + props.character_id)\n\n    if (props.player_id != 0 && state.currentX == -1 && state.currentY == -1) {\n      //console.log(\"BMOVEMENT \" + newCurrentX)\n      //console.log(\"BMOVEMENT \" + newCurrentY)\n      newCurrentX = state.locations[props.character_id].currentX;\n      newCurrentY = state.locations[props.character_id].currentY; //console.log(\"AMOVEMENT \" + newCurrentX)\n      //console.log(\"AMOVEMENT \" + newCurrentY)\n    }\n\n    var first = props.actions[0]; //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n\n    if (first != undefined) {\n      if (first.message_type == 11) {\n        //Assign weapons\n        //   \"weapon_locations\":\n        //  \"id\":\n        //  \"location\": [x,y]\n        var weapons = first.message.weapon_locations;\n        console.log(JSON.stringify(weapons));\n        weapons.forEach(element => {\n          console.log(element);\n          var x = element.location[0];\n          var y = element.location[1]; //console.log(\"X=\" + x + \" Y=\"+ y)\n\n          var index = newGrid[x][y].roomObjs.indexOf(Number(element.id)); //console.log(index)\n\n          if (index === -1) {\n            //console.log(\"KATHRYNIF\")\n            newGrid[x][y].roomObjs.push(Number(element.id));\n            newLocations[Number(element.id)].currentX = x;\n            newLocations[Number(element.id)].currentY = y;\n          }\n        });\n        console.log(\"GRID=\" + JSON.stringify(newGrid));\n        console.log(\"LOC=\" + JSON.stringify(newLocations)); //Update Iframe with new location\n        // var iframeWin = document.getElementById(\"board-iframe\").contentWindow;\n        // var boardLocations = convertLocations(newLocations);\n        // iframeWin.postMessage(boardLocations);\n        //Update Iframe with new location\n\n        var boardLocations = convertLocations(newLocations);\n        iframeUrl = \"./Board.html?startLocations=\" + JSON.stringify(boardLocations);\n      } else if (first.message_type == 22) {\n        //console.log(\"Found movement broadcast\");\n        if (first.message.character_moved === true) {\n          //console.log(\"Character move\")\n          var objId = Number(first.message.moved_character);\n          console.log(\"Character move: \" + objId);\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY; //console.log(\"MOVEMENT current\" + cx + \" \" + cy)\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y; //console.log(\"MOVEMENT new\" + nx + \" \" + ny)\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if (objId = props.character_id) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          } //Update Iframe with new location\n\n\n          var iframeWin = document.getElementById(\"board-iframe\").contentWindow;\n          var boardLocations = convertLocations(newLocations);\n          iframeWin.postMessage(boardLocations); // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[cx][cy]))\n          // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[nx][ny]))\n          //console.log(\"MOVEMENT \" + newLocations[objId].currentX)\n          // console.log(\"MOVEMENT \" + newLocations[objId].currentY)\n          //console.log(\"MOVEMENT \" + newCurrentX)\n          //console.log(\"MOVEMENT \" + newCurrentY)\n        }\n\n        if (first.message.weapon_moved === true) {\n          //console.log(\"Weapon move\")\n          var objId = Number(first.message.moved_weapon);\n          console.log(\"Weapon move: \" + objId);\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n          var iframeWin = document.getElementById(\"board-iframe\").contentWindow;\n          var boardLocations = convertLocations(newLocations);\n          iframeWin.postMessage(boardLocations);\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n\n        if (first.message.movement_required === false || first.message.message_possible === false) {\n          newshow_nomove = true;\n        }\n      } else if (first.message_type == 61) {\n        // {\n        // “game_over”:\n        // “winning_player”:\n        // “correct_room”:\n        // “correct_character”:\n        // “correct_weapon”:\n        // }\n        newfinal_message = first;\n        newshow = true;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      player_id: props.player_id,\n      character_id: props.character_id,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions,\n      show_nomove: newshow_nomove,\n      final_message: newfinal_message,\n      show: newshow,\n      colorPalette: newColorPalette\n    };\n  }\n\n  displayPlayerInfo() {\n    let string = \"\";\n\n    if (this.props.player_id != 0) {\n      let cx = this.state.locations[this.props.character_id].currentX;\n      let cy = this.state.locations[this.props.character_id].currentY;\n      let roomName = this.state.grid[cx][cy].roomName;\n      string = \"Username: \" + this.props.username + \" | Character: \" + uniqueIDs[this.props.character_id].name + \" | Current Location: \" + roomName; //string = \"Username = \" + window.location.port + \" | Player = \" + this.props.player_id + \" | Current Location = [\" + this.state.locations[this.props.character_id].currentX + \", \" + this.state.locations[this.props.character_id].currentY + \"]\";\n    } else {\n      string = \"\"; //\"Username = \" + window.location.port;\n    }\n\n    return string;\n  }\n\n  colorPaletteUpdate() {\n    var gameBoardHeader = document.getElementById(\"gameBoardHeader\");\n    gameBoardHeader.style.background = this.state.colorPalette[0];\n    var gameBoardFooter = document.getElementById(\"gameBoardFooter\");\n    gameBoardFooter.style.background = this.state.colorPalette[1];\n    console.log(\"Color Palette Update:\" + this.state.colorPalette[0]);\n  }\n\n  render() {\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 9\n        }\n      }, r.map((d, j) => {\n        return /*#__PURE__*/React.createElement(Room, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          },\n          contents: d,\n          x: i,\n          y: j,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }\n        });\n      }));\n    }); //this.colorPaletteUpdate();\n\n    if (this.props.player_id != 0) {//this.props.onSelectTest(\"KATHRYN FROM GAMEBOARD\");\n      //this.props.changeCurrentRoom(this.provideCurrentRoom())\n      //this.props.changeCurrentLocationId(this.provideCurrentLocationId())\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-child-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"gameBoardHeader\",\n      class: \"gameBoardHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"gameTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }\n    }, \"Clue-Less Gameboard\")), /*#__PURE__*/React.createElement(Iframe, {\n      id: \"board-iframe\",\n      url: iframeUrl,\n      marginwidth: \"0\",\n      marginheight: \"0\",\n      hspace: \"0\",\n      vspace: \"0\",\n      frameborder: \"0\",\n      scrolling: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"gameBoardFooter\",\n      class: \"gameBoardFooter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 15\n      }\n    }, this.displayPlayerInfo()), /*#__PURE__*/React.createElement(\"table\", {\n      hidden: true,\n      cellSpacing: \"0\",\n      id: \"gameboard_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 17\n      }\n    }, rows)))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-child-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      actions: this.props.actions,\n      currentLocId: this.provideCurrentLocationId(),\n      currentRoom: this.provideCurrentRoom(),\n      cards: this.props.cards,\n      turn: this.props.turn,\n      show_nomove: this.state.show_nomove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NoteBook, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PlayerHand, {\n      cards: this.state.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MessageBoard, {\n      actions: this.props.actions,\n      username: this.state.username,\n      chatmessage: this.state.chatmessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n} //Iframe Helper Methods\n\nfunction convertLocations(locations) {\n  // var locations = this.state.locations;\n  var convertedLocations = [];\n  var playerId = \"\";\n\n  for (var i = 0; i < 6; i++) {\n    var locationObject = {\n      playerId: \"P\" + (i + 1),\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY)\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  for (var i = 6; i < locations.length; i++) {\n    if (i === 7) {\n      playerId = 4;\n    } else if (i === 8) {\n      playerId = 2;\n    } else if (i === 9) {\n      playerId = 3;\n    } else {\n      playerId = i - 5;\n    }\n\n    var locationObject = {\n      playerId: \"W\" + playerId,\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY)\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  return convertedLocations;\n} //convert locations to room ID\n\n\nfunction convertCoordsToId(x, y) {\n  return startGrid[x][y].roomId;\n} //convert locations to room ID\n\n\nfunction convertIdToCoords(id) {\n  // startGrid is an array of json objects...iterate through array until you fin matching ID, return coords\n  var coords = [];\n\n  for (var i = 0; i < startGrid.length; i++) {\n    var row = startGrid[i];\n\n    for (var j = 0; j < row.length; j++) {\n      if (row[j].roomId === id) {\n        coords = [i, j];\n      }\n    }\n  }\n\n  return coords;\n}\n\nexport default Gameboard;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/Gameboard.js"],"names":["React","Room","Box","makeMovement","PlayerHand","NoteBook","MessageBoard","Iframe","uniqueIDsZB","type","name","image","uniqueIDs","roomId","startLocations","currentX","currentY","startGrid","uniqueid","roomName","roomObjs","startLocationsIframe","convertLocations","iframeUrl","JSON","stringify","Gameboard","Component","constructor","props","state","actions","player_id","character_id","username","cards","chatmessage","final_message","show","grid","locations","validOptions","movementTurn","show_nomove","colorPalette","handleOnClick","bind","displayIcons","dims","parseFloat","length","componentDidMount","window","addEventListener","event","requestMovement","data","componentDidUpdate","prevProps","prevState","colorPaletteUpdate","requestedCoords","convertIdToCoords","objects","map","object","index","imgsrc","toString","x","y","myArray","i","requestedLoc","found","location","alert","movement_id","setState","provideCurrentRoom","cx","cy","provideCurrentLocationId","locid","getDerivedStateFromProps","newcount","count","newLocations","newGrid","newCurrentX","newCurrentY","newmovementTurn","newvalidOptions","newshow_nomove","newfinal_message","newshow","newColorPalette","first","undefined","message_type","weapons","message","weapon_locations","console","log","forEach","element","indexOf","Number","id","push","boardLocations","character_moved","objId","moved_character","nx","new_location_x","ny","new_location_y","splice","iframeWin","document","getElementById","contentWindow","postMessage","weapon_moved","moved_weapon","valid_locations","movement_required","message_possible","playerX","playerY","displayPlayerInfo","string","gameBoardHeader","style","background","gameBoardFooter","render","rows","r","d","j","turn","convertedLocations","playerId","locationObject","convertCoordsToId","coords","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\nimport PlayerHand from \"./PlayerHand\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\nimport \"./Divider.css\";\nimport \"./GameBoard.css\";\nimport \"./NoteBook.css\";\nimport Iframe from \"react-iframe\";\nimport \"./hbeat.css\";\n\nvar uniqueIDsZB = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C0\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C1\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C2\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C3\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C4\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C5\" },\n];\n\nvar uniqueIDs = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C1\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C2\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C3\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C4\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C5\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C6\" },\n  //6\n  { type: \"weapon\", name: \"Candlestick\", image: \"W1\" },\n  //7\n  { type: \"weapon\", name: \"Revolver\", image: \"W4\" },\n  //8\n  { type: \"weapon\", name: \"Knife\", image: \"W2\" },\n  //9\n  { type: \"weapon\", name: \"Pipe\", image: \"W3\" },\n  //10\n  { type: \"weapon\", name: \"Rope\", image: \"W5\" },\n  //11\n  { type: \"weapon\", name: \"Wrench\", image: \"W6\" },\n  //12\n  { type: \"room\", name: \"Study\", roomId: 11 },\n  //13\n  { type: \"room\", name: \"Hall\", roomId: 12 },\n  //14\n  { type: \"room\", name: \"Lounge\", roomId: 13 },\n  //15\n  { type: \"room\", name: \"Dinning Room\", roomId: 23 },\n  //16\n  { type: \"room\", name: \"Billiard Room\", roomId: 22 },\n  //17\n  { type: \"room\", name: \"Library\", roomId: 21 },\n  //18\n  { type: \"room\", name: \"Conservatory\", roomId: 31 },\n  //19\n  { type: \"room\", name: \"Ballroom\", roomId: 32 },\n  //20\n  { type: \"room\", name: \"Kitchen\", roomId: 33 },\n];\n\nvar startLocations = [\n  //0 Miss Scarlet\n  {\n    currentX: 0,\n    currentY: 3,\n  },\n  // 1\n  {\n    currentX: 4,\n    currentY: 1,\n  },\n  // 2\n  {\n    currentX: 1,\n    currentY: 4,\n  },\n  //3\n  {\n    currentX: 1,\n    currentY: 0,\n  },\n  //4\n  {\n    currentX: 3,\n    currentY: 0,\n  },\n  //5\n  {\n    currentX: 4,\n    currentY: 3,\n  },\n  //Weapons 6\n  {\n    currentX: 0,\n    currentY: 0,\n  },\n  //Weapons 7\n  {\n    currentX: 2,\n    currentY: 0,\n  },\n  //Weapons 8\n  {\n    currentX: 4,\n    currentY: 0,\n  },\n  //Weapons 9\n  {\n    currentX: 0,\n    currentY: 4,\n  },\n  //Weapons 10\n  {\n    currentX: 2,\n    currentY: 4,\n  },\n  //Weapons 11\n  {\n    currentX: 4,\n    currentY: 4,\n  },\n];\n\nvar startGrid = [\n  [\n    {\n      uniqueid: 12,\n      roomId: \"11\",\n      roomName: \"Study\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1112\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 13,\n      roomId: \"12\",\n      roomName: \"Hall\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1213\",\n      roomName: \"Hallway\",\n      roomObjs: [0],\n    },\n    {\n      uniqueid: 14,\n      roomId: \"13\",\n      roomName: \"Lounge\",\n      roomObjs: [],\n    },\n  ],\n  [\n    {\n      uniqueid: 0,\n      roomId: \"1121\",\n      roomName: \"Hallway\",\n      roomObjs: [3],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1222\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"1323\",\n      roomName: \"Hallway\",\n      roomObjs: [2],\n    },\n  ],\n  [\n    {\n      uniqueid: 17,\n      roomId: \"21\",\n      roomName: \"Library\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2122\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 16,\n      roomId: \"22\",\n      roomName: \"Billiard Room\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2223\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 15,\n      roomId: \"23\",\n      roomName: \"Dinning Room\",\n      roomObjs: [],\n    },\n  ],\n  [\n    {\n      uniqueid: 0,\n      roomId: \"2131\",\n      roomName: \"Hallway\",\n      roomObjs: [4],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2232\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"2333\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n  ],\n  [\n    {\n      uniqueid: 18,\n      roomId: \"31\",\n      roomName: \"Conservatory\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"3132\",\n      roomName: \"Hallway\",\n      roomObjs: [1],\n    },\n    {\n      uniqueid: 19,\n      roomId: \"32\",\n      roomName: \"Ballroom\",\n      roomObjs: [],\n    },\n    {\n      uniqueid: 0,\n      roomId: \"3233\",\n      roomName: \"Hallway\",\n      roomObjs: [5],\n    },\n    {\n      uniqueid: 20,\n      roomId: \"33\",\n      roomName: \"Kitchen\",\n      roomObjs: [],\n    },\n  ],\n];\n\nvar startLocationsIframe = convertLocations(startLocations);\nvar iframeUrl =\n  \"./Board.html?startLocations=\" + JSON.stringify(startLocationsIframe);\n\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character_id: -1,\n      username: this.props.username,\n      cards: {},\n      chatmessage: this.props.chatmessage, // NEW...\n\n      final_message: {},\n      show: true,\n\n      // Gameboard grid\n      grid: startGrid,\n\n      // Tracks all player and weapon locations\n      locations: startLocations,\n\n      // Tracks current player location\n      currentX: -1,\n      currentY: -1,\n\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false,\n      show_nomove: false,\n\n      // Color Settings / Theme:\n      colorPalette: this.props.colorPalette,\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.displayIcons = this.displayIcons.bind(this);\n\n    this.dims = [\n      parseFloat(500 / this.state.grid.length),\n      parseFloat(500 / this.state.grid[0].length),\n    ];\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", (event) => {\n      this.requestMovement(event.data);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update if the data has changed\n    if (prevProps.colorPalette !== prevState.colorPalette) {\n      this.colorPaletteUpdate();\n    }\n  }\n\n  requestMovement(roomId) {\n    var requestedCoords = convertIdToCoords(roomId);\n    this.handleOnClick(requestedCoords[0], requestedCoords[1]);\n  }\n\n  displayIcons() {\n    const objects = uniqueIDs.map((object, index) => {\n      const imgsrc = \"/gameboard/\" + index.toString() + \".png\";\n      return (\n        <p>\n          {\" \"}\n          {index.toString()}\n          <img src={imgsrc} height=\"45\" width=\"30\" />\n        </p>\n      );\n    });\n\n    return <div>{objects}</div>;\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found =\n          JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n      if (found) {\n        alert(\n          \"That's a valid location to movement! Moving to the \" +\n            this.state.grid[x][y].roomName\n        );\n\n        //Send movement request with requested room\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({ movementTurn: false, validOptions: [] });\n      } else {\n        alert(\"That's an invalid location to movement. Try again!\");\n      }\n    } else {\n      alert(\"It's not your turn to move!\");\n    }\n  }\n\n  provideCurrentRoom() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY;\n    //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n    if ((cx == -1) & (cy == -1)) {\n      return \"\";\n    } else {\n      var name = this.state.grid[cx][cy].roomName;\n      //console.log(\"HALLWAY: \" + name);\n      return name;\n    }\n  }\n\n  provideCurrentLocationId() {\n    var cx = this.state.locations[this.props.character_id].currentX;\n    var cy = this.state.locations[this.props.character_id].currentY;\n    //console.log(\"YYHALLWAY: x\" + cx + \" y\" + cy);\n    // console.log(this.state.grid)\n    if ((cx == -1) & (cy == -1)) {\n      return \"\";\n    } else {\n      var locid = this.state.grid[cx][cy].uniqueid;\n      //console.log(\"HALLWAY: \" + locid);\n      return locid;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n    var newshow_nomove = state.show_nomove;\n    var newfinal_message = state.final_message;\n    var newshow = state.show;\n    var newColorPalette = state.colorPalette;\n\n    //console.log(\"CHARACTER \" + props.character_id)\n    if (props.player_id != 0 && state.currentX == -1 && state.currentY == -1) {\n      //console.log(\"BMOVEMENT \" + newCurrentX)\n      //console.log(\"BMOVEMENT \" + newCurrentY)\n      newCurrentX = state.locations[props.character_id].currentX;\n      newCurrentY = state.locations[props.character_id].currentY;\n      //console.log(\"AMOVEMENT \" + newCurrentX)\n      //console.log(\"AMOVEMENT \" + newCurrentY)\n    }\n\n    var first = props.actions[0];\n    //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n    if (first != undefined) {\n      if (first.message_type == 11) {\n        //Assign weapons\n        //   \"weapon_locations\":\n        //  \"id\":\n        //  \"location\": [x,y]\n        var weapons = first.message.weapon_locations;\n        console.log(JSON.stringify(weapons));\n\n        weapons.forEach((element) => {\n          console.log(element);\n          var x = element.location[0];\n          var y = element.location[1];\n\n          //console.log(\"X=\" + x + \" Y=\"+ y)\n          var index = newGrid[x][y].roomObjs.indexOf(Number(element.id));\n          //console.log(index)\n          if (index === -1) {\n            //console.log(\"KATHRYNIF\")\n            newGrid[x][y].roomObjs.push(Number(element.id));\n            newLocations[Number(element.id)].currentX = x;\n            newLocations[Number(element.id)].currentY = y;\n          }\n        });\n        console.log(\"GRID=\" + JSON.stringify(newGrid));\n        console.log(\"LOC=\" + JSON.stringify(newLocations));\n\n        //Update Iframe with new location\n        // var iframeWin = document.getElementById(\"board-iframe\").contentWindow;\n        // var boardLocations = convertLocations(newLocations);\n        // iframeWin.postMessage(boardLocations);\n\n        //Update Iframe with new location\n        var boardLocations = convertLocations(newLocations);\n\n        iframeUrl =\n          \"./Board.html?startLocations=\" + JSON.stringify(boardLocations);\n      } else if (first.message_type == 22) {\n        //console.log(\"Found movement broadcast\");\n        if (first.message.character_moved === true) {\n          //console.log(\"Character move\")\n          var objId = Number(first.message.moved_character);\n          console.log(\"Character move: \" + objId);\n\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n          //console.log(\"MOVEMENT current\" + cx + \" \" + cy)\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n          //console.log(\"MOVEMENT new\" + nx + \" \" + ny)\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          if ((objId = props.character_id)) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n\n          //Update Iframe with new location\n          var iframeWin = document.getElementById(\"board-iframe\").contentWindow;\n          var boardLocations = convertLocations(newLocations);\n          iframeWin.postMessage(boardLocations);\n\n          // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[cx][cy]))\n          // console.log(\"MOVEMENT \" + JSON.stringify(newGrid[nx][ny]))\n          //console.log(\"MOVEMENT \" + newLocations[objId].currentX)\n          // console.log(\"MOVEMENT \" + newLocations[objId].currentY)\n          //console.log(\"MOVEMENT \" + newCurrentX)\n          //console.log(\"MOVEMENT \" + newCurrentY)\n        }\n\n        if (first.message.weapon_moved === true) {\n          //console.log(\"Weapon move\")\n          var objId = Number(first.message.moved_weapon);\n          console.log(\"Weapon move: \" + objId);\n\n          const cx = newLocations[objId].currentX;\n          const cy = newLocations[objId].currentY;\n\n          const nx = first.message.new_location_x;\n          const ny = first.message.new_location_y;\n\n          var index = newGrid[cx][cy].roomObjs.indexOf(objId);\n          newGrid[cx][cy].roomObjs.splice(index, 1); //Remove obj from old room\n          newGrid[nx][ny].roomObjs.push(objId); //Add obj to new room\n\n          newLocations[objId].currentX = nx;\n          newLocations[objId].currentY = ny;\n\n          var iframeWin = document.getElementById(\"board-iframe\").contentWindow;\n          var boardLocations = convertLocations(newLocations);\n          iframeWin.postMessage(boardLocations);\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n        if (\n          first.message.movement_required === false ||\n          first.message.message_possible === false\n        ) {\n          newshow_nomove = true;\n        }\n      } else if (first.message_type == 61) {\n        // {\n        // “game_over”:\n        // “winning_player”:\n        // “correct_room”:\n        // “correct_character”:\n        // “correct_weapon”:\n        // }\n        newfinal_message = first;\n        newshow = true;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      player_id: props.player_id,\n      character_id: props.character_id,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions,\n      show_nomove: newshow_nomove,\n      final_message: newfinal_message,\n      show: newshow,\n      colorPalette: newColorPalette,\n    };\n  }\n\n  displayPlayerInfo() {\n    let string = \"\";\n    if (this.props.player_id != 0) {\n      let cx = this.state.locations[this.props.character_id].currentX;\n      let cy = this.state.locations[this.props.character_id].currentY;\n      let roomName = this.state.grid[cx][cy].roomName;\n      string =\n        \"Username: \" +\n        this.props.username +\n        \" | Character: \" +\n        uniqueIDs[this.props.character_id].name +\n        \" | Current Location: \" +\n        roomName;\n      //string = \"Username = \" + window.location.port + \" | Player = \" + this.props.player_id + \" | Current Location = [\" + this.state.locations[this.props.character_id].currentX + \", \" + this.state.locations[this.props.character_id].currentY + \"]\";\n    } else {\n      string = \"\";\n      //\"Username = \" + window.location.port;\n    }\n    return string;\n  }\n\n  colorPaletteUpdate() {\n    var gameBoardHeader = document.getElementById(\"gameBoardHeader\");\n    gameBoardHeader.style.background = this.state.colorPalette[0];\n    var gameBoardFooter = document.getElementById(\"gameBoardFooter\");\n    gameBoardFooter.style.background = this.state.colorPalette[1];\n    console.log(\"Color Palette Update:\" + this.state.colorPalette[0]);\n  }\n\n  render() {\n    const rows = this.state.grid.map((r, i) => {\n      return (\n        <tr key={\"row_\" + i}>\n          {r.map((d, j) => {\n            return (\n              <Room\n                key={i + \"_\" + j}\n                dims={this.dims}\n                onClick={() => {\n                  this.handleOnClick(i, j);\n                }}\n                contents={d}\n                x={i}\n                y={j}\n              />\n            );\n          })}\n        </tr>\n      );\n    });\n\n    //this.colorPaletteUpdate();\n\n    if (this.props.player_id != 0) {\n      //this.props.onSelectTest(\"KATHRYN FROM GAMEBOARD\");\n      //this.props.changeCurrentRoom(this.provideCurrentRoom())\n      //this.props.changeCurrentLocationId(this.provideCurrentLocationId())\n    }\n\n    return (\n      <div>\n        <div class=\"float-container\">\n          <div class=\"float-child-left\">\n            <div class=\"green\">\n              <span id=\"gameBoardHeader\" class=\"gameBoardHeader\">\n                <span class=\"gameTitle\">Clue-Less Gameboard</span>\n              </span>\n\n              <Iframe\n                id=\"board-iframe\"\n                url={iframeUrl}\n                marginwidth=\"0\"\n                marginheight=\"0\"\n                hspace=\"0\"\n                vspace=\"0\"\n                frameborder=\"0\"\n                scrolling=\"no\"\n              />\n\n              <span id=\"gameBoardFooter\" class=\"gameBoardFooter\">\n                {this.displayPlayerInfo()}\n              </span>\n\n              <table hidden cellSpacing=\"0\" id=\"gameboard_table\">\n                <tbody>{rows}</tbody>\n              </table>\n            </div>\n          </div>\n          <div class=\"float-child-right\">\n            <div>\n              <Box\n                actions={this.props.actions}\n                currentLocId={this.provideCurrentLocationId()}\n                currentRoom={this.provideCurrentRoom()}\n                cards={this.props.cards}\n                turn={this.props.turn}\n                show_nomove={this.state.show_nomove}\n              />\n              <NoteBook></NoteBook>\n              <PlayerHand cards={this.state.cards} />\n\n              <p>\n                <MessageBoard\n                  actions={this.props.actions}\n                  username={this.state.username}\n                  chatmessage={this.state.chatmessage}\n                />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//Iframe Helper Methods\n\nfunction convertLocations(locations) {\n  // var locations = this.state.locations;\n\n  var convertedLocations = [];\n  var playerId = \"\";\n\n  for (var i = 0; i < 6; i++) {\n    var locationObject = {\n      playerId: \"P\" + (i + 1),\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY),\n    };\n    convertedLocations.push(locationObject);\n  }\n\n  for (var i = 6; i < locations.length; i++) {\n    if (i === 7) {\n      playerId = 4;\n    } else if (i === 8) {\n      playerId = 2;\n    } else if (i === 9) {\n      playerId = 3;\n    } else {\n      playerId = i - 5;\n    }\n    var locationObject = {\n      playerId: \"W\" + playerId,\n      roomId: convertCoordsToId(locations[i].currentX, locations[i].currentY),\n    };\n\n    convertedLocations.push(locationObject);\n  }\n\n  return convertedLocations;\n}\n\n//convert locations to room ID\nfunction convertCoordsToId(x, y) {\n  return startGrid[x][y].roomId;\n}\n\n//convert locations to room ID\nfunction convertIdToCoords(id) {\n  // startGrid is an array of json objects...iterate through array until you fin matching ID, return coords\n  var coords = [];\n\n  for (var i = 0; i < startGrid.length; i++) {\n    var row = startGrid[i];\n    for (var j = 0; j < row.length; j++) {\n      if (row[j].roomId === id) {\n        coords = [i, j];\n      }\n    }\n  }\n\n  return coords;\n}\n\nexport default Gameboard;\n"]},"metadata":{},"sourceType":"module"}