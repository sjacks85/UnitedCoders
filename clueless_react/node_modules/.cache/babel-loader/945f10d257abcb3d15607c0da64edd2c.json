{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/TicTac.js\";\nimport { conditionalExpression } from \"@babel/types\";\nimport React from \"react\"; //import { grid } from '../data/grid.js';\n\nimport { Square } from \"./Square\";\nvar roomCode = [\"11\", \"12\", \"13\", \"21\", \"22\", \"23\", \"31\", \"32\", \"33\", \"1112\", \"1213\", \"1121\", \"1222\", \"1323\", \"2122\", \"2223\", \"2131\", \"2232\", \"2333\", \"3132\", \"3233\"]; //All rooms and Hallways locations to put objects. Sequence is important - Please don't change them.\n\nvar roomArra = {\n  11: [103, 241, 273, 426],\n  12: [379, 300, 585, 455],\n  13: [691, 235, 853, 394],\n  21: [103, 541, 337, 716],\n  22: [423, 544, 561, 715],\n  23: [674, 510, 828, 660],\n  31: [103, 835, 305, 1011],\n  32: [385, 796, 569, 995],\n  33: [640, 892, 861, 1017],\n  1112: [304, 374, 304, 374],\n  1213: [625, 374, 625, 374],\n  1121: [219, 460, 219, 460],\n  1222: [543, 479, 543, 479],\n  1323: [735, 440, 735, 440],\n  2122: [365, 599, 365, 599],\n  2223: [591, 567, 591, 567],\n  2131: [284, 753, 284, 753],\n  2232: [444, 741, 444, 741],\n  2333: [680, 725, 680, 725],\n  3132: [335, 924, 335, 924],\n  3233: [590, 923, 590, 923]\n}; //All valid rooms and hallways to move in (based on player's current location). Sequence is important - Please don't change them.\n\nvar roomAccess = [[{\n  roomId: \"11\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1112\",\n    x: 0,\n    y: 1\n  }, {\n    id: \"1121\",\n    x: 1,\n    y: 0\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"11\",\n    x: 0,\n    y: 0\n  }, {\n    id: \"12\",\n    x: 0,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"12\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1112\",\n    x: 0,\n    y: 1\n  }, {\n    id: \"1222\",\n    x: 3,\n    y: 3\n  }, {\n    id: \"1213\",\n    x: 0,\n    y: 3\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"12\",\n    x: 0,\n    y: 2\n  }, {\n    id: \"13\",\n    x: 0,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"13\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1213\",\n    x: 0,\n    y: 3\n  }, \"1323\", {\n    id: \"31\",\n    x: 4,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"11\",\n    x: 0,\n    y: 0\n  }, {\n    id: \"21\",\n    x: 2,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"12\",\n    x: 0,\n    y: 2\n  }, {\n    id: \"22\",\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"13\",\n    x: 0,\n    y: 4\n  }, {\n    id: \"23\",\n    x: 2,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"21\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1121\",\n    x: 1,\n    y: 0\n  }, {\n    id: \"2122\",\n    x: 2,\n    y: 1\n  }, {\n    id: \"2131\",\n    x: 3,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"21\",\n    x: 2,\n    y: 0\n  }, {\n    id: \"22\",\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"22\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"2122\",\n    x: 1,\n    y: 1\n  }, {\n    id: \"1222\",\n    x: 1,\n    y: 1\n  }, {\n    id: \"2223\",\n    x: 2,\n    y: 3\n  }, {\n    id: \"2232\",\n    x: 3,\n    y: 2\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"22\",\n    x: 2,\n    y: 2\n  }, {\n    id: \"23\",\n    x: 2,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"23\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"2223\",\n    x: 2,\n    y: 3\n  }, {\n    id: \"1323\",\n    x: 1,\n    y: 4\n  }, {\n    id: \"2333\",\n    x: 3,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"2131\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"21\",\n    x: 2,\n    y: 0\n  }, {\n    id: \"31\",\n    x: 4,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2232\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"22\",\n    x: 2,\n    y: 2\n  }, {\n    id: \"32\",\n    x: 4,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2333\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"23\",\n    x: 2,\n    y: 4\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"31\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"2131\",\n    x: 3,\n    y: 0\n  }, {\n    id: \"3132\",\n    x: 4,\n    y: 1\n  }, {\n    id: \"13\",\n    x: 0,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"31\",\n    x: 4,\n    y: 0\n  }, {\n    id: \"32\",\n    x: 4,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"32\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"3132\",\n    x: 4,\n    y: 1\n  }, {\n    id: \"2232\",\n    x: 3,\n    y: 2\n  }, {\n    id: \"3233\",\n    x: 4,\n    y: 3\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"32\",\n    x: 4,\n    y: 2\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"33\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"3233\",\n    x: 4,\n    y: 3\n  }, {\n    id: \"2233\",\n    x: 3,\n    y: 4\n  }, {\n    id: \"11\",\n    x: 0,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}]];\nexport class TicTac extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dim: 3,\n      //grid:Array(5).fill(0).map(x=>Array(5).fill({})),\n      grid: roomAccess,\n      player: \"X\",\n      winner: null,\n      active: true,\n      // Stores players current locID\n      players: [\"2333\", //Miss Scarlet\n      \"3233\", //Mr. Green\n      \"2131\", //Colonel Mustard\n      \"1121\", //Prof. Plum\n      \"1112\", //Mrs. Peacock\n      \"1323\" //Mrs. White\n      ],\n      // Stores weapons current locID\n      weapons: [\"11\", \"13\", \"22\", \"23\", \"31\", \"32\"],\n      currentX: 0,\n      currentY: 0,\n      currentPlayer: \"P1\"\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  } // checkWins(x, y){\n  //   const g = this.state.grid\n  //   function checkDiagonal1(){\n  //     if (x == y){\n  //       const result = new Set(g.map((_, i)=>g[i][i]));\n  //       announceWin(result);\n  //     }\n  //   }\n  //   function checkDiagonal2(){\n  //     if (x+y+1 == g.length){\n  //       const result = new Set(g.map((_, i)=>g[i][g.length-1-i]))\n  //       announceWin(result);\n  //     }\n  //   }\n  //   function checkHorizontal(x){\n  //     const result = new Set(g[x]);\n  //     announceWin(result);\n  //   }\n  //   function checkVertical(y){\n  //     const result = new Set(g.map((x)=>x[y]));\n  //     announceWin(result);\n  //   }\n  //   function announceWin(l){\n  //     if (l.size == 1){\n  //       if (l.has(\"X\")){\n  //         setTimeout(()=>{alert(\"X wins\")}, 10);\n  //         return;\n  //       } else {\n  //         setTimeout(()=>{alert(\"O wins\")}, 10);\n  //         return;\n  //       }\n  //     }\n  //   }\n  //   checkDiagonal1();\n  //   checkDiagonal2();\n  //   checkHorizontal(x);\n  //   checkVertical(y);\n  // }\n  // Movement message\n  //{\"game_id\":0,\"player_id\":0,\"message_type\":22,\"message\":\n  //{\"character_moved\":true,\"weapon_moved\":false,\"moved_character\":1,\"moved_weapon\":\"\",\"new_weapon_location\":[]}}\n  //Process the Move for Person or Weapon to new location\n\n\n  moveObject(PID, TO) {\n    var currentLoc = document.getElementById(PID).getAttribute(\"data-locId\");\n    document.getElementById(PID).setAttribute(\"data-locId\", TO);\n    this.RenderRoom(currentLoc);\n    this.RenderRoom(TO);\n  } //Organizes Objects in a room/hallway  (Updates Room on Gui)\n\n\n  RenderRoom(RID) {\n    console.log(\"renderroom\" + RID);\n    var roomidx = -1;\n\n    for (roomidx = 0; roomidx < 21; roomidx++) {\n      if (RID == roomCode[roomidx]) break;\n    } //alert(roomidx+','+roomCode[roomidx]);\n\n\n    var fromx = roomArra[roomidx][0];\n    var fromy = roomArra[roomidx][1];\n    var tox = roomArra[roomidx][2];\n    var toy = roomArra[roomidx][3];\n    var i = 0;\n    var cx = fromx;\n    var cy = fromy;\n\n    for (i = 1; i < 7; i++) {\n      if (roomCode[roomidx] == document.getElementById(\"P\" + i).getAttribute(\"data-locId\")) {\n        //$('#P'+i).css({ left: cx+ 'px' });\n        //$('#P'+i).css({ top: cy+'px' });\n        cy += 45;\n\n        if (cy + 40 > toy) {\n          cx += 45;\n          cy = fromy;\n        }\n      }\n    }\n\n    for (i = 1; i < 7; i++) {\n      if (roomCode[roomidx] == document.getElementById(\"W\" + i).getAttribute(\"data-locId\")) {\n        //$('#W'+i).css({ left: cx+ 'px' });\n        //$('#W'+i).css({ top: cy+'px' });\n        cy += 45;\n\n        if (cy + 40 > toy) {\n          cx += 45;\n          cy = fromy;\n        }\n      }\n    }\n\n    var rcode = roomCode;\n  } //Checks if Hallway is free to move in ?\n\n\n  ISFree(HWID) {\n    console.log(\"Isfree\" + HWID);\n    console.log(\"Isfree\" + document.getElementById(\"P1\").getAttribute(\"data-locId\"));\n\n    for (var i = 1; i < 7; i++) {\n      if (HWID == document.getElementById(\"P\" + i).getAttribute(\"data-locId\")) {\n        return false;\n      }\n    }\n\n    return true;\n  } //Validates the requested move.\n  // We can not move to a Hallway if already someone is there\n  // We only can move to neighbor areas and cross connected rooms\n\n\n  validateMove(dataId) {\n    var roomidx = -1;\n    var locid = document.getElementById(this.state.myid).getAttribute(\"data-locId\");\n    console.log(\"validatemove\" + locid);\n\n    for (roomidx = 0; roomidx < 21; roomidx++) {\n      if (locid == roomCode[roomidx]) break;\n    }\n\n    for (var i = 0; i < roomAccess[roomidx].length; i++) {\n      if (roomAccess[roomidx][i] == dataId) {\n        if (roomAccess[roomidx][i].length == 2) return true;\n        return this.ISFree(roomAccess[roomidx][i]);\n      }\n    }\n\n    return false;\n  } //Manages Click event on area (Room or Hallway) . Validate the Move and Move the player to new location.\n\n\n  AreaClicked(area) {\n    console.log(area);\n    console.log(this.state.myid);\n    var dataId = area.name;\n    if (!this.state.started) return;\n\n    if (!this.ValidateMove(dataId)) {\n      alert(\"Your requested move is not valid!\");\n      return;\n    }\n\n    this.MoveObject(this.state.myid, dataId);\n  }\n\n  movePlayer(x, y) {\n    console.log(\"moveplayer\");\n  }\n\n  validateMove(x, y) {\n    const g = this.state.grid;\n    console.log(g);\n    const currentRoom = this.state.grid[this.state.currentX][this.state.currentY];\n    const requestedRoom = this.state.grid[x][y]; // Validate move\n\n    for (var i = 0; i < currentRoom.roomAccess.length; i++) {\n      //Valid room from current position\n      //console.log(JSON.stringify(currentRoom.roomAccess[i]));\n      if (currentRoom.roomAccess[i].x == x && currentRoom.roomAccess[i].y == y) {\n        //console.log(\"match\")\n        //Room with no max\n        if (requestedRoom.roomLimit == -1) {\n          console.log(\"room with no max\");\n          return true;\n        } //Picked empty spot\n\n\n        if (requestedRoom.roomLimit == 0) {\n          console.log(\"empty space\");\n          return false;\n        } // Check limit, 1 = hallway with 1 max\n\n\n        if (requestedRoom.roomLimit == 1 && requestedRoom.roomPlayers.length == 0) {\n          console.log(\"hallway not blocked\");\n          return true;\n        } else {\n          console.log(\"hallway blocked\");\n          return false;\n        }\n      } //console.log(\"no match\")\n\n    }\n\n    return false;\n  }\n\n  handleOnClick(x, y) {\n    const g = this.state.grid;\n    console.log(\"TicTac x=\" + x + \" y=\" + y + \" \");\n    const currentRoom = this.state.grid[this.state.currentX][this.state.currentY];\n    const requestedRoom = this.state.grid[x][y];\n    console.log(\"TicTac \" + JSON.stringify(currentRoom));\n    console.log(\"TicTac \" + JSON.stringify(requestedRoom)); //console.log(\"TicTac \" + JSON.stringify(this.state.grid))\n    // Need to store current player, with location to base valid movements on\n\n    const valid = this.validateMove(x, y);\n\n    if (valid) {\n      this.movePlayer(x, y);\n    } else {\n      alert(\"not valid movement\");\n    }\n  } // {\n  //   roomId: \"3233\",\n  //   roomName: \"Hallway\",\n  //   roomAccess: ['32','33'],\n  //   roomLimit: 1, // Because it is the hallway\n  //   roomPlayers: [],\n  //   roomWeapons: [],\n  // },\n  //this.validateMove(x, y)\n  // if (this.state.active){\n  //   if (g[x][y] == []){\n  //     g[x][y] = this.state.player;\n  //     this.setState({'grid':g});\n  //     this.state.player = this.state.player == 'X' ? 'O':'X';\n  //     this.checkWins(x, y);\n  // } else {\n  //   alert('Please select an empty square!');\n  //   }\n  // }\n\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\"\n    };\n    console.log(this.state.grid);\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 9\n        }\n      }, r.map((d, j) => {\n        console.log(\"building\");\n        return /*#__PURE__*/React.createElement(Square, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          } //contents={d==\"+\"?\" \":d}\n          ,\n          contents: d,\n          name: \"Austin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }\n        });\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }\n    }, \"Tic-Tac-React!\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }\n    }, \"tic-tac-toe, written with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 37\n      }\n    }, \"ReactJS\"), \". Enjoy!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }\n    }, \"Current Player: \", this.state.player), /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }\n    }, rows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default TicTac;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/TicTac.js"],"names":["conditionalExpression","React","Square","roomCode","roomArra","roomAccess","roomId","roomName","id","x","y","roomLimit","roomPlayers","roomWeapons","TicTac","Component","constructor","props","state","dim","grid","player","winner","active","players","weapons","currentX","currentY","currentPlayer","handleOnClick","bind","dims","parseFloat","length","moveObject","PID","TO","currentLoc","document","getElementById","getAttribute","setAttribute","RenderRoom","RID","console","log","roomidx","fromx","fromy","tox","toy","i","cx","cy","rcode","ISFree","HWID","validateMove","dataId","locid","myid","AreaClicked","area","name","started","ValidateMove","alert","MoveObject","movePlayer","g","currentRoom","requestedRoom","JSON","stringify","valid","render","style","margin","width","height","backgroundColor","color","fontSize","tableLayout","rows","map","r","d","j","textAlign"],"mappings":"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","sourcesContent":["import { conditionalExpression } from \"@babel/types\";\nimport React from \"react\";\n//import { grid } from '../data/grid.js';\nimport { Square } from \"./Square\";\n\nvar roomCode = [\n  \"11\",\n  \"12\",\n  \"13\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"31\",\n  \"32\",\n  \"33\",\n  \"1112\",\n  \"1213\",\n  \"1121\",\n  \"1222\",\n  \"1323\",\n  \"2122\",\n  \"2223\",\n  \"2131\",\n  \"2232\",\n  \"2333\",\n  \"3132\",\n  \"3233\",\n];\n\n//All rooms and Hallways locations to put objects. Sequence is important - Please don't change them.\nvar roomArra = {\n  11: [103, 241, 273, 426],\n  12: [379, 300, 585, 455],\n  13: [691, 235, 853, 394],\n  21: [103, 541, 337, 716],\n  22: [423, 544, 561, 715],\n  23: [674, 510, 828, 660],\n  31: [103, 835, 305, 1011],\n  32: [385, 796, 569, 995],\n  33: [640, 892, 861, 1017],\n  1112: [304, 374, 304, 374],\n  1213: [625, 374, 625, 374],\n  1121: [219, 460, 219, 460],\n  1222: [543, 479, 543, 479],\n  1323: [735, 440, 735, 440],\n  2122: [365, 599, 365, 599],\n  2223: [591, 567, 591, 567],\n  2131: [284, 753, 284, 753],\n  2232: [444, 741, 444, 741],\n  2333: [680, 725, 680, 725],\n  3132: [335, 924, 335, 924],\n  3233: [590, 923, 590, 923],\n};\n\n//All valid rooms and hallways to move in (based on player's current location). Sequence is important - Please don't change them.\nvar roomAccess = [\n  [\n    {\n      roomId: \"11\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1112\", x: 0, y: 1 },\n        { id: \"1121\", x: 1, y: 0 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1112\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"11\", x: 0, y: 0 },\n        { id: \"12\", x: 0, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"12\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1112\", x: 0, y: 1 },\n        { id: \"1222\", x: 3, y: 3 },\n        { id: \"1213\", x: 0, y: 3 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1213\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"12\", x: 0, y: 2 },\n        { id: \"13\", x: 0, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"13\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1213\", x: 0, y: 3 },\n        \"1323\",\n        { id: \"31\", x: 4, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"1121\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"11\", x: 0, y: 0 },\n        { id: \"21\", x: 2, y: 0 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1222\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"12\", x: 0, y: 2 },\n        { id: \"22\", x: 2, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1323\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"13\", x: 0, y: 4 },\n        { id: \"23\", x: 2, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"21\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1121\", x: 1, y: 0 },\n        { id: \"2122\", x: 2, y: 1 },\n        { id: \"2131\", x: 3, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2122\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"21\", x: 2, y: 0 },\n        { id: \"22\", x: 2, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"22\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"2122\", x: 1, y: 1 },\n        { id: \"1222\", x: 1, y: 1 },\n        { id: \"2223\", x: 2, y: 3 },\n        { id: \"2232\", x: 3, y: 2 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2223\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"22\", x: 2, y: 2 },\n        { id: \"23\", x: 2, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"23\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"2223\", x: 2, y: 3 },\n        { id: \"1323\", x: 1, y: 4 },\n        { id: \"2333\", x: 3, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"2131\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"21\", x: 2, y: 0 },\n        { id: \"31\", x: 4, y: 0 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2232\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"22\", x: 2, y: 2 },\n        { id: \"32\", x: 4, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2333\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"23\", x: 2, y: 4 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"31\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"2131\", x: 3, y: 0 },\n        { id: \"3132\", x: 4, y: 1 },\n        { id: \"13\", x: 0, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"3132\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"31\", x: 4, y: 0 },\n        { id: \"32\", x: 4, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"32\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"3132\", x: 4, y: 1 },\n        { id: \"2232\", x: 3, y: 2 },\n        { id: \"3233\", x: 4, y: 3 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"3233\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"32\", x: 4, y: 2 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"33\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"3233\", x: 4, y: 3 },\n        { id: \"2233\", x: 3, y: 4 },\n        { id: \"11\", x: 0, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n  ],\n];\n\nexport class TicTac extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dim: 3,\n      //grid:Array(5).fill(0).map(x=>Array(5).fill({})),\n      grid: roomAccess,\n      player: \"X\",\n      winner: null,\n      active: true,\n\n      // Stores players current locID\n      players: [\n        \"2333\", //Miss Scarlet\n        \"3233\", //Mr. Green\n        \"2131\", //Colonel Mustard\n        \"1121\", //Prof. Plum\n        \"1112\", //Mrs. Peacock\n        \"1323\", //Mrs. White\n      ],\n\n      // Stores weapons current locID\n      weapons: [\"11\", \"13\", \"22\", \"23\", \"31\", \"32\"],\n\n      currentX: 0,\n      currentY: 0,\n      currentPlayer: \"P1\",\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.dims = [\n      parseFloat(500 / this.state.grid.length),\n      parseFloat(500 / this.state.grid[0].length),\n    ];\n  }\n\n  // checkWins(x, y){\n  //   const g = this.state.grid\n\n  //   function checkDiagonal1(){\n  //     if (x == y){\n  //       const result = new Set(g.map((_, i)=>g[i][i]));\n  //       announceWin(result);\n  //     }\n  //   }\n\n  //   function checkDiagonal2(){\n  //     if (x+y+1 == g.length){\n  //       const result = new Set(g.map((_, i)=>g[i][g.length-1-i]))\n  //       announceWin(result);\n  //     }\n  //   }\n\n  //   function checkHorizontal(x){\n  //     const result = new Set(g[x]);\n  //     announceWin(result);\n  //   }\n\n  //   function checkVertical(y){\n  //     const result = new Set(g.map((x)=>x[y]));\n  //     announceWin(result);\n  //   }\n\n  //   function announceWin(l){\n  //     if (l.size == 1){\n  //       if (l.has(\"X\")){\n  //         setTimeout(()=>{alert(\"X wins\")}, 10);\n  //         return;\n  //       } else {\n  //         setTimeout(()=>{alert(\"O wins\")}, 10);\n  //         return;\n  //       }\n  //     }\n  //   }\n\n  //   checkDiagonal1();\n  //   checkDiagonal2();\n  //   checkHorizontal(x);\n  //   checkVertical(y);\n  // }\n\n  // Movement message\n  //{\"game_id\":0,\"player_id\":0,\"message_type\":22,\"message\":\n  //{\"character_moved\":true,\"weapon_moved\":false,\"moved_character\":1,\"moved_weapon\":\"\",\"new_weapon_location\":[]}}\n\n  //Process the Move for Person or Weapon to new location\n  moveObject(PID, TO) {\n    var currentLoc = document.getElementById(PID).getAttribute(\"data-locId\");\n    document.getElementById(PID).setAttribute(\"data-locId\", TO);\n    this.RenderRoom(currentLoc);\n    this.RenderRoom(TO);\n  }\n\n  //Organizes Objects in a room/hallway  (Updates Room on Gui)\n  RenderRoom(RID) {\n    console.log(\"renderroom\" + RID);\n    var roomidx = -1;\n    for (roomidx = 0; roomidx < 21; roomidx++) {\n      if (RID == roomCode[roomidx]) break;\n    }\n    //alert(roomidx+','+roomCode[roomidx]);\n    var fromx = roomArra[roomidx][0];\n    var fromy = roomArra[roomidx][1];\n    var tox = roomArra[roomidx][2];\n    var toy = roomArra[roomidx][3];\n    var i = 0;\n    var cx = fromx;\n    var cy = fromy;\n    for (i = 1; i < 7; i++) {\n      if (\n        roomCode[roomidx] ==\n        document.getElementById(\"P\" + i).getAttribute(\"data-locId\")\n      ) {\n        //$('#P'+i).css({ left: cx+ 'px' });\n        //$('#P'+i).css({ top: cy+'px' });\n        cy += 45;\n        if (cy + 40 > toy) {\n          cx += 45;\n          cy = fromy;\n        }\n      }\n    }\n    for (i = 1; i < 7; i++) {\n      if (\n        roomCode[roomidx] ==\n        document.getElementById(\"W\" + i).getAttribute(\"data-locId\")\n      ) {\n        //$('#W'+i).css({ left: cx+ 'px' });\n        //$('#W'+i).css({ top: cy+'px' });\n        cy += 45;\n\n        if (cy + 40 > toy) {\n          cx += 45;\n          cy = fromy;\n        }\n      }\n    }\n    var rcode = roomCode;\n  }\n\n  //Checks if Hallway is free to move in ?\n  ISFree(HWID) {\n    console.log(\"Isfree\" + HWID);\n    console.log(\n      \"Isfree\" + document.getElementById(\"P1\").getAttribute(\"data-locId\")\n    );\n    for (var i = 1; i < 7; i++) {\n      if (HWID == document.getElementById(\"P\" + i).getAttribute(\"data-locId\")) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  //Validates the requested move.\n  // We can not move to a Hallway if already someone is there\n  // We only can move to neighbor areas and cross connected rooms\n  validateMove(dataId) {\n    var roomidx = -1;\n\n    var locid = document\n      .getElementById(this.state.myid)\n      .getAttribute(\"data-locId\");\n    console.log(\"validatemove\" + locid);\n    for (roomidx = 0; roomidx < 21; roomidx++) {\n      if (locid == roomCode[roomidx]) break;\n    }\n\n    for (var i = 0; i < roomAccess[roomidx].length; i++) {\n      if (roomAccess[roomidx][i] == dataId) {\n        if (roomAccess[roomidx][i].length == 2) return true;\n        return this.ISFree(roomAccess[roomidx][i]);\n      }\n    }\n    return false;\n  }\n\n  //Manages Click event on area (Room or Hallway) . Validate the Move and Move the player to new location.\n  AreaClicked(area) {\n    console.log(area);\n    console.log(this.state.myid);\n    var dataId = area.name;\n    if (!this.state.started) return;\n    if (!this.ValidateMove(dataId)) {\n      alert(\"Your requested move is not valid!\");\n      return;\n    }\n    this.MoveObject(this.state.myid, dataId);\n  }\n\n  movePlayer(x, y) {\n    console.log(\"moveplayer\")\n  }\n\n  validateMove(x, y) {\n    const g = this.state.grid;\n    console.log(g);\n\n    const currentRoom = this.state.grid[this.state.currentX][this.state.currentY];\n    const requestedRoom = this.state.grid[x][y];\n\n    // Validate move\n    for (var i = 0; i < currentRoom.roomAccess.length; i++) {\n      //Valid room from current position\n      //console.log(JSON.stringify(currentRoom.roomAccess[i]));\n      if (\n        currentRoom.roomAccess[i].x == x &&\n        currentRoom.roomAccess[i].y == y\n      ) {\n        //console.log(\"match\")\n        //Room with no max\n        if (requestedRoom.roomLimit == -1) {\n          console.log(\"room with no max\");\n          return true;\n        }\n\n        //Picked empty spot\n        if (requestedRoom.roomLimit == 0) {\n          console.log(\"empty space\");\n          return false;\n        }\n\n        // Check limit, 1 = hallway with 1 max\n        if (\n          requestedRoom.roomLimit == 1 &&\n          requestedRoom.roomPlayers.length == 0\n        ) {\n          console.log(\"hallway not blocked\");\n          return true;\n        } else {\n          console.log(\"hallway blocked\");\n          return false;\n        }\n      }\n      //console.log(\"no match\")\n    }\n    return false;\n  }\n\n  handleOnClick(x, y) {\n    const g = this.state.grid;\n    console.log(\"TicTac x=\" + x + \" y=\" + y + \" \");\n    const currentRoom = this.state.grid[this.state.currentX][this.state.currentY];\n    const requestedRoom = this.state.grid[x][y];\n    console.log(\"TicTac \" + JSON.stringify(currentRoom));\n    console.log(\"TicTac \" + JSON.stringify(requestedRoom));\n    //console.log(\"TicTac \" + JSON.stringify(this.state.grid))\n\n    // Need to store current player, with location to base valid movements on\n\n    const valid = this.validateMove(x, y)\n    if (valid) {\n      this.movePlayer(x, y);\n    } else {\n      alert(\"not valid movement\")\n    }\n\n  }\n\n  // {\n  //   roomId: \"3233\",\n  //   roomName: \"Hallway\",\n  //   roomAccess: ['32','33'],\n  //   roomLimit: 1, // Because it is the hallway\n  //   roomPlayers: [],\n  //   roomWeapons: [],\n  // },\n\n  //this.validateMove(x, y)\n  // if (this.state.active){\n  //   if (g[x][y] == []){\n  //     g[x][y] = this.state.player;\n  //     this.setState({'grid':g});\n  //     this.state.player = this.state.player == 'X' ? 'O':'X';\n  //     this.checkWins(x, y);\n  // } else {\n  //   alert('Please select an empty square!');\n  //   }\n  // }\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\",\n    };\n    console.log(this.state.grid);\n    const rows = this.state.grid.map((r, i) => {\n      return (\n        <tr key={\"row_\" + i}>\n          {r.map((d, j) => {\n            console.log(\"building\");\n            return (\n              <Square\n                key={i + \"_\" + j}\n                dims={this.dims}\n                onClick={() => {\n                  this.handleOnClick(i, j);\n                }}\n                //contents={d==\"+\"?\" \":d}\n                contents={d}\n                name=\"Austin\"\n              />\n            );\n          })}\n        </tr>\n      );\n    });\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Tic-Tac-React!</h1>\n        <small>\n          tic-tac-toe, written with <b>ReactJS</b>. Enjoy!\n        </small>\n        <p>Current Player: {this.state.player}</p>\n        <table cellSpacing=\"0\" id=\"table\" style={style}>\n          <tbody>{rows}</tbody>\n        </table>\n        <br />\n        {/* <button style={{margin:\"auto\"}} onClick={this.handleReset}>reset</button>\n        <br /><br />\n        <button onClick={()=>{this.state.dim==1?1:this.state.dim-=1;this.setState({dim:this.state.dim})}}>-</button>\n\n            &nbsp;&nbsp;&nbsp;<span style={{color:'white'}}>{this.state.dim}</span>&nbsp;&nbsp;&nbsp;\n\n        <button onClick={()=>{this.state.dim+=1;this.setState({dim:this.state.dim})}}>+</button> */}\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default TicTac;\n"]},"metadata":{},"sourceType":"module"}