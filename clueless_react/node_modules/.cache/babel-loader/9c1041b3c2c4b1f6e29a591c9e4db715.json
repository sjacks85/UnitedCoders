{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Gameboard.js\";\nimport React from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\nvar uniqueIDs = [//0\n{\n  type: \"character\",\n  name: \"Miss Scarlet\",\n  image: \"C1\"\n}, //1\n{\n  type: \"character\",\n  name: \"Mr. Green\",\n  image: \"C2\"\n}, //2\n{\n  type: \"character\",\n  name: \"Colonel Mustard\",\n  image: \"C3\"\n}, //3\n{\n  type: \"character\",\n  name: \"Prof. Plum\",\n  image: \"C4\"\n}, //4\n{\n  type: \"character\",\n  name: \"Mrs. Peacock\",\n  image: \"C5\"\n}, //5\n{\n  type: \"character\",\n  name: \"Mrs. White\",\n  image: \"C6\"\n}, //6\n{\n  type: \"weapon\",\n  name: \"Candlestick\",\n  image: \"W1\"\n}, //7\n{\n  type: \"weapon\",\n  name: \"Revolver\",\n  image: \"W4\"\n}, //8\n{\n  type: \"weapon\",\n  name: \"Knife\",\n  image: \"W2\"\n}, //9\n{\n  type: \"weapon\",\n  name: \"Pipe\",\n  image: \"W3\"\n}, //10\n{\n  type: \"weapon\",\n  name: \"Rope\",\n  image: \"W5\"\n}, //11\n{\n  type: \"weapon\",\n  name: \"Wrench\",\n  image: \"W6\"\n}, //12\n{\n  type: \"room\",\n  name: \"Study\",\n  roomId: 33,\n  gridX: 4,\n  gridY: 4\n}, //13\n{\n  type: \"room\",\n  name: \"Hall\",\n  roomId: 32,\n  gridX: 2,\n  gridY: 4\n}, //14\n{\n  type: \"room\",\n  name: \"Lounge\",\n  roomId: 31,\n  gridX: 0,\n  gridY: 4\n}, //15\n{\n  type: \"room\",\n  name: \"Dinning\",\n  roomId: 21,\n  gridX: 0,\n  gridY: 2\n}, //16\n{\n  type: \"room\",\n  name: \"Billiard\",\n  roomId: 22,\n  gridX: 2,\n  gridY: 2\n}, //17\n{\n  type: \"room\",\n  name: \"Library\",\n  roomId: 23,\n  gridX: 4,\n  gridY: 2\n}, //18\n{\n  type: \"room\",\n  name: \"Conservatory\",\n  roomId: 13,\n  gridX: 4,\n  gridY: 0\n}, //19\n{\n  type: \"room\",\n  name: \"Ballroom\",\n  roomId: 12,\n  gridX: 2,\n  gridY: 0\n}, //20\n{\n  type: \"room\",\n  name: \"Kitchen\",\n  roomId: 11,\n  gridX: 0,\n  gridY: 0\n}];\nvar startLocations = [{\n  currentX: 3,\n  currentY: 4\n}, {\n  currentX: 4,\n  currentY: 3\n}, {\n  currentX: 3,\n  currentY: 0\n}, {\n  currentX: 1,\n  currentY: 0\n}, {\n  currentX: 0,\n  currentY: 1\n}, {\n  currentX: 1,\n  currentY: 4\n}, {\n  currentX: 0,\n  currentY: 0\n}, {\n  currentX: 4,\n  currentY: 0\n}, {\n  currentX: 0,\n  currentY: 4\n}, {\n  currentX: 4,\n  currentY: 0\n}, {\n  currentX: 2,\n  currentY: 4\n}, {\n  currentX: 4,\n  currentY: 4\n}];\nvar startGrid = [[{\n  roomId: \"11\",\n  roomName: \"Kitchen\",\n  roomObjs: [\"6\"]\n}, {\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomObjs: [\"4\"]\n}, {\n  roomId: \"12\",\n  roomName: \"Ballroom\",\n  roomObjs: []\n}, {\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"13\",\n  roomName: \"Conservatory\",\n  roomAccess: [{\n    id: \"1213\",\n    x: 0,\n    y: 3\n  }, \"1323\", {\n    id: \"31\",\n    x: 4,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W3\"]\n}], [{\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"11\",\n    x: 0,\n    y: 0\n  }, {\n    id: \"21\",\n    x: 2,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"3\"],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"12\",\n    x: 0,\n    y: 2\n  }, {\n    id: \"22\",\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"13\",\n    x: 0,\n    y: 4\n  }, {\n    id: \"23\",\n    x: 2,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"5\"],\n  roomWeapons: []\n}], [{\n  roomId: \"21\",\n  roomName: \"Dinning Room\",\n  roomAccess: [{\n    id: \"1121\",\n    x: 1,\n    y: 0\n  }, {\n    id: \"2122\",\n    x: 2,\n    y: 1\n  }, {\n    id: \"2131\",\n    x: 3,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W4\"]\n}, {\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"22\",\n  roomName: \"Billiard Room\",\n  roomAccess: [{\n    id: \"2122\",\n    x: 2,\n    y: 1\n  }, {\n    id: \"1222\",\n    x: 1,\n    y: 2\n  }, {\n    id: \"2223\",\n    x: 2,\n    y: 3\n  }, {\n    id: \"2232\",\n    x: 3,\n    y: 2\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"23\",\n  roomName: \"Library\",\n  roomAccess: [{\n    id: \"2223\",\n    x: 2,\n    y: 3\n  }, {\n    id: \"1323\",\n    x: 1,\n    y: 4\n  }, {\n    id: \"2333\",\n    x: 3,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W5\"]\n}], [{\n  roomId: \"2131\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"21\",\n    x: 2,\n    y: 0\n  }, {\n    id: \"31\",\n    x: 4,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"2\"],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"2232\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomObjs: []\n}, {\n  roomId: \"2333\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"23\",\n    x: 2,\n    y: 4\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"0\"],\n  roomWeapons: []\n}], [{\n  roomId: \"31\",\n  roomName: \"Lounge\",\n  roomObjs: [\"7\"]\n}, {\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomObjs: []\n}, {\n  roomId: \"32\",\n  roomName: \"Hall\",\n  roomObjs: []\n}, {\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomObjs: [\"1\"]\n}, {\n  roomId: \"33\",\n  roomName: \"Study\",\n  roomObjs: [\"11\"]\n}]];\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character: -1,\n      cards: {},\n      turn: \"\",\n      // Gameboard grid\n      grid: startGrid,\n      // Tracks all player and weapon locations\n      locations: startLocations,\n      // Tracks current player location\n      currentX: 0,\n      currentY: 0,\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n\n      if (found) {\n        alert(\"Valid movement\"); //Send movement request with requested room\n\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({\n          movementTurn: false,\n          validOptions: []\n        });\n      } else {\n        alert(\"Not valid movement\");\n      }\n    } else {\n      alert(\"Not your movement turn\");\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n    var first = props.actions[0]; //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        console.log(\"Found movement broadcast\");\n\n        if (first.message.character_moved === true) {\n          //alert(\"Found char move\")\n          var index = Number(first.message.moved_character);\n          console.log(\"Found char move: \" + \" \" + index + \" \" + JSON.stringify(uniqueIDs[index]));\n          var player = uniqueIDs[index].image;\n          const cx = newLocations[player].currentX;\n          const cy = newLocations[player].currentY;\n          console.log(\"Found Char move: \" + player + \" \" + cx + \" \" + cy);\n          const nx = 4;\n          const ny = 4;\n          console.log(\"CharDerived: \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"CharDerived: \" + JSON.stringify(newGrid[nx][ny]));\n          var index = newGrid[cx][cy].roomPlayers.indexOf(JSON.stringify(player));\n          console.log(\"CharDerivedIndex: \" + index + \" \" + newGrid[cx][cy].roomPlayers.indexOf(player));\n          newGrid[cx][cy].roomPlayers.splice(index, 1); //Remove current player to old room\n\n          newGrid[nx][ny].roomPlayers.push(player); //Add current player to new room\n          //NEW TO UPDATE CURRENTX AND CURRENTY if currentplayer\n\n          newLocations[player].currentX = nx;\n          newLocations[player].currentY = ny;\n\n          if (player = props.player_id) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          } //console.log(\"CharDerived: \" + JSON.stringify(newGrid));\n\n\n          console.log(\"AfterCharDerived: \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"AfterCharDerived: \" + JSON.stringify(newGrid[nx][ny]));\n          console.log(\"AfterCharDerived: \" + JSON.stringify(newLocations));\n        }\n\n        if (first.message.weapon_moved === true) {\n          //alert(\"Found weapon move\")\n          var index = Number(first.message.moved_weapon);\n          console.log(\"Found Weap move: \" + JSON.stringify(uniqueIDs[index]));\n          var player = uniqueIDs[index].image;\n          const cx = newLocations[player].currentX;\n          const cy = newLocations[player].currentY;\n          console.log(\"Found Weap move: \" + player + \" \" + cx + \" \" + cy);\n          const nx = 4;\n          const ny = 4;\n          console.log(\"WeapDerived: \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"WeapDerived: \" + JSON.stringify(newGrid[nx][ny]));\n          var index = newGrid[cx][cy].roomWeapons.indexOf(player);\n          newGrid[cx][cy].roomWeapons.splice(index, 1); //Remove current player to old room\n\n          newGrid[nx][ny].roomWeapons.push(player); //Add current player to new room\n          //NEW TO UPDATE CURRENTX AND CURRENTY if currentplayer\n\n          newLocations[player].currentX = nx;\n          newLocations[player].currentY = ny;\n          console.log(\"WeapDerived: \" + JSON.stringify(newLocations));\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      character: props.character,\n      turn: props.turn,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions\n    };\n  }\n\n  provideLocationId() {\n    var cx = this.state.locations[\"C\" + this.props.character].currentX;\n    var cy = this.state.locations[\"C\" + this.props.character].currentY;\n    var result = \"0\"; //console.log(\"PLAYER: \" + this.props.player_id);\n    //console.log(\"PLAYER: x\" + cx + \" y\" + cy);\n\n    if (cx != -1 && cy != -1) {\n      result = this.state.grid[cx][cy].roomId;\n    } //console.log(\"RESULTS\" + result);\n\n\n    return result;\n  }\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\"\n    };\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 9\n        }\n      }, r.map((d, j) => {\n        return /*#__PURE__*/React.createElement(Room, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          },\n          contents: d,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }\n        });\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }\n    }, \"Player = \", this.props.player_id, \" | X =\", \" \", this.state.locations[\"C\" + this.props.character].currentX, \" | Y =\", \" \", this.state.locations[\"C\" + this.props.character].currentY), /*#__PURE__*/React.createElement(Box, {\n      actions: this.state.actions,\n      locationId: this.provideLocationId(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }\n    }, rows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default Gameboard;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Gameboard.js"],"names":["React","Room","Box","makeMovement","uniqueIDs","type","name","image","roomId","gridX","gridY","startLocations","currentX","currentY","startGrid","roomName","roomObjs","roomAccess","id","x","y","roomLimit","roomPlayers","roomWeapons","Gameboard","Component","constructor","props","state","actions","player_id","character","cards","turn","grid","locations","validOptions","movementTurn","handleOnClick","bind","dims","parseFloat","length","myArray","i","requestedLoc","found","JSON","stringify","location","index","alert","movement_id","setState","getDerivedStateFromProps","newcount","count","newLocations","newGrid","newCurrentX","newCurrentY","newmovementTurn","newvalidOptions","first","undefined","message_type","console","log","message","character_moved","Number","moved_character","player","cx","cy","nx","ny","indexOf","splice","push","weapon_moved","moved_weapon","valid_locations","playerX","playerY","provideLocationId","result","render","style","margin","width","height","backgroundColor","color","fontSize","tableLayout","rows","map","r","d","j","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Room } from \"./Room\";\nimport { Box } from \"./Box\";\nimport { makeMovement } from \"./ClientManager\";\n\nvar uniqueIDs = [\n  //0\n  { type: \"character\", name: \"Miss Scarlet\", image: \"C1\" },\n  //1\n  { type: \"character\", name: \"Mr. Green\", image: \"C2\" },\n  //2\n  { type: \"character\", name: \"Colonel Mustard\", image: \"C3\" },\n  //3\n  { type: \"character\", name: \"Prof. Plum\", image: \"C4\" },\n  //4\n  { type: \"character\", name: \"Mrs. Peacock\", image: \"C5\" },\n  //5\n  { type: \"character\", name: \"Mrs. White\", image: \"C6\" },\n  //6\n  { type: \"weapon\", name: \"Candlestick\", image: \"W1\" },\n  //7\n  { type: \"weapon\", name: \"Revolver\", image: \"W4\" },\n  //8\n  { type: \"weapon\", name: \"Knife\", image: \"W2\" },\n  //9\n  { type: \"weapon\", name: \"Pipe\", image: \"W3\" },\n  //10\n  { type: \"weapon\", name: \"Rope\", image: \"W5\" },\n  //11\n  { type: \"weapon\", name: \"Wrench\", image: \"W6\" },\n  //12\n  { type: \"room\", name: \"Study\", roomId: 33, gridX: 4, gridY: 4 },\n  //13\n  { type: \"room\", name: \"Hall\", roomId: 32, gridX: 2, gridY: 4 },\n  //14\n  { type: \"room\", name: \"Lounge\", roomId: 31, gridX: 0, gridY: 4 },\n  //15\n  { type: \"room\", name: \"Dinning\", roomId: 21, gridX: 0, gridY: 2 },\n  //16\n  { type: \"room\", name: \"Billiard\", roomId: 22, gridX: 2, gridY: 2 },\n  //17\n  { type: \"room\", name: \"Library\", roomId: 23, gridX: 4, gridY: 2 },\n  //18\n  { type: \"room\", name: \"Conservatory\", roomId: 13, gridX: 4, gridY: 0 },\n  //19\n  { type: \"room\", name: \"Ballroom\", roomId: 12, gridX: 2, gridY: 0 },\n  //20\n  { type: \"room\", name: \"Kitchen\", roomId: 11, gridX: 0, gridY: 0 },\n];\n\nvar startLocations = [\n  { \n    currentX: 3, \n    currentY: 4 },\n  {\n    currentX: 4,\n    currentY: 3,\n  },\n  {\n    currentX: 3,\n    currentY: 0,\n  },\n  {\n    currentX: 1,\n    currentY: 0,\n  },\n  {\n    currentX: 0,\n    currentY: 1,\n  },\n  {\n    currentX: 1,\n    currentY: 4,\n  },\n  {\n    currentX: 0,\n    currentY: 0,\n  },\n  {\n    currentX: 4,\n    currentY: 0,\n  },\n  {\n    currentX: 0,\n    currentY: 4,\n  },\n  {\n    currentX: 4,\n    currentY: 0,\n  },\n  {\n    currentX: 2,\n    currentY: 4,\n  },\n  {\n    currentX: 4,\n    currentY: 4,\n  },\n];\n\nvar startGrid = [\n  [\n    {\n      roomId: \"11\",\n      roomName: \"Kitchen\",\n      roomObjs: [\"6\"]\n    },\n    {\n      roomId: \"1112\",\n      roomName: \"Hallway\",\n      roomObjs: [\"4\"],\n    },\n    {\n      roomId: \"12\",\n      roomName: \"Ballroom\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"1213\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"13\",\n      roomName: \"Conservatory\",\n      roomAccess: [\n        { id: \"1213\", x: 0, y: 3 },\n        \"1323\",\n        { id: \"31\", x: 4, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W3\"],\n    },\n  ],\n  [\n    {\n      roomId: \"1121\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"11\", x: 0, y: 0 },\n        { id: \"21\", x: 2, y: 0 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"3\"],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"1222\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"12\", x: 0, y: 2 },\n        { id: \"22\", x: 2, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"1323\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"13\", x: 0, y: 4 },\n        { id: \"23\", x: 2, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"5\"],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"21\",\n      roomName: \"Dinning Room\",\n      roomAccess: [\n        { id: \"1121\", x: 1, y: 0 },\n        { id: \"2122\", x: 2, y: 1 },\n        { id: \"2131\", x: 3, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W4\"],\n    },\n    {\n      roomId: \"2122\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"22\",\n      roomName: \"Billiard Room\",\n      roomAccess: [\n        { id: \"2122\", x: 2, y: 1 },\n        { id: \"1222\", x: 1, y: 2 },\n        { id: \"2223\", x: 2, y: 3 },\n        { id: \"2232\", x: 3, y: 2 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2223\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"23\",\n      roomName: \"Library\",\n      roomAccess: [\n        { id: \"2223\", x: 2, y: 3 },\n        { id: \"1323\", x: 1, y: 4 },\n        { id: \"2333\", x: 3, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W5\"],\n    },\n  ],\n  [\n    {\n      roomId: \"2131\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"21\", x: 2, y: 0 },\n        { id: \"31\", x: 4, y: 0 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"2\"],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"2232\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"2333\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"23\", x: 2, y: 4 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"0\"],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"31\",\n      roomName: \"Lounge\",\n      roomObjs: [\"7\"],\n    },\n    {\n      roomId: \"3132\",\n      roomName: \"Hallway\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"32\",\n      roomName: \"Hall\",\n      roomObjs: [],\n    },\n    {\n      roomId: \"3233\",\n      roomName: \"Hallway\",\n      roomObjs: [\"1\"],\n    },\n    {\n      roomId: \"33\",\n      roomName: \"Study\",\n      roomObjs: [\"11\"],\n    },\n  ],\n];\n\nexport class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions,\n      player_id: -1,\n      character: -1,\n      cards: {},\n      turn: \"\",\n\n      // Gameboard grid\n      grid: startGrid,\n\n      // Tracks all player and weapon locations\n      locations: startLocations,\n\n      // Tracks current player location\n      currentX: 0,\n      currentY: 0,\n\n      // Used for movement turn\n      validOptions: [],\n      movementTurn: false,\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n\n    this.dims = [\n      parseFloat(500 / this.state.grid.length),\n      parseFloat(500 / this.state.grid[0].length),\n    ];\n  }\n\n  handleOnClick(x, y) {\n    if (this.state.movementTurn) {\n      //Check request against valid options from movement request\n      var myArray = this.state.validOptions;\n\n      for (let i = 0; i < myArray.length; i++) {\n        var requestedLoc = [x, y];\n        var found =\n          JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n        if (found) {\n          var index = i;\n          break;\n        }\n      }\n      if (found) {\n        alert(\"Valid movement\");\n\n        //Send movement request with requested room\n        makeMovement(\"true\", myArray[index].movement_id);\n        this.setState({ movementTurn: false, validOptions: [] });\n      } else {\n        alert(\"Not valid movement\");\n      }\n    } else {\n      alert(\"Not your movement turn\");\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(\"getDerivedStateFromProps\");\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n\n    var newcount = state.count + 1;\n    var newLocations = state.locations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n\n    var first = props.actions[0];\n    //console.log(\"getDerivedStateFromProps \" + JSON.stringify(first));\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        console.log(\"Found movement broadcast\");\n        if (first.message.character_moved === true) {\n          //alert(\"Found char move\")\n          var index = Number(first.message.moved_character);\n          console.log(\n            \"Found char move: \" +\n              \" \" +\n              index +\n              \" \" +\n              JSON.stringify(uniqueIDs[index])\n          );\n          var player = uniqueIDs[index].image;\n          const cx = newLocations[player].currentX;\n          const cy = newLocations[player].currentY;\n          console.log(\"Found Char move: \" + player + \" \" + cx + \" \" + cy);\n          const nx = 4;\n          const ny = 4;\n          console.log(\"CharDerived: \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"CharDerived: \" + JSON.stringify(newGrid[nx][ny]));\n\n          var index = newGrid[cx][cy].roomPlayers.indexOf(\n            JSON.stringify(player)\n          );\n          console.log(\n            \"CharDerivedIndex: \" +\n              index +\n              \" \" +\n              newGrid[cx][cy].roomPlayers.indexOf(player)\n          );\n          newGrid[cx][cy].roomPlayers.splice(index, 1); //Remove current player to old room\n          newGrid[nx][ny].roomPlayers.push(player); //Add current player to new room\n          //NEW TO UPDATE CURRENTX AND CURRENTY if currentplayer\n          newLocations[player].currentX = nx;\n          newLocations[player].currentY = ny;\n\n          if ((player = props.player_id)) {\n            newCurrentX = nx;\n            newCurrentY = ny;\n          }\n\n          //console.log(\"CharDerived: \" + JSON.stringify(newGrid));\n          console.log(\"AfterCharDerived: \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"AfterCharDerived: \" + JSON.stringify(newGrid[nx][ny]));\n          console.log(\"AfterCharDerived: \" + JSON.stringify(newLocations));\n        }\n\n        if (first.message.weapon_moved === true) {\n          //alert(\"Found weapon move\")\n          var index = Number(first.message.moved_weapon);\n          console.log(\"Found Weap move: \" + JSON.stringify(uniqueIDs[index]));\n          var player = uniqueIDs[index].image;\n          const cx = newLocations[player].currentX;\n          const cy = newLocations[player].currentY;\n          console.log(\"Found Weap move: \" + player + \" \" + cx + \" \" + cy);\n          const nx = 4;\n          const ny = 4;\n          console.log(\"WeapDerived: \" + JSON.stringify(newGrid[cx][cy]));\n          console.log(\"WeapDerived: \" + JSON.stringify(newGrid[nx][ny]));\n\n          var index = newGrid[cx][cy].roomWeapons.indexOf(player);\n          newGrid[cx][cy].roomWeapons.splice(index, 1); //Remove current player to old room\n          newGrid[nx][ny].roomWeapons.push(player); //Add current player to new room\n          //NEW TO UPDATE CURRENTX AND CURRENTY if currentplayer\n          newLocations[player].currentX = nx;\n          newLocations[player].currentY = ny;\n\n          console.log(\"WeapDerived: \" + JSON.stringify(newLocations));\n        }\n      } else if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      } else {\n        newmovementTurn = false;\n        newvalidOptions = [];\n      }\n    }\n\n    return {\n      character: props.character,\n      turn: props.turn,\n      cards: props.cards,\n      count: newcount,\n      grid: newGrid,\n      locations: newLocations,\n      playerX: newCurrentX,\n      playerY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions,\n    };\n  }\n\n  provideLocationId() {\n    var cx = this.state.locations[\"C\" + this.props.character].currentX;\n    var cy = this.state.locations[\"C\" + this.props.character].currentY;\n    var result = \"0\";\n\n    //console.log(\"PLAYER: \" + this.props.player_id);\n    //console.log(\"PLAYER: x\" + cx + \" y\" + cy);\n\n    if (cx != -1 && cy != -1) {\n      result = this.state.grid[cx][cy].roomId;\n    }\n    //console.log(\"RESULTS\" + result);\n    return result;\n  }\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\",\n    };\n\n    const rows = this.state.grid.map((r, i) => {\n      return (\n        <tr key={\"row_\" + i}>\n          {r.map((d, j) => {\n            return (\n              <Room\n                key={i + \"_\" + j}\n                dims={this.dims}\n                onClick={() => {\n                  this.handleOnClick(i, j);\n                }}\n                contents={d}\n              />\n            );\n          })}\n        </tr>\n      );\n    });\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <p>\n          Player = {this.props.player_id} | X ={\" \"}\n          {this.state.locations[\"C\" + this.props.character].currentX} | Y ={\" \"}\n          {this.state.locations[\"C\" + this.props.character].currentY}\n        </p>\n        <Box\n          actions={this.state.actions}\n          locationId={this.provideLocationId()}\n        />\n        <br />\n        <table cellSpacing=\"0\" id=\"table\" style={style}>\n          <tbody>{rows}</tbody>\n        </table>\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Gameboard;\n"]},"metadata":{},"sourceType":"module"}