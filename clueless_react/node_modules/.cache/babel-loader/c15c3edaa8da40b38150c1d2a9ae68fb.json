{"ast":null,"code":"var _jsxFileName = \"/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/UserInput.js\";\nimport React from \"react\";\n\nclass UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      response: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.makeSuggestion = this.makeSuggestion.bind(this); // Maybe add later?\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.value === \"\") {\n      alert(\"Don't forget to type an action!\");\n      return;\n    } // Notify User that their action was registered.\n\n\n    let userInput = this.state.value;\n    this.setState({\n      response: userInput\n    });\n    alert(\"Player action registered: \" + this.state.response); // Added for demonstration purposes:\n\n    console.log(\"User Input: \" + this.state.response);\n    this.parseMessage(this.state.response);\n    event.preventDefault();\n  }\n\n  makeSuggestion() {\n    const _this = this;\n\n    let jsonBody = '{\"Test\":\"Test\"}'; //console.log(jsonBody);\n\n    fetch(\"http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\", {\n      method: \"GET\",\n      withCredentials: true,\n      //credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      } //body: jsonBody,\n\n    }).then(response => response.json()).then(jsonResponse => {\n      console.log(\"Response: \" + JSON.stringify(jsonResponse));\n\n      _this.setState({\n        response: JSON.stringify(jsonResponse)\n      });\n    });\n    console.log(\"Response: \" + this.state.response);\n  }\n\n  parseMessage(playerInput) {\n    let parsedPlayerInput = playerInput.split(/\\s+/);\n    console.log(\"Parsed Input: \" + parsedPlayerInput);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      size: \"50\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Response: \", this.state.response));\n  }\n\n}\n\nexport default UserInput;","map":{"version":3,"sources":["/Users/sidneyjackson/Desktop/GitHub Projects/UnitedCoders/clueless_react/src/UserInput.js"],"names":["React","UserInput","Component","constructor","props","state","value","response","handleChange","bind","handleSubmit","makeSuggestion","event","setState","target","alert","userInput","console","log","parseMessage","preventDefault","_this","jsonBody","fetch","method","withCredentials","headers","then","json","jsonResponse","JSON","stringify","playerInput","parsedPlayerInput","split","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      response: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.makeSuggestion = this.makeSuggestion.bind(this); // Maybe add later?\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    if (this.state.value === \"\") {\n      alert(\"Don't forget to type an action!\");\n      return;\n    }\n\n    // Notify User that their action was registered.\n    let userInput = this.state.value;\n    this.setState({ response: userInput });\n    alert(\"Player action registered: \" + this.state.response);\n\n    // Added for demonstration purposes:\n    console.log(\"User Input: \" + this.state.response);\n    this.parseMessage(this.state.response);\n    event.preventDefault();\n  }\n\n  makeSuggestion() {\n    const _this = this;\n    let jsonBody = '{\"Test\":\"Test\"}';\n    //console.log(jsonBody);\n    fetch(\n      \"http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\",\n      {\n        method: \"GET\",\n        withCredentials: true,\n        //credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        //body: jsonBody,\n      }\n    )\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        console.log(\"Response: \" + JSON.stringify(jsonResponse));\n        _this.setState({\n          response: JSON.stringify(jsonResponse),\n        });\n      });\n    console.log(\"Response: \" + this.state.response);\n  }\n\n  parseMessage(playerInput) {\n    let parsedPlayerInput = playerInput.split(/\\s+/);\n    console.log(\"Parsed Input: \" + parsedPlayerInput);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            size=\"50\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <div>Response: {this.state.response}</div>\n      </React.Fragment>\n    );\n  }\n}\nexport default UserInput;\n"]},"metadata":{},"sourceType":"module"}