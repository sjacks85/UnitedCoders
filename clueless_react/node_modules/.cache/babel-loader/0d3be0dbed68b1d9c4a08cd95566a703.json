{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst pathExists = require('path-exists');\n\nconst pLocate = require('p-locate');\n\nmodule.exports = (iterable, options) => {\n  options = Object.assign({\n    cwd: process.cwd()\n  }, options);\n  return pLocate(iterable, el => pathExists(path.resolve(options.cwd, el)), options);\n};\n\nmodule.exports.sync = (iterable, options) => {\n  options = Object.assign({\n    cwd: process.cwd()\n  }, options);\n\n  for (const el of iterable) {\n    if (pathExists.sync(path.resolve(options.cwd, el))) {\n      return el;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/node_modules/locate-path/index.js"],"names":["path","require","pathExists","pLocate","module","exports","iterable","options","Object","assign","cwd","process","el","resolve","sync"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACvCA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR;AADkB,GAAd,EAEPH,OAFO,CAAV;AAIA,SAAOJ,OAAO,CAACG,QAAD,EAAWM,EAAE,IAAIV,UAAU,CAACF,IAAI,CAACa,OAAL,CAAaN,OAAO,CAACG,GAArB,EAA0BE,EAA1B,CAAD,CAA3B,EAA4DL,OAA5D,CAAd;AACA,CAND;;AAQAH,MAAM,CAACC,OAAP,CAAeS,IAAf,GAAsB,CAACR,QAAD,EAAWC,OAAX,KAAuB;AAC5CA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR;AADkB,GAAd,EAEPH,OAFO,CAAV;;AAIA,OAAK,MAAMK,EAAX,IAAiBN,QAAjB,EAA2B;AAC1B,QAAIJ,UAAU,CAACY,IAAX,CAAgBd,IAAI,CAACa,OAAL,CAAaN,OAAO,CAACG,GAArB,EAA0BE,EAA1B,CAAhB,CAAJ,EAAoD;AACnD,aAAOA,EAAP;AACA;AACD;AACD,CAVD","sourcesContent":["'use strict';\nconst path = require('path');\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nmodule.exports = (iterable, options) => {\n\toptions = Object.assign({\n\t\tcwd: process.cwd()\n\t}, options);\n\n\treturn pLocate(iterable, el => pathExists(path.resolve(options.cwd, el)), options);\n};\n\nmodule.exports.sync = (iterable, options) => {\n\toptions = Object.assign({\n\t\tcwd: process.cwd()\n\t}, options);\n\n\tfor (const el of iterable) {\n\t\tif (pathExists.sync(path.resolve(options.cwd, el))) {\n\t\t\treturn el;\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}