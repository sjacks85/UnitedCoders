{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"./Divider.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport PlayerHand from \"./PlayerHand\";\nimport { startClient, socket } from \"./ClientManager\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Store in the App, and passed into children as props\n      actions: [],\n      player_id: 0,\n      character_id: 0,\n      cards: [],\n      turn: \"Other Players Turn\",\n      currentLocationId: 0,\n      currentRoom: \"\"\n    };\n\n    this.onselectTest = string => {\n      console.log(\"TESTCALLBACK\" + string); //this.setState({language: langValue});\n    };\n\n    this.changeCurrentRoom = elem => {\n      console.log(\"TESTCALLBACKchangeCurrentRoom \" + elem);\n      this.setState({\n        currentRoom: elem\n      });\n      console.log(JSON.stringify(this.state));\n    };\n\n    this.changeCurrentLocationId = elem => {\n      console.log(\"TESTCALLBACKchangeCurrentLocationId \" + elem);\n      this.setState({\n        currentLocationId: elem\n      }); //this.setState({language: langValue});\n\n      console.log(JSON.stringify(this.state));\n    };\n  }\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", message => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n      this.setState({\n        actions: [message, ...this.state.actions]\n      });\n      var newTurn = this.state.turn;\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              //console.log(\"APP: \" + message.message.player_id)\n              //console.log(\"APP: \" + message.message.character)\n              //console.log(\"APP: \" + message.message.cards)\n              this.setState({\n                player_id: message.message.player_id,\n                character_id: message.message.character_id,\n                cards: message.message.cards\n              });\n            }\n          }\n        }\n      }\n\n      if (newTurn != \"Revoked\") {\n        if (message.message_type == 31) {\n          newTurn = \"Movement\";\n        } else if (message.message_type == 32) {\n          newTurn = \"Suggestion\";\n        } else if (message.message_type == 33) {\n          newTurn = \"Disprove\";\n        } else if (message.message_type == 34) {\n          newTurn = \"Accusation\";\n        } else if (message.message_type == 52) {\n          //Does 52 need to be send to everyone? To update their notecard\n          if (message.message.accusation_correct === false) {\n            newTurn = \"Revoked\";\n          }\n        } else if (message.message_type == 61) {\n          newTurn = \"End of Game\";\n        } else {\n          newTurn = \"Other Players Turn\";\n        }\n      }\n\n      this.setState({\n        turn: newTurn\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Gameboard\"), /*#__PURE__*/React.createElement(Gameboard, {\n      actions: this.state.actions,\n      player_id: this.state.player_id,\n      character_id: this.state.character_id,\n      cards: this.state.cards,\n      turn: this.state.turn,\n      changeCurrentLocationId: this.changeCurrentLocationId,\n      changeCurrentRoom: this.changeCurrentRoom,\n      onSelectTest: this.onselectTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/App.js"],"names":["React","Divider","Gameboard","PlayerHand","startClient","socket","NoteBook","MessageBoard","App","Component","constructor","props","state","actions","player_id","character_id","cards","turn","currentLocationId","currentRoom","onselectTest","string","console","log","changeCurrentRoom","elem","setState","JSON","stringify","changeCurrentLocationId","componentDidMount","window","location","port","on","message","newTurn","message_type","username","undefined","accusation_correct","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./Divider.css\";\nimport Divider from \"./Divider\";\nimport Gameboard from \"./Gameboard\";\nimport PlayerHand from \"./PlayerHand\";\nimport { startClient, socket } from \"./ClientManager\";\nimport NoteBook from \"./NoteBook\";\nimport MessageBoard from \"./MessageBoard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    // Store in the App, and passed into children as props\n    actions: [],\n    player_id: 0,\n    character_id: 0,\n    cards: [],\n    turn: \"Other Players Turn\",\n    currentLocationId: 0,\n    currentRoom: \"\",\n  };\n\n  componentDidMount() {\n    startClient(window.location.port);\n    socket.on(\"game\", (message) => {\n      console.log(\"GameMessage\" + JSON.stringify(message));\n\n      this.setState({ actions: [message, ...this.state.actions] });\n      var newTurn = this.state.turn;\n\n      if (message.message_type == 11) {\n        if (message.message.username != undefined) {\n          if (message.message.username != undefined) {\n            if (message.message.username == window.location.port) {\n              //console.log(\"APP: \" + message.message.player_id)\n              //console.log(\"APP: \" + message.message.character)\n              //console.log(\"APP: \" + message.message.cards)\n              this.setState({\n                player_id: message.message.player_id,\n                character_id: message.message.character_id,\n                cards: message.message.cards,\n              });\n            }\n          }\n        }\n      }\n\n      if (newTurn != \"Revoked\") {\n        if (message.message_type == 31) {\n          newTurn = \"Movement\";\n        } else if (message.message_type == 32) {\n          newTurn = \"Suggestion\";\n        } else if (message.message_type == 33) {\n          newTurn = \"Disprove\";\n        } else if (message.message_type == 34) {\n          newTurn = \"Accusation\";\n        } else if (message.message_type == 52) {\n          //Does 52 need to be send to everyone? To update their notecard\n          if (message.message.accusation_correct === false) {\n            newTurn = \"Revoked\";\n          }\n        } else if (message.message_type == 61) {\n          newTurn = \"End of Game\";\n        } else {\n          newTurn = \"Other Players Turn\";\n        }\n      }\n\n      this.setState({ turn: newTurn });\n    });\n  }\n\n  onselectTest = (string) => {\n    console.log(\"TESTCALLBACK\" + string);\n    //this.setState({language: langValue});\n  };\n\n  changeCurrentRoom = (elem) => {\n    console.log(\"TESTCALLBACKchangeCurrentRoom \" + elem);\n    this.setState({currentRoom: elem});\n    console.log(JSON.stringify(this.state))\n  };\n\n  changeCurrentLocationId = (elem) => {\n    console.log(\"TESTCALLBACKchangeCurrentLocationId \" + elem);\n    this.setState({currentLocationId: elem});\n    //this.setState({language: langValue});\n    console.log(JSON.stringify(this.state))\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Gameboard</h1>\n        <Gameboard\n                actions={this.state.actions}\n                player_id={this.state.player_id}\n                character_id={this.state.character_id}\n                cards={this.state.cards}\n                turn={this.state.turn}\n                changeCurrentLocationId={this.changeCurrentLocationId}\n                changeCurrentRoom={this.changeCurrentRoom}\n                onSelectTest={this.onselectTest}\n              />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}