{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/PlayerHand.js\";\nimport React from \"react\";\nimport CardMapper from \"./CardMapper\";\nimport \"./PlayerHand.css\";\n\nclass PlayerHand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: this.props.cards //[1, 2, 3, 4, 5], // Default. Can remove this once we know the cards are being populated.\n\n    };\n    this.updatePlayerHand = this.state.cards.map(card => {\n      CardMapper.generateIdMap();\n      var imgLocation = \"./CardImages/\" + CardMapper.getCardImgById(card);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: imgLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      })));\n    });\n    this.state = {\n      //cards: this.props.cards,\n      cards: [1, 2, 3, 4, 5, 6]\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"CARDS \" + JSON.stringify(state.props));\n    console.log(\"CARDS \" + JSON.stringify(state.cards));\n    var newassignedCards = state.assignedCards;\n    var newplayerHand = state.playerHand; //console.log(\"CARDS \" + state.assignedCards);\n    //console.log(\"CARDS \" + props.cards + \" \" + props.cards.length);\n\n    if (state.assignedCards == false && props.cards.length != 0) {\n      // console.log(\"ASSIGNMENT\");\n      var i;\n\n      for (i = 0; i < props.cards.length; i++) {\n        var index = Number(props.cards[i]);\n        newplayerHand[index].assigned = true; //console.log(\"CARD \" + props.cards[i])\n      }\n\n      newassignedCards = true;\n    }\n\n    var first = props.actions[0];\n    var newSuggestion = state.suggestion;\n\n    if (first != undefined) {\n      if (first.message_type == 33) {\n        newSuggestion = \"Suggestion: \" + uniqueIDs[first.message.suggested_character].name + \", \" + uniqueIDs[first.message.suggested_room].name + \", \" + uniqueIDs[first.message.suggested_weapon].name;\n        console.log(\"DISPROVE \" + newSuggestion);\n      }\n    }\n\n    return {\n      assignedCards: newassignedCards,\n      playerHand: newplayerHand,\n      suggestion: newSuggestion\n    };\n  }\n\n  displayPlayerHand() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"hs center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, this.updatePlayerHand);\n  }\n\n  render() {\n    console.log(\"PLAYERHAND\" + this.state.cards); //console.log(\"PLAYERHAND\"  + this.state.cards.length)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"playerHandFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"hs center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, this.updatePlayerHand));\n  }\n\n}\n\nexport default PlayerHand;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/PlayerHand.js"],"names":["React","CardMapper","PlayerHand","Component","constructor","props","state","cards","updatePlayerHand","map","card","generateIdMap","imgLocation","getCardImgById","getDerivedStateFromProps","console","log","JSON","stringify","newassignedCards","assignedCards","newplayerHand","playerHand","length","i","index","Number","assigned","first","actions","newSuggestion","suggestion","undefined","message_type","uniqueIDs","message","suggested_character","name","suggested_room","suggested_weapon","displayPlayerHand","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CardMapper from \"./CardMapper\";\nimport \"./PlayerHand.css\";\n\nclass PlayerHand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //cards: this.props.cards,\n      cards: [1, 2, 3, 4, 5, 6],\n    };\n  }\n\n  state = {\n    cards: this.props.cards,\n    //[1, 2, 3, 4, 5], // Default. Can remove this once we know the cards are being populated.\n  };\n\n  updatePlayerHand = this.state.cards.map((card) => {\n    CardMapper.generateIdMap();\n    var imgLocation = \"./CardImages/\" + CardMapper.getCardImgById(card);\n    return (\n      <li>\n        <div class=\"block\">\n          <img src={imgLocation} />\n        </div>\n      </li>\n    );\n  });\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"CARDS \" + JSON.stringify(state.props));\n    console.log(\"CARDS \" + JSON.stringify(state.cards));\n    var newassignedCards = state.assignedCards;\n    var newplayerHand = state.playerHand;\n\n    //console.log(\"CARDS \" + state.assignedCards);\n    //console.log(\"CARDS \" + props.cards + \" \" + props.cards.length);\n    if (state.assignedCards == false && props.cards.length != 0) {\n      // console.log(\"ASSIGNMENT\");\n      var i;\n      for (i = 0; i < props.cards.length; i++) {\n        var index = Number(props.cards[i]);\n        newplayerHand[index].assigned = true;\n        //console.log(\"CARD \" + props.cards[i])\n      }\n\n      newassignedCards = true;\n    }\n\n    var first = props.actions[0];\n    var newSuggestion = state.suggestion;\n    if (first != undefined) {\n      if (first.message_type == 33) {\n        newSuggestion =\n          \"Suggestion: \" +\n          uniqueIDs[first.message.suggested_character].name +\n          \", \" +\n          uniqueIDs[first.message.suggested_room].name +\n          \", \" +\n          uniqueIDs[first.message.suggested_weapon].name;\n        console.log(\"DISPROVE \" + newSuggestion);\n      }\n    }\n\n    return {\n      assignedCards: newassignedCards,\n      playerHand: newplayerHand,\n      suggestion: newSuggestion,\n    };\n  }\n\n  displayPlayerHand () {\n    return (\n      <ul class=\"hs center\">{this.updatePlayerHand}</ul>\n    )\n  }\n\n  render() {\n    console.log(\"PLAYERHAND\"  + this.state.cards)\n    //console.log(\"PLAYERHAND\"  + this.state.cards.length)\n    return (\n      <div class=\"playerHandFrame\">\n        <ul class=\"hs center\">{this.updatePlayerHand}</ul>\n      </div>\n    );\n  }\n}\n\nexport default PlayerHand;"]},"metadata":{},"sourceType":"module"}