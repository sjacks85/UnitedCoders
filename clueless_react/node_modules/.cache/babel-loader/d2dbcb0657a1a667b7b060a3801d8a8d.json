{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Divider.js\";\nimport React, { useState } from \"react\";\nimport './Divider.css';\nimport UserInput from './UserInput';\nimport Message from './Message';\nimport Cards from './Cards';\nimport Log from './Log';\nimport { addLog } from './Log';\nimport NumberList from './NumberList';\nimport MessageBoard from \"./MessageBoard\";\nlet array = [];\n\nfunction Stubbed_Messages() {\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum turn'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum move = hallway'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Plum suggestion = white, study, candlestick'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Scarlet turn'\n  });\n  array.unshift({\n    type: 'target',\n    message: 'Your turn'\n  });\n  array.unshift({\n    type: 'respond',\n    message: 'Move?'\n  });\n  array.unshift({\n    type: 'broadcast',\n    message: 'Scarlet move = Library'\n  });\n  array.unshift({\n    type: 'respond',\n    message: 'Suggestion?'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, array.map(elem => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, elem.type, \": \", elem.message)));\n} //   <div class=\"float-child\">\n//   <div class=\"green\">\n//     <h4>Message Board (new messages at top)</h4>\n//     {/* LOAD OR UNLOAD THE CLIENT */}\n//   <button onClick={() => setLoadClient(prevState => !prevState)}>\n//     STOP CLIENT\n//   </button>\n//   {/* SOCKET IO CLIENT*/}\n//   {loadClient ? <Message /> : null}\n//     <p>----------</p>\n//     <Log />\n//   </div>\n// </div>\n// Last Message <br></br>\n// ---------------\n// <Message />\n// <NumberList numbers={numbers} />\n\n\nconst numbers = [1, 2, 3, 4, 5];\n\nfunction Divider() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, \"Cards \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), \"-----------\", /*#__PURE__*/React.createElement(Cards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }), \"Message Board \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }), \"---------------\", /*#__PURE__*/React.createElement(MessageBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Game Info\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Characters: plum, scarlet, mustard, white, green, peacock\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 64\n    }\n  }), \"Rooms: study, hall, lounge, dinning, billiard, library, conservatory, ballroom, kitchen\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 94\n    }\n  }), \"Weapons: candlestick, revolver, knife, pipe, rope, wrench\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 64\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), \"Movement: yes/no, [hallway, room, secret]\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 48\n    }\n  }), \"Suggestion: character, room, weapon\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 42\n    }\n  }), \"Accusation: yes/no, [character, room, weapon]\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 52\n    }\n  }), \"Disprove: yes/no, card\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(UserInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default Divider;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Divider.js"],"names":["React","useState","UserInput","Message","Cards","Log","addLog","NumberList","MessageBoard","array","Stubbed_Messages","unshift","type","message","map","elem","numbers","Divider"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport './Divider.css';\nimport UserInput from './UserInput';\nimport Message from './Message';\nimport Cards from './Cards';\nimport Log from './Log';\nimport { addLog } from './Log';\nimport NumberList from './NumberList'\nimport MessageBoard from \"./MessageBoard\";\n\n  let array = [];\n  function Stubbed_Messages() {\n\n    array.unshift({ type: 'broadcast', message: 'Plum turn'})\n    array.unshift({ type: 'broadcast', message: 'Plum move = hallway'})\n    array.unshift({ type: 'broadcast', message: 'Plum suggestion = white, study, candlestick'})\n    array.unshift({ type: 'broadcast', message: 'Scarlet turn'})\n    array.unshift({ type: 'target', message: 'Your turn'})\n    array.unshift({ type: 'respond', message: 'Move?'})\n    array.unshift({ type: 'broadcast', message: 'Scarlet move = Library'})\n    array.unshift({ type: 'respond', message: 'Suggestion?'})\n\n    return (\n      <div>\n        {array.map(elem => (\n          <p>{elem.type}: {elem.message}</p>\n        ))}\n      </div>\n    );\n  }\n\n//   <div class=\"float-child\">\n//   <div class=\"green\">\n//     <h4>Message Board (new messages at top)</h4>\n//     {/* LOAD OR UNLOAD THE CLIENT */}\n//   <button onClick={() => setLoadClient(prevState => !prevState)}>\n//     STOP CLIENT\n//   </button>\n//   {/* SOCKET IO CLIENT*/}\n//   {loadClient ? <Message /> : null}\n//     <p>----------</p>\n//     <Log />\n//   </div>\n// </div>\n\n// Last Message <br></br>\n// ---------------\n// <Message />\n\n// <NumberList numbers={numbers} />\nconst numbers = [1, 2, 3, 4, 5];\n\nfunction Divider() {\n\n  return (\n    <div class=\"float-container\">\n\n    <div class=\"float-child\">\n      <div class=\"green\">\n       <p>Cards <br></br>\n       -----------\n       <Cards />\n       <br></br>\n        Message Board <br></br>\n          ---------------\n       <MessageBoard />\n       </p>\n      </div>\n    </div>\n\n    \n    <div class=\"float-child\">\n      <div class=\"blue\">\n      <h4>Game Info</h4>\n      <p>\n      Characters: plum, scarlet, mustard, white, green, peacock<br></br>\n      Rooms: study, hall, lounge, dinning, billiard, library, conservatory, ballroom, kitchen<br></br>\n      Weapons: candlestick, revolver, knife, pipe, rope, wrench<br></br>\n      <br></br>\n      Movement: yes/no, [hallway, room, secret]<br></br>\n      Suggestion: character, room, weapon<br></br>\n      Accusation: yes/no, [character, room, weapon]<br></br>\n      Disprove: yes/no, card<br></br>\n        </p>\n       <h4>User Input</h4>\n      <UserInput />\n      </div>\n    </div>\n    \n    </div>\n\n  );\n}\n\nexport default Divider;"]},"metadata":{},"sourceType":"module"}