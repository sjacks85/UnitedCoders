{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/MapExample.js\";\n// import React from \"react\";\n// import \"./styles.css\";\n// import { ImageMap } from \"@qiuz/react-image-map\";\n// import { AreaType } from \"./AreaType\";\n// const onMapClick = (area: AreaType, index: number) => {\n//   const tip = `click map${area.href || index + 1}`;\n//   console.log(tip);\n//   alert(tip);\n// };\n// // in hooks\n// export default function Example() {\n//   const img =\n//     \"https://qiuziz.github.io/react-image-map/static/media/example.3373acbe.png\";\n//   const mapArea = [\n//     { left: \"0%\", top: \"6%\", height: \"12%\", width: \"33%\" },\n//     { left: \"10%\", top: \"6%\", height: \"12%\", width: \"33%\" }\n//   ];\n//   const ImageMapComponent = React.useMemo(\n//     () => (s\n//       <ImageMap\n//         className=\"usage-map\"\n//         src={img}\n//         map={mapArea}\n//         onMapClick={onMapClick}\n//       />\n//     ),\n//     [mapArea, img]\n//   );\n//   return <div>{ImageMapComponent}</div>;\n//   }\nimport React from \"react\";\nimport ImageMapper from 'react-image-mapper';\n\nclass MapExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: []\n    };\n    this.state = {\n      actions: this.props.actions\n    };\n  }\n\n  render() {\n    //console.log('MessageState:' + this.state.actions)\n    //console.log('MessageProps:' + this.props.actions)\n    const URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\";\n    const MAP = {\n      name: \"my-map\",\n      areas: [{\n        name: \"1\",\n        shape: \"poly\",\n        coords: [25, 33, 27, 300, 128, 240, 128, 94],\n        preFillColor: \"green\",\n        fillColor: \"blue\"\n      }, {\n        name: \"2\",\n        shape: \"poly\",\n        coords: [219, 118, 220, 210, 283, 210, 284, 119],\n        preFillColor: \"pink\"\n      }, {\n        name: \"3\",\n        shape: \"poly\",\n        coords: [381, 241, 383, 94, 462, 53, 457, 282],\n        fillColor: \"yellow\"\n      }, {\n        name: \"4\",\n        shape: \"poly\",\n        coords: [245, 285, 290, 285, 274, 239, 249, 238],\n        preFillColor: \"red\"\n      }, {\n        name: \"5\",\n        shape: \"circle\",\n        coords: [170, 100, 25]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(ImageMapper, {\n      src: URL,\n      map: MAP,\n      width: 500,\n      onLoad: () => this.load(),\n      onClick: area => this.clicked(area),\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onMouseMove: (area, _, evt) => this.moveOnArea(area, evt),\n      onImageClick: evt => this.clickedOutside(evt),\n      onImageMouseMove: evt => this.moveOnImage(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }), this.state.hoveredArea && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: { ...this.getTipPosition(this.state.hoveredArea)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, this.state.hoveredArea && this.state.hoveredArea.name));\n  }\n\n}\n\nexport default MapExample;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/MapExample.js"],"names":["React","ImageMapper","MapExample","Component","constructor","props","state","actions","render","URL","MAP","name","areas","shape","coords","preFillColor","fillColor","load","area","clicked","enterArea","leaveArea","_","evt","moveOnArea","clickedOutside","moveOnImage","hoveredArea","getTipPosition"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import \"./styles.css\";\n\n// import { ImageMap } from \"@qiuz/react-image-map\";\n// import { AreaType } from \"./AreaType\";\n\n// const onMapClick = (area: AreaType, index: number) => {\n//   const tip = `click map${area.href || index + 1}`;\n//   console.log(tip);\n//   alert(tip);\n// };\n\n// // in hooks\n// export default function Example() {\n//   const img =\n//     \"https://qiuziz.github.io/react-image-map/static/media/example.3373acbe.png\";\n\n//   const mapArea = [\n//     { left: \"0%\", top: \"6%\", height: \"12%\", width: \"33%\" },\n//     { left: \"10%\", top: \"6%\", height: \"12%\", width: \"33%\" }\n//   ];\n//   const ImageMapComponent = React.useMemo(\n//     () => (s\n//       <ImageMap\n//         className=\"usage-map\"\n//         src={img}\n//         map={mapArea}\n//         onMapClick={onMapClick}\n//       />\n//     ),\n//     [mapArea, img]\n//   );\n\n//   return <div>{ImageMapComponent}</div>;\n//   }\n\nimport React from \"react\";\nimport ImageMapper from 'react-image-mapper';\n\n  class MapExample extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        actions: this.props.actions\n      };\n    }\n    state = {\n      actions: []\n    };\n  \n  render() {\n    //console.log('MessageState:' + this.state.actions)\n    //console.log('MessageProps:' + this.props.actions)\n  \n    const URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\"\n  const MAP = {\n    name: \"my-map\",\n    areas: [\n     { name: \"1\", shape: \"poly\", coords: [25,33,27,300,128,240,128,94], preFillColor: \"green\", fillColor: \"blue\"  },\n      { name: \"2\", shape: \"poly\", coords: [219,118,220,210,283,210,284,119], preFillColor: \"pink\"  },\n      { name: \"3\", shape: \"poly\", coords: [381,241,383,94,462,53,457,282], fillColor: \"yellow\"  },\n      { name: \"4\", shape: \"poly\", coords: [245,285,290,285,274,239,249,238], preFillColor: \"red\"  },\n      { name: \"5\", shape: \"circle\", coords: [170, 100, 25 ] },\n    ]\n  }\n\n    return (\n  <div className=\"container\">\n    <ImageMapper src={URL} map={MAP} width={500}\n    \tonLoad={() => this.load()}\n    \tonClick={area => this.clicked(area)}\n    \tonMouseEnter={area => this.enterArea(area)}\n    \tonMouseLeave={area => this.leaveArea(area)}\n    \tonMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\n    \tonImageClick={evt => this.clickedOutside(evt)}\n    \tonImageMouseMove={evt => this.moveOnImage(evt)}\n    />\n    {\n    \tthis.state.hoveredArea &&\n    \t<span className=\"tooltip\"\n    \t    style={{ ...this.getTipPosition(this.state.hoveredArea)}}>\n    \t\t{ this.state.hoveredArea && this.state.hoveredArea.name}\n    \t</span>\n    }\n</div>\n    );\n  }\n  }\n  \n  export default MapExample;"]},"metadata":{},"sourceType":"module"}