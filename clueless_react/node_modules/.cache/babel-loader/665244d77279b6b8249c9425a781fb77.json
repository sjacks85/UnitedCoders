{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/TicTac.js\";\nimport React from \"react\";\nimport { Square } from \"./Square\";\nimport memoize from \"memoize-one\";\nimport { makeMovement } from './ClientManager';\nvar roomCode = [\"11\", \"12\", \"13\", \"21\", \"22\", \"23\", \"31\", \"32\", \"33\", \"1112\", \"1213\", \"1121\", \"1222\", \"1323\", \"2122\", \"2223\", \"2131\", \"2232\", \"2333\", \"3132\", \"3233\"];\nvar startXY = {\n  \"P0\": {\n    startX: -1,\n    startY: -1\n  },\n  \"P1\": {\n    startX: 3,\n    startY: 4\n  },\n  \"P2\": {\n    startX: 4,\n    startY: 3\n  },\n  \"P3\": {\n    startX: 3,\n    startY: 0\n  },\n  \"P4\": {\n    startX: 1,\n    startY: 0\n  },\n  \"P5\": {\n    startX: 0,\n    startY: 1\n  },\n  \"P6\": {\n    startX: 1,\n    startY: 4\n  }\n}; //All valid rooms and hallways to move in (based on player's current location). Sequence is important - Please don't change them.\n\nvar roomAccess = [[{\n  roomId: \"11\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1112\",\n    x: 0,\n    y: 1\n  }, {\n    id: \"1121\",\n    x: 1,\n    y: 0\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W1\"]\n}, {\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"11\",\n    x: 0,\n    y: 0\n  }, {\n    id: \"12\",\n    x: 0,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"P5\"],\n  roomWeapons: []\n}, {\n  roomId: \"12\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1112\",\n    x: 0,\n    y: 1\n  }, {\n    id: \"1222\",\n    x: 3,\n    y: 3\n  }, {\n    id: \"1213\",\n    x: 0,\n    y: 3\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"12\",\n    x: 0,\n    y: 2\n  }, {\n    id: \"13\",\n    x: 0,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"13\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1213\",\n    x: 0,\n    y: 3\n  }, \"1323\", {\n    id: \"31\",\n    x: 4,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W2\"]\n}], [{\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"11\",\n    x: 0,\n    y: 0\n  }, {\n    id: \"21\",\n    x: 2,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"P4\"],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"12\",\n    x: 0,\n    y: 2\n  }, {\n    id: \"22\",\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"13\",\n    x: 0,\n    y: 4\n  }, {\n    id: \"23\",\n    x: 2,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"P6\"],\n  roomWeapons: []\n}], [{\n  roomId: \"21\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"1121\",\n    x: 1,\n    y: 0\n  }, {\n    id: \"2122\",\n    x: 2,\n    y: 1\n  }, {\n    id: \"2131\",\n    x: 3,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"21\",\n    x: 2,\n    y: 0\n  }, {\n    id: \"22\",\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"22\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"2122\",\n    x: 2,\n    y: 1\n  }, {\n    id: \"1222\",\n    x: 1,\n    y: 2\n  }, {\n    id: \"2223\",\n    x: 2,\n    y: 3\n  }, {\n    id: \"2232\",\n    x: 3,\n    y: 2\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W3\"]\n}, {\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"22\",\n    x: 2,\n    y: 2\n  }, {\n    id: \"23\",\n    x: 2,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"23\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"2223\",\n    x: 2,\n    y: 3\n  }, {\n    id: \"1323\",\n    x: 1,\n    y: 4\n  }, {\n    id: \"2333\",\n    x: 3,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W4\"]\n}], [{\n  roomId: \"2131\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"21\",\n    x: 2,\n    y: 0\n  }, {\n    id: \"31\",\n    x: 4,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"P3\"],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2232\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"22\",\n    x: 2,\n    y: 2\n  }, {\n    id: \"32\",\n    x: 4,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2333\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"23\",\n    x: 2,\n    y: 4\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"P1\"],\n  roomWeapons: []\n}], [{\n  roomId: \"31\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"2131\",\n    x: 3,\n    y: 0\n  }, {\n    id: \"3132\",\n    x: 4,\n    y: 1\n  }, {\n    id: \"13\",\n    x: 0,\n    y: 4\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W5\"]\n}, {\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"31\",\n    x: 4,\n    y: 0\n  }, {\n    id: \"32\",\n    x: 4,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"32\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"3132\",\n    x: 4,\n    y: 1\n  }, {\n    id: \"2232\",\n    x: 3,\n    y: 2\n  }, {\n    id: \"3233\",\n    x: 4,\n    y: 3\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: [\"W6\"]\n}, {\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: \"32\",\n    x: 4,\n    y: 2\n  }, {\n    id: \"33\",\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [\"P2\"],\n  roomWeapons: []\n}, {\n  roomId: \"33\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: \"3233\",\n    x: 4,\n    y: 3\n  }, {\n    id: \"2233\",\n    x: 3,\n    y: 4\n  }, {\n    id: \"11\",\n    x: 0,\n    y: 0\n  }],\n  roomLimit: -1,\n  // No limit\n  roomPlayers: [],\n  roomWeapons: []\n}]];\nexport class TicTac extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerLocations: startXY\n    };\n    this.filter = memoize(list => list.filter(item => item.message_type == 31));\n    this.state = {\n      dim: 3,\n      count: 0,\n      // Gameboard grid\n      grid: roomAccess,\n      // Stores players current locID\n      players: [\"2333\", //Miss Scarlet\n      \"3233\", //Mr. Green\n      \"2131\", //Colonel Mustard\n      \"1121\", //Prof. Plum\n      \"1112\", //Mrs. Peacock\n      \"1323\" //Mrs. White\n      ],\n      playerLocations: startXY,\n      // Stores weapons current locID\n      weapons: [\"11\", \"13\", \"22\", \"23\", \"31\", \"32\"],\n      currentPlayer: this.props.player_id,\n      currentPlayerId: this.props.player_id,\n      currentX: 0,\n      currentY: 0,\n      currentPlayer: this.props.player_id,\n      validOptions: [],\n      movementTurn: false\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.noMovementClick = this.noMovementClick.bind(this);\n    this.suggestionClicked = this.suggestionClicked.bind(this);\n    this.accusationClicked = this.accusationClicked.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  }\n\n  suggestionClicked(a, b) {\n    //alert(a);\n    //alert(b);\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY; //alert(JSON.stringify(this.state.grid[cx][cy]));\n    //alert(this.state.grid[cx][cy].roomName);\n\n    var roomName = \"\";\n\n    switch (this.state.grid[cx][cy].roomId) {\n      case \"11\":\n        roomName = \"kitchen\";\n        break;\n\n      case \"12\":\n        roomName = \"ballroom\";\n        break;\n\n      case \"13\":\n        roomName = \"conservatory\";\n        break;\n\n      case \"21\":\n        roomName = \"dinning\";\n        break;\n\n      case \"22\":\n        roomName = \"hall\";\n        break;\n\n      case \"23\":\n        roomName = \"billiard\";\n        break;\n\n      case \"31\":\n        roomName = \"library\";\n        break;\n\n      case \"32\":\n        roomName = \"study\";\n        break;\n\n      case \"33\":\n        roomName = \"lounge\";\n        break;\n\n      default:\n        alert('You need to be in a room!');\n        break;\n    }\n\n    if (roomName == \"\") return;\n    var playerInput = \"You are Suggesting : \" + roomName + \" \" + a + \" \" + b;\n    alert(playerInput); //this.setState({ inputs : [playerInput, ...this.state.inputs]})\n\n    makeSuggestion(roomName, a, b);\n  }\n\n  accusationClicked(a, b) {\n    //alert(a);\n    //alert(b);\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY; //alert(JSON.stringify(this.state.grid[cx][cy]));\n    //alert(this.state.grid[cx][cy].roomName);\n\n    var roomName = \"\";\n\n    switch (this.state.grid[cx][cy].roomId) {\n      case \"11\":\n        roomName = \"kitchen\";\n        break;\n\n      case \"12\":\n        roomName = \"ballroom\";\n        break;\n\n      case \"13\":\n        roomName = \"conservatory\";\n        break;\n\n      case \"21\":\n        roomName = \"dinning\";\n        break;\n\n      case \"22\":\n        roomName = \"hall\";\n        break;\n\n      case \"23\":\n        roomName = \"billiard\";\n        break;\n\n      case \"31\":\n        roomName = \"library\";\n        break;\n\n      case \"32\":\n        roomName = \"study\";\n        break;\n\n      case \"33\":\n        roomName = \"lounge\";\n        break;\n\n      default:\n        alert('You need to be in a room!');\n        break;\n    }\n\n    if (roomName == \"\") return;\n    var playerInput = \"Your Accusation : \" + roomName + \" \" + a + \" \" + b;\n    alert(playerInput); //this.setState({ inputs : [playerInput, ...this.state.inputs]})\n\n    makeAccusation(roomName, a, b);\n  }\n\n  moveCurrentPlayer(x, y) {\n    console.log(\"moveCurrentplayer\");\n    var g = this.state.grid;\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY;\n    var index = g[cx][cy].roomPlayers.indexOf(this.props.player_id);\n    g[cx][cy].roomPlayers.splice(index, 1); //Remove current player to old room\n\n    g[x][y].roomPlayers.push(this.props.player_id); //Add current player to new room\n\n    this.setState({\n      grid: g,\n      currentX: x,\n      currentY: y\n    });\n    var s = this.state.playerLocations;\n    s[this.props.player_id].startX = x;\n    s[this.props.player_id].startY = y;\n    this.setState({\n      playerLocations: s\n    }); //const cx = this.state.playerLocations[this.props.player_id].startX;\n    //const cy = this.state.playerLocations[this.props.player_id].startY;\n    //console.log(\"After:\" + this.state.grid[x][y].roomPlayers);\n    // console.log(\"moveCurrentplayer\");\n    // var g = this.state.grid;\n    // var index = g[this.state.currentX][this.state.currentY].roomPlayers.indexOf(this.state.currentPlayer)\n    // g[this.state.currentX][this.state.currentY].roomPlayers.splice(index, 1) //Remove current player to old room\n    // g[x][y].roomPlayers.push(this.state.currentPlayer) //Add current player to new room\n    // this.setState({grid: g, currentX: x, currentY: y})\n  }\n\n  validateMove(x, y) {\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY;\n    const currentRoom = this.state.grid[cx][cy];\n    const requestedRoom = this.state.grid[x][y]; // Validate move\n\n    for (var i = 0; i < currentRoom.roomAccess.length; i++) {\n      //Valid room from current position\n      //console.log(JSON.stringify(currentRoom.roomAccess[i]));\n      if (currentRoom.roomAccess[i].x == x && currentRoom.roomAccess[i].y == y) {\n        //console.log(\"match\")\n        //Room with no max\n        if (requestedRoom.roomLimit == -1) {\n          console.log(\"room with no max\");\n          return true;\n        } //Picked empty spot\n\n\n        if (requestedRoom.roomLimit == 0) {\n          console.log(\"empty space\");\n          return false;\n        } // Check limit, 1 = hallway with 1 max\n\n\n        if (requestedRoom.roomLimit == 1 && requestedRoom.roomPlayers.length == 0) {\n          console.log(\"hallway not blocked\");\n          return true;\n        } else {\n          console.log(\"hallway blocked\");\n          return false;\n        }\n      } //console.log(\"no match\")\n\n    }\n\n    return false;\n  } // {\"game_id\":0,\"player_id\":1,\"message_type\":31,\"message\":\n  // {\"movement_required\":true,\"movement_possible\":true,\"valid_locations\":\n  // [{\"movement_id\":1,\"location\":[0,0]},{\"movement_id\":2,\"location\":[0,1]},\n  // {\"movement_id\":3,\"location\":[0,2]},{\"movement_id\":4,\"location\":[0,3]},\n  // {\"movement_id\":5,\"location\":[0,4]},{\"movement_id\":6,\"location\":[1,0]},\n  // {\"movement_id\":7,\"location\":[1,1]},{\"movement_id\":8,\"location\":[1,2]},\n  // {\"movement_id\":9,\"location\":[1,3]},{\"movement_id\":10,\"location\":[1,4]},\n  // {\"movement_id\":11,\"location\":[2,0]},{\"movement_id\":12,\"location\":[2,1]},\n  // {\"movement_id\":13,\"location\":[2,2]},{\"movement_id\":14,\"location\":[2,3]},\n  // {\"movement_id\":15,\"location\":[2,4]},{\"movement_id\":16,\"location\":[3,0]},\n  // {\"movement_id\":17,\"location\":[3,1]},{\"movement_id\":18,\"location\":[3,2]},\n  // {\"movement_id\":19,\"location\":[3,3]},{\"movement_id\":20,\"location\":[3,4]},\n  // {\"movement_id\":21,\"location\":[4,0]},{\"movement_id\":22,\"location\":[4,1]},\n  // {\"movement_id\":23,\"location\":[4,2]},{\"movement_id\":24,\"location\":[4,3]},\n  // {\"movement_id\":25,\"location\":[4,4]}]}}\n\n\n  handleOnClick(x, y) {\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY;\n    const currentRoom = this.state.grid[cx][cy];\n    const requestedRoom = this.state.grid[x][y];\n    console.log(\"TicTac current x=\" + cx + \" y=\" + cy);\n    console.log(\"TicTac currentroom\" + JSON.stringify(currentRoom));\n    console.log(\"TicTac requested x=\" + x + \" y=\" + y + \" \");\n    console.log(\"TicTac requestedroom\" + JSON.stringify(requestedRoom)); // Need to store current player, with location to base valid movements on\n\n    if (this.state.movementTurn) {\n      //Check against array\n      var myArray = this.state.validOptions; //console.log(\"ValidOptions: \" + JSON.stringify(this.state.validOptions))\n\n      for (let i = 0; i < myArray.length; i++) {\n        //console.log(\"Array: \" + JSON.stringify(myArray[i]))\n        console.log(\"Location: \" + myArray[i].location);\n        var requestedLoc = [x, y];\n        console.log(\"Requested Location: \" + requestedLoc); //var found = requestedLoc = myArray[i].location\n        //var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location)\n        //console.log(\"Found=\" + found)\n\n        var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location);\n\n        if (found) {\n          break;\n        }\n      }\n\n      if (found) {\n        alert(\"Valid movement\"); //Send movement request with requested room\n\n        makeMovement(\"true\", [x, y]);\n        this.setState({\n          movementTurn: false,\n          validOptions: []\n        });\n      } else {\n        alert(\"Not valid movement\");\n      }\n    } else {\n      alert(\"Not your movement turn\");\n    } // const valid = this.validateMove(x, y)\n    // if (valid) {\n    //   alert(\"valid movement\")\n    //   //this.moveCurrentPlayer(x, y);\n    // } else {\n    //   alert(\"not valid movement\")\n    // }\n\n  }\n\n  noMovementClick() {\n    makeMovement(\"false\", [-1, -1]);\n    this.setState({\n      movementTurn: false,\n      validOptions: []\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"getDerivedStateFromProps\"); //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n\n    var newcount = state.count + 1;\n    var newplayerLocations = state.playerLocations;\n    var newGrid = state.grid;\n    var newCurrentX = state.currentX;\n    var newCurrentY = state.currentY;\n    var newmovementTurn = state.movementTurn;\n    var newvalidOptions = state.validOptions;\n    var first = props.actions[0];\n    console.log(JSON.stringify(first));\n\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        console.log(\"Found movement broadcast:\" + first.message.character_moved + \" \" + first.message.moved_character);\n        var player = \"P\" + first.message.moved_character;\n        const cx = newplayerLocations[player].startX;\n        const cy = newplayerLocations[player].startY;\n        const nx = 4;\n        const ny = 4;\n        console.log(\"Derived: \" + JSON.stringify(newGrid[cx][cy]));\n        console.log(\"Derived: \" + JSON.stringify(newGrid[nx][ny]));\n        var index = newGrid[cx][cy].roomPlayers.indexOf(player);\n        newGrid[cx][cy].roomPlayers.splice(index, 1); //Remove current player to old room\n\n        newGrid[nx][ny].roomPlayers.push(player); //Add current player to new room\n        //NEW TO UPDATE CURRENTX AND CURRENTY if currentplayer\n\n        newplayerLocations[player].startX = nx;\n        newplayerLocations[player].startX = ny;\n\n        if (player = props.player_id) {\n          newCurrentX = nx;\n          newCurrentY = ny;\n        }\n\n        console.log(\"Derived: \" + player);\n        console.log(\"Derived: \" + props.player_id);\n        console.log(\"Derived: \" + JSON.stringify(newGrid));\n        console.log(\"Derived: \" + JSON.stringify(newplayerLocations)); // console.log(\"Player location state:\" + JSON.stringify(state.playerLocations))\n        // console.log(\"Player location:\" + JSON.stringify(state.playerLocations[player]))\n        // newplayerLocations[player].startX = 5\n        // newplayerLocations[player].startY = 5\n        // console.log(\"Player new location:\" + JSON.stringify(newplayerLocations[player]))\n        // console.log(\"Moving P1 to 11\")\n        //var newplayerLocations = state.playerLocations\n        // newplayerLocations[player].startX = 1\n        // newplayerLocations[player].startY = 1\n        // console.log(\"Player new location:\" + JSON.stringify(newplayerLocations[player]))\n      }\n\n      if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      }\n    }\n\n    return {\n      count: newcount,\n      grid: newGrid,\n      playerLocations: newplayerLocations,\n      currentX: newCurrentX,\n      currentY: newCurrentY,\n      movementTurn: newmovementTurn,\n      validOptions: newvalidOptions\n    }; // if (props.url !== state.prevUrl) {\n    //   return {\n    //     isLoading: true,\n    //     prevUrl: props.url\n    //   };\n    // }\n\n    return null;\n  }\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\"\n    }; //var checkPlayer = this.findTurn(this.props.actions);\n    //console.log(this.state.grid);\n\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 9\n        }\n      }, r.map((d, j) => {\n        //console.log(\"building\");\n        return /*#__PURE__*/React.createElement(Square, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          } //contents={d==\"+\"?\" \":d}\n          ,\n          contents: d,\n          name: \"Austin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }\n        });\n      }));\n    }); //console.log(\"Render\");\n    //console.log(\"Render:\" + JSON.stringify(this.state))\n    //console.log(\"Render:\" + this.state.active)\n    //console.log(\"TicTac: props playerid = \" + this.props.player_id)\n    //var test = this.props.player_id;\n    //console.log(\"TicTac: test playerid = \" + test)\n    //console.log(\"TicTac: state playerid = \" + this.state.currentPlayerId)\n    //console.log(\"TicTac:\" + JSON.stringify(startXY[\"P1\"]))\n    //this.findCurrentPlayer()\n    //console.log(\"TicTac\" + this.state.currentPlayer);\n    // const cx = this.state.playerLocations[this.props.player_id].startX;\n    // const cy = this.state.playerLocations[this.props.player_id].startY;\n    // console.log(cx + \" \" + cy)\n    //const filteredList = this.filter(this.props.actions);\n    // console.log(\"Filtered\" + JSON.stringifyfilteredList);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }\n    }, \"Player = \", this.props.player_id, \" | X = \", this.state.playerLocations[this.props.player_id].startX, \" | Y = \", this.state.playerLocations[this.props.player_id].startY), /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }\n    }, rows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.noMovementClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }\n    }, \"No Movement\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default TicTac;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/TicTac.js"],"names":["React","Square","memoize","makeMovement","roomCode","startXY","startX","startY","roomAccess","roomId","roomName","id","x","y","roomLimit","roomPlayers","roomWeapons","TicTac","Component","constructor","props","state","playerLocations","filter","list","item","message_type","dim","count","grid","players","weapons","currentPlayer","player_id","currentPlayerId","currentX","currentY","validOptions","movementTurn","handleOnClick","bind","noMovementClick","suggestionClicked","accusationClicked","dims","parseFloat","length","a","b","cx","cy","alert","playerInput","makeSuggestion","makeAccusation","moveCurrentPlayer","console","log","g","index","indexOf","splice","push","setState","s","validateMove","currentRoom","requestedRoom","i","JSON","stringify","myArray","location","requestedLoc","found","getDerivedStateFromProps","newcount","newplayerLocations","newGrid","newCurrentX","newCurrentY","newmovementTurn","newvalidOptions","first","actions","undefined","message","character_moved","moved_character","player","nx","ny","valid_locations","render","style","margin","width","height","backgroundColor","color","fontSize","tableLayout","rows","map","r","d","j","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Square } from \"./Square\";\nimport memoize from \"memoize-one\";\nimport { makeMovement } from './ClientManager';\n\nvar roomCode = [\n  \"11\",\n  \"12\",\n  \"13\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"31\",\n  \"32\",\n  \"33\",\n  \"1112\",\n  \"1213\",\n  \"1121\",\n  \"1222\",\n  \"1323\",\n  \"2122\",\n  \"2223\",\n  \"2131\",\n  \"2232\",\n  \"2333\",\n  \"3132\",\n  \"3233\",\n];\n\nvar startXY = {\n  \"P0\": {\n    startX: -1,\n    startY: -1\n  },\n  \"P1\": {\n    startX: 3,\n    startY: 4\n  },\n  \"P2\": {\n   startX: 4,\n   startY: 3\n  },\n  \"P3\": {\n   startX: 3,\n   startY: 0\n  },\n  \"P4\": {\n   startX: 1,\n   startY: 0\n  },\n  \"P5\": {\n   startX: 0,\n   startY: 1\n  },\n  \"P6\": {\n   startX: 1,\n   startY: 4\n  },\n}\n\n//All valid rooms and hallways to move in (based on player's current location). Sequence is important - Please don't change them.\nvar roomAccess = [\n  [\n    {\n      roomId: \"11\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1112\", x: 0, y: 1 },\n        { id: \"1121\", x: 1, y: 0 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W1\"],\n    },\n    {\n      roomId: \"1112\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"11\", x: 0, y: 0 },\n        { id: \"12\", x: 0, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"P5\"],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"12\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1112\", x: 0, y: 1 },\n        { id: \"1222\", x: 3, y: 3 },\n        { id: \"1213\", x: 0, y: 3 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1213\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"12\", x: 0, y: 2 },\n        { id: \"13\", x: 0, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"13\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1213\", x: 0, y: 3 },\n        \"1323\",\n        { id: \"31\", x: 4, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W2\"],\n    },\n  ],\n  [\n    {\n      roomId: \"1121\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"11\", x: 0, y: 0 },\n        { id: \"21\", x: 2, y: 0 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"P4\"],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1222\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"12\", x: 0, y: 2 },\n        { id: \"22\", x: 2, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"1323\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"13\", x: 0, y: 4 },\n        { id: \"23\", x: 2, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"P6\"],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"21\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"1121\", x: 1, y: 0 },\n        { id: \"2122\", x: 2, y: 1 },\n        { id: \"2131\", x: 3, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2122\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"21\", x: 2, y: 0 },\n        { id: \"22\", x: 2, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"22\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"2122\", x: 2, y: 1 },\n        { id: \"1222\", x: 1, y: 2 },\n        { id: \"2223\", x: 2, y: 3 },\n        { id: \"2232\", x: 3, y: 2 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W3\"],\n    },\n    {\n      roomId: \"2223\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"22\", x: 2, y: 2 },\n        { id: \"23\", x: 2, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"23\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"2223\", x: 2, y: 3 },\n        { id: \"1323\", x: 1, y: 4 },\n        { id: \"2333\", x: 3, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W4\"],\n    },\n  ],\n  [\n    {\n      roomId: \"2131\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"21\", x: 2, y: 0 },\n        { id: \"31\", x: 4, y: 0 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"P3\"],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2232\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"22\", x: 2, y: 2 },\n        { id: \"32\", x: 4, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"0\",\n      roomName: \"Empty\",\n      roomAccess: [],\n      roomLimit: 0,\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"2333\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"23\", x: 2, y: 4 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"P1\"],\n      roomWeapons: [],\n    },\n  ],\n  [\n    {\n      roomId: \"31\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"2131\", x: 3, y: 0 },\n        { id: \"3132\", x: 4, y: 1 },\n        { id: \"13\", x: 0, y: 4 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W5\"],\n    },\n    {\n      roomId: \"3132\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"31\", x: 4, y: 0 },\n        { id: \"32\", x: 4, y: 2 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"32\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"3132\", x: 4, y: 1 },\n        { id: \"2232\", x: 3, y: 2 },\n        { id: \"3233\", x: 4, y: 3 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [\"W6\"],\n    },\n    {\n      roomId: \"3233\",\n      roomName: \"Hallway\",\n      roomAccess: [\n        { id: \"32\", x: 4, y: 2 },\n        { id: \"33\", x: 4, y: 4 },\n      ],\n      roomLimit: 1, // Because it is the hallway\n      roomPlayers: [\"P2\"],\n      roomWeapons: [],\n    },\n    {\n      roomId: \"33\",\n      roomName: \"Room\",\n      roomAccess: [\n        { id: \"3233\", x: 4, y: 3 },\n        { id: \"2233\", x: 3, y: 4 },\n        { id: \"11\", x: 0, y: 0 },\n      ],\n      roomLimit: -1, // No limit\n      roomPlayers: [],\n      roomWeapons: [],\n    },\n  ],\n];\n\nexport class TicTac extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dim: 3,\n      count: 0,\n      \n      // Gameboard grid\n      grid: roomAccess,\n\n      // Stores players current locID\n      players: [\n        \"2333\", //Miss Scarlet\n        \"3233\", //Mr. Green\n        \"2131\", //Colonel Mustard\n        \"1121\", //Prof. Plum\n        \"1112\", //Mrs. Peacock\n        \"1323\", //Mrs. White\n      ],\n      playerLocations: startXY,\n\n      // Stores weapons current locID\n      weapons: [\"11\", \"13\", \"22\", \"23\", \"31\", \"32\"],\n\n      currentPlayer: this.props.player_id,\n      currentPlayerId: this.props.player_id,\n      currentX: 0,\n      currentY: 0,\n      currentPlayer: this.props.player_id,\n      validOptions: [],\n      movementTurn: false\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.noMovementClick = this.noMovementClick.bind(this);\n    this.suggestionClicked = this.suggestionClicked.bind(this);\n\t  this.accusationClicked = this.accusationClicked.bind(this);\n    this.dims = [\n      parseFloat(500 / this.state.grid.length),\n      parseFloat(500 / this.state.grid[0].length),\n    ];\n  }\n\n  state = {\n    playerLocations: startXY,\n  }\n\n  suggestionClicked(a,b){\n\t\t//alert(a);\n\t\t//alert(b);\n\t\tconst cx = this.state.playerLocations[this.props.player_id].startX;\n        const cy = this.state.playerLocations[this.props.player_id].startY;\n\t\t//alert(JSON.stringify(this.state.grid[cx][cy]));\n\t\t//alert(this.state.grid[cx][cy].roomName);\n\n\t\tvar roomName=\"\";\n\t\tswitch (this.state.grid[cx][cy].roomId)\n\t\t\t{\n\t\t\t   case \"11\":\n\t\t\t\troomName=\"kitchen\";\n\t\t\t\tbreak;\n\t\t\t   case \"12\":\n\t\t\t\troomName=\"ballroom\";\n\t\t\t\tbreak;\n\t\t\t   case \"13\":\n\t\t\t\troomName=\"conservatory\";\n\t\t\t\tbreak;\n\t\t\t   case \"21\":\n\t\t\t\troomName=\"dinning\";\n\t\t\t\tbreak;\n\t\t\t   case \"22\":\n\t\t\t\troomName=\"hall\";\n\t\t\t\tbreak;\n\t\t\t   case \"23\":\n\t\t\t\troomName=\"billiard\";\n\t\t\t\tbreak;\n\t\t\t   case \"31\":\n\t\t\t\troomName=\"library\";\n\t\t\t\tbreak;\n\t\t\t   case \"32\":\n\t\t\t\troomName=\"study\";\n\t\t\t\tbreak;\n\t\t\t   case \"33\":\n\t\t\t\troomName=\"lounge\";\n\t\t\t\tbreak;\t\t\t\t\n\t\t\t   default: \n\t\t\t\t   alert('You need to be in a room!');\n\t\t\t\t   break;\n\t\t\t}\n\t\t\tif(roomName==\"\")\n\t\t\t\treturn;\n\t\tvar playerInput = \"You are Suggesting : \"+roomName+\" \"+ a+\" \"+ b;\n\t\talert (playerInput);\t\t\t\n\t\t//this.setState({ inputs : [playerInput, ...this.state.inputs]})\n\t\tmakeSuggestion(roomName,a,b);\n\t}\n\t\n\taccusationClicked(a,b){\n//alert(a);\n\t\t//alert(b);\n\t\tconst cx = this.state.playerLocations[this.props.player_id].startX;\n        const cy = this.state.playerLocations[this.props.player_id].startY;\n\t\t//alert(JSON.stringify(this.state.grid[cx][cy]));\n\t\t//alert(this.state.grid[cx][cy].roomName);\n\t\tvar roomName=\"\";\n\t\tswitch (this.state.grid[cx][cy].roomId)\n\t\t\t{\n\t\t\t   case \"11\":\n\t\t\t\troomName=\"kitchen\";\n\t\t\t\tbreak;\n\t\t\t   case \"12\":\n\t\t\t\troomName=\"ballroom\";\n\t\t\t\tbreak;\n\t\t\t   case \"13\":\n\t\t\t\troomName=\"conservatory\";\n\t\t\t\tbreak;\n\t\t\t   case \"21\":\n\t\t\t\troomName=\"dinning\";\n\t\t\t\tbreak;\n\t\t\t   case \"22\":\n\t\t\t\troomName=\"hall\";\n\t\t\t\tbreak;\n\t\t\t   case \"23\":\n\t\t\t\troomName=\"billiard\";\n\t\t\t\tbreak;\n\t\t\t   case \"31\":\n\t\t\t\troomName=\"library\";\n\t\t\t\tbreak;\n\t\t\t   case \"32\":\n\t\t\t\troomName=\"study\";\n\t\t\t\tbreak;\n\t\t\t   case \"33\":\n\t\t\t\troomName=\"lounge\";\n\t\t\t\tbreak;\t\t\t\t\n\t\t\t   default: \n\t\t\t\t   alert('You need to be in a room!');\n\t\t\t\t   break;\n\t\t\t}\n\t\t\tif(roomName==\"\")\n\t\t\t\treturn;\n\t\tvar playerInput = \"Your Accusation : \"+roomName+\" \"+ a+\" \"+ b;\n\t\talert (playerInput);\n\t\t//this.setState({ inputs : [playerInput, ...this.state.inputs]})\n\t\tmakeAccusation(roomName,a,b);\n\t}\n\n  moveCurrentPlayer(x, y) {\n    console.log(\"moveCurrentplayer\");\n    var g = this.state.grid;\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY;\n\n    var index = g[cx][cy].roomPlayers.indexOf(this.props.player_id)\n    g[cx][cy].roomPlayers.splice(index, 1) //Remove current player to old room\n    g[x][y].roomPlayers.push(this.props.player_id) //Add current player to new room\n\n    this.setState({grid: g, currentX: x, currentY: y})\n\n    var s = this.state.playerLocations;\n    s[this.props.player_id].startX = x;\n    s[this.props.player_id].startY = y;\n    this.setState({playerLocations: s})\n\n    //const cx = this.state.playerLocations[this.props.player_id].startX;\n    //const cy = this.state.playerLocations[this.props.player_id].startY;\n\n    //console.log(\"After:\" + this.state.grid[x][y].roomPlayers);\n    // console.log(\"moveCurrentplayer\");\n    // var g = this.state.grid;\n    // var index = g[this.state.currentX][this.state.currentY].roomPlayers.indexOf(this.state.currentPlayer)\n    // g[this.state.currentX][this.state.currentY].roomPlayers.splice(index, 1) //Remove current player to old room\n    // g[x][y].roomPlayers.push(this.state.currentPlayer) //Add current player to new room\n    // this.setState({grid: g, currentX: x, currentY: y})\n  }\n\n  validateMove(x, y) {\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY;\n    const currentRoom = this.state.grid[cx][cy];\n    const requestedRoom = this.state.grid[x][y];\n\n    // Validate move\n    for (var i = 0; i < currentRoom.roomAccess.length; i++) {\n      //Valid room from current position\n      //console.log(JSON.stringify(currentRoom.roomAccess[i]));\n      if (\n        currentRoom.roomAccess[i].x == x &&\n        currentRoom.roomAccess[i].y == y\n      ) {\n        //console.log(\"match\")\n        //Room with no max\n        if (requestedRoom.roomLimit == -1) {\n          console.log(\"room with no max\");\n          return true;\n        }\n\n        //Picked empty spot\n        if (requestedRoom.roomLimit == 0) {\n          console.log(\"empty space\");\n          return false;\n        }\n\n        // Check limit, 1 = hallway with 1 max\n        if (\n          requestedRoom.roomLimit == 1 &&\n          requestedRoom.roomPlayers.length == 0\n        ) {\n          console.log(\"hallway not blocked\");\n          return true;\n        } else {\n          console.log(\"hallway blocked\");\n          return false;\n        }\n      }\n      //console.log(\"no match\")\n    }\n    return false;\n  }\n\n  // {\"game_id\":0,\"player_id\":1,\"message_type\":31,\"message\":\n  // {\"movement_required\":true,\"movement_possible\":true,\"valid_locations\":\n  // [{\"movement_id\":1,\"location\":[0,0]},{\"movement_id\":2,\"location\":[0,1]},\n  // {\"movement_id\":3,\"location\":[0,2]},{\"movement_id\":4,\"location\":[0,3]},\n  // {\"movement_id\":5,\"location\":[0,4]},{\"movement_id\":6,\"location\":[1,0]},\n  // {\"movement_id\":7,\"location\":[1,1]},{\"movement_id\":8,\"location\":[1,2]},\n  // {\"movement_id\":9,\"location\":[1,3]},{\"movement_id\":10,\"location\":[1,4]},\n  // {\"movement_id\":11,\"location\":[2,0]},{\"movement_id\":12,\"location\":[2,1]},\n  // {\"movement_id\":13,\"location\":[2,2]},{\"movement_id\":14,\"location\":[2,3]},\n  // {\"movement_id\":15,\"location\":[2,4]},{\"movement_id\":16,\"location\":[3,0]},\n  // {\"movement_id\":17,\"location\":[3,1]},{\"movement_id\":18,\"location\":[3,2]},\n  // {\"movement_id\":19,\"location\":[3,3]},{\"movement_id\":20,\"location\":[3,4]},\n  // {\"movement_id\":21,\"location\":[4,0]},{\"movement_id\":22,\"location\":[4,1]},\n  // {\"movement_id\":23,\"location\":[4,2]},{\"movement_id\":24,\"location\":[4,3]},\n  // {\"movement_id\":25,\"location\":[4,4]}]}}\n\n  handleOnClick(x, y) {\n    const cx = this.state.playerLocations[this.props.player_id].startX;\n    const cy = this.state.playerLocations[this.props.player_id].startY;\n    const currentRoom = this.state.grid[cx][cy];\n    const requestedRoom = this.state.grid[x][y];\n\n    console.log(\"TicTac current x=\" + cx + \" y=\" + cy);\n    console.log(\"TicTac currentroom\" + JSON.stringify(currentRoom));\n    console.log(\"TicTac requested x=\" + x + \" y=\" + y + \" \");\n    console.log(\"TicTac requestedroom\" + JSON.stringify(requestedRoom));\n\n    // Need to store current player, with location to base valid movements on\n\n    if (this.state.movementTurn) {\n      //Check against array\n      var myArray = this.state.validOptions\n      //console.log(\"ValidOptions: \" + JSON.stringify(this.state.validOptions))\n\n      for(let i = 0; i < myArray.length; i++) {\n        //console.log(\"Array: \" + JSON.stringify(myArray[i]))\n        console.log(\"Location: \" + myArray[i].location)\n        var requestedLoc = [x, y]\n        console.log(\"Requested Location: \" + requestedLoc)\n        //var found = requestedLoc = myArray[i].location\n        //var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location)\n        //console.log(\"Found=\" + found)\n        var found = JSON.stringify(requestedLoc) == JSON.stringify(myArray[i].location)\n        if (found) {\n          break\n        }\n      }\n      if (found) {\n        alert(\"Valid movement\");\n\n        //Send movement request with requested room\n        makeMovement(\"true\", [x, y])\n        this.setState({movementTurn : false, validOptions : []})\n      } else {\n        alert(\"Not valid movement\")\n      }\n\n    } else {\n      alert(\"Not your movement turn\")\n    }\n\n    // const valid = this.validateMove(x, y)\n    // if (valid) {\n    //   alert(\"valid movement\")\n    //   //this.moveCurrentPlayer(x, y);\n    // } else {\n    //   alert(\"not valid movement\")\n    // }\n\n  }\n\n  noMovementClick() {\n    makeMovement(\"false\", [-1, -1])\n    this.setState({movementTurn : false, validOptions : []})\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"getDerivedStateFromProps\")\n    //console.log(\"getDerivedStateFromProps prop:\" + JSON.stringify(props))\n    //console.log(\"getDerivedStateFromProps state:\" + JSON.stringify(state))\n    var newcount = state.count + 1\n    var newplayerLocations = state.playerLocations\n    var newGrid = state.grid\n    var newCurrentX = state.currentX\n    var newCurrentY = state.currentY\n    var newmovementTurn = state.movementTurn\n    var newvalidOptions = state.validOptions\n\n    var first = props.actions[0]\n    console.log(JSON.stringify(first))\n    if (first != undefined) {\n      if (first.message_type == 22) {\n        console.log(\"Found movement broadcast:\" + first.message.character_moved + \" \" + first.message.moved_character)\n        var player = \"P\" + first.message.moved_character\n        const cx = newplayerLocations[player].startX;\n        const cy = newplayerLocations[player].startY;\n        const nx = 4;\n        const ny = 4;\n\n        console.log(\"Derived: \" + JSON.stringify(newGrid[cx][cy]))\n        console.log(\"Derived: \" + JSON.stringify(newGrid[nx][ny]))\n        var index = newGrid[cx][cy].roomPlayers.indexOf(player)\n        newGrid[cx][cy].roomPlayers.splice(index, 1) //Remove current player to old room\n        newGrid[nx][ny].roomPlayers.push(player) //Add current player to new room\n        //NEW TO UPDATE CURRENTX AND CURRENTY if currentplayer\n        newplayerLocations[player].startX = nx;\n        newplayerLocations[player].startX = ny;\n\n        if (player = props.player_id) {\n          newCurrentX = nx;\n          newCurrentY = ny;\n        }\n\n        console.log(\"Derived: \" + player)\n        console.log(\"Derived: \" + props.player_id)\n        console.log(\"Derived: \" + JSON.stringify(newGrid))\n        console.log(\"Derived: \" + JSON.stringify(newplayerLocations))\n        // console.log(\"Player location state:\" + JSON.stringify(state.playerLocations))\n        // console.log(\"Player location:\" + JSON.stringify(state.playerLocations[player]))\n        // newplayerLocations[player].startX = 5\n        // newplayerLocations[player].startY = 5\n        // console.log(\"Player new location:\" + JSON.stringify(newplayerLocations[player]))\n        // console.log(\"Moving P1 to 11\")\n        //var newplayerLocations = state.playerLocations\n        // newplayerLocations[player].startX = 1\n        // newplayerLocations[player].startY = 1\n        // console.log(\"Player new location:\" + JSON.stringify(newplayerLocations[player]))\n      }\n      if (first.message_type == 31) {\n        newmovementTurn = true;\n        newvalidOptions = first.message.valid_locations;\n      }\n    }\n\n    return { count : newcount, grid: newGrid, playerLocations : newplayerLocations,\n        currentX : newCurrentX, currentY : newCurrentY,\n        movementTurn : newmovementTurn, validOptions : newvalidOptions}\n\n    // if (props.url !== state.prevUrl) {\n    //   return {\n    //     isLoading: true,\n    //     prevUrl: props.url\n    //   };\n    // }\n\n    return null;\n  }\n\n  filter = memoize(\n    (list) => list.filter(item => item.message_type == 31)\n  );\n\n  render() {\n    const style = {\n      margin: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"white\",\n      color: \"white\",\n      fontSize: \"3em\",\n      tableLayout: \"fixed\",\n    };\n    //var checkPlayer = this.findTurn(this.props.actions);\n    //console.log(this.state.grid);\n    const rows = this.state.grid.map((r, i) => {\n      return (\n        <tr key={\"row_\" + i}>\n          {r.map((d, j) => {\n            //console.log(\"building\");\n            return (\n              <Square\n                key={i + \"_\" + j}\n                dims={this.dims}\n                onClick={() => {\n                  this.handleOnClick(i, j);\n                }}\n                //contents={d==\"+\"?\" \":d}\n                contents={d}\n                name=\"Austin\"\n              />\n            );\n          })}\n        </tr>\n      );\n    });\n   //console.log(\"Render\");\n   //console.log(\"Render:\" + JSON.stringify(this.state))\n   //console.log(\"Render:\" + this.state.active)\n    //console.log(\"TicTac: props playerid = \" + this.props.player_id)\n    //var test = this.props.player_id;\n    //console.log(\"TicTac: test playerid = \" + test)\n    //console.log(\"TicTac: state playerid = \" + this.state.currentPlayerId)\n\n    //console.log(\"TicTac:\" + JSON.stringify(startXY[\"P1\"]))\n\n    //this.findCurrentPlayer()\n    //console.log(\"TicTac\" + this.state.currentPlayer);\n    // const cx = this.state.playerLocations[this.props.player_id].startX;\n    // const cy = this.state.playerLocations[this.props.player_id].startY;\n    // console.log(cx + \" \" + cy)\n\n    //const filteredList = this.filter(this.props.actions);\n   // console.log(\"Filtered\" + JSON.stringifyfilteredList);\n    \n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <p>Player = {this.props.player_id} | X = {this.state.playerLocations[this.props.player_id].startX} | Y = {this.state.playerLocations[this.props.player_id].startY}</p>\n\n        <table cellSpacing=\"0\" id=\"table\" style={style}>\n          <tbody>{rows}</tbody>\n        </table>\n        <br />\n        <button onClick={this.noMovementClick}>No Movement</button>\n        <br />\n        {/* <button style={{margin:\"auto\"}} onClick={this.handleReset}>reset</button>\n        <br /><br />\n        <button onClick={()=>{this.state.dim==1?1:this.state.dim-=1;this.setState({dim:this.state.dim})}}>-</button>\n\n            &nbsp;&nbsp;&nbsp;<span style={{color:'white'}}>{this.state.dim}</span>&nbsp;&nbsp;&nbsp;\n\n        <button onClick={()=>{this.state.dim+=1;this.setState({dim:this.state.dim})}}>+</button> */}\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default TicTac;\n"]},"metadata":{},"sourceType":"module"}