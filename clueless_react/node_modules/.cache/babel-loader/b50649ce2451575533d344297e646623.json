{"ast":null,"code":"var io = require(\"socket.io-client\");\n\nvar selfIo = require(\"socket.io-client\"); // Start socket and export it for others to use\n//var url = \"http://localhost:5000\"; // Local Server\n\n\nvar url = \"https://clueless-server-3-5to6jzrcka-ue.a.run.app\"; // LATEST VERSION (3)\n//var url = \"https://clueless-server-v1-5to6jzrcka-ue.a.run.app\"; // Remote Server\n\nconst socket = io.connect(url);\nexport { socket }; // Called by App to join\n\nconst startClient = function (port) {\n  socket.on(\"connect\", function () {\n    socket.emit(\"join\", port);\n  });\n};\n\nfunction sendJoinGame(create, game, username, char, player) {\n  // create_game: (bool; true to start game)\n  // game_id: (int; ID of the game to join if joining active game)\n  // username: (string; player username)\n  // character: (int; ID of chosen character)\n  // player_id: (int; ID of player\n  //console.log(\"sendJoin\" + game);\n  var message = {\n    create_game: create,\n    game_id: game,\n    username: username,\n    character: char,\n    player_id: player\n  }; //console.log('movement request: ' + move + room)\n\n  console.log(\"sendJoinGame: \" + JSON.stringify(message));\n  socket.emit(2, message);\n}\n\nfunction sendStartGame() {\n  // create_game: (bool; true to start game)\n  // game_id: (int; ID of the game to join if joining active game)\n  // username: (string; player username)\n  // character: (int; ID of chosen character)\n  // player_id: (int; ID of player\n  var message = {\n    start_game: true\n  }; //console.log('movement request: ' + move + room)\n\n  console.log(\"sendCreateGame: \" + JSON.stringify(message));\n  socket.emit(4, message);\n} // Messages to server from client, called by user input\n\n\nfunction makeMovement(move, room) {\n  // “movement_made”:\n  // “movement_id”:\n  // }\n  // movement_made (bool) - True if the player has moved to a new location, false otherwise.\n  // new_location (int) - The unique ID of the chosen movement option.\n  var movement = {\n    movement_made: move,\n    movement_id: room\n  }; //console.log('movement request: ' + move + room)\n\n  console.log(\"makeMovement: \" + JSON.stringify(movement));\n  socket.emit(41, movement);\n}\n\nfunction makeSuggestion(room, person, weapon) {\n  // “suggested_character”:\n  // “suggested_weapon”:\n  // }\n  // suggested_character (String) - The name of the character that was suggested.\n  // suggested_weapon (String) - The name ID if the weapon that was suggested.\n  var suggestion = {\n    suggested_room: room,\n    suggested_character: person,\n    suggested_weapon: weapon\n  };\n  console.log(\"suggestion request: \" + room + person + weapon);\n  console.log(\"makeSuggestion: \" + JSON.stringify(suggestion));\n  socket.emit(42, suggestion);\n}\n\nfunction makeDisprove(disprove, card) {\n  // “suggestion_id”:\n  // “can_disprove”:\n  // “disprove_card”:\n  // }\n  // suggestion_id (int) - The unique ID of the suggestion being disproven.\n  // can_disprove (bool) - True if the suggestion is disproved, false otherwise.\n  // disprove_card (String) - The card used to disprove the suggestion; only populated if can_disprove is true.\n  var disprove = {\n    suggestion_id: 0,\n    can_disprove: disprove,\n    disprove_card: card\n  }; //console.log('disprove request: ' + disprove + card)\n\n  console.log(\"makeDisprove: \" + JSON.stringify(disprove));\n  socket.emit(43, disprove);\n}\n\nfunction makeAccusation(accuse, room, person, weapon) {\n  // “accused_room”:\n  // “accused_character”:\n  // “accused_weapon”:\n  // }\n  // accused-room (String) - The name of the room that was accused.\n  // accused_character (String) - The name of the character that was accused.\n  // accused_weapon (String) - The name ID if the weapon that was accused.\n  var accusation = {\n    accuse_made: accuse,\n    accused_room: room,\n    accused_character: person,\n    accused_weapon: weapon\n  }; //console.log('accusation request: ' + accuse + person + weapon + room)\n\n  console.log(\"makeAccusation: \" + JSON.stringify(accusation));\n  socket.emit(44, accusation);\n}\n\nfunction sendPlayerMessage(username, message) {\n  var playerMessageObj = {\n    playerUsername: username,\n    playerMessage: message\n  };\n  console.log(\"Player Message to SERVER: \" + JSON.stringify(playerMessageObj));\n  socket.emit(\"chat_to_server\", playerMessageObj);\n}\n\nfunction sendThemeChange(primary, secondary) {\n  var colorPalette = {\n    primaryColor: primary,\n    secondaryColor: secondary\n  };\n  console.log(\"Theme Change: \" + JSON.stringify(colorPalette));\n  socket.emit(\"theme_change\", colorPalette);\n}\n\nexport { startClient, sendJoinGame, sendStartGame, makeMovement, makeSuggestion, makeDisprove, makeAccusation, sendPlayerMessage, sendThemeChange };","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/ClientManager.js"],"names":["io","require","selfIo","url","socket","connect","startClient","port","on","emit","sendJoinGame","create","game","username","char","player","message","create_game","game_id","character","player_id","console","log","JSON","stringify","sendStartGame","start_game","makeMovement","move","room","movement","movement_made","movement_id","makeSuggestion","person","weapon","suggestion","suggested_room","suggested_character","suggested_weapon","makeDisprove","disprove","card","suggestion_id","can_disprove","disprove_card","makeAccusation","accuse","accusation","accuse_made","accused_room","accused_character","accused_weapon","sendPlayerMessage","playerMessageObj","playerUsername","playerMessage","sendThemeChange","primary","secondary","colorPalette","primaryColor","secondaryColor"],"mappings":"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","sourcesContent":["var io = require(\"socket.io-client\");\nvar selfIo = require(\"socket.io-client\");\n\n// Start socket and export it for others to use\n//var url = \"http://localhost:5000\"; // Local Server\nvar url = \"https://clueless-server-3-5to6jzrcka-ue.a.run.app\"; // LATEST VERSION (3)\n//var url = \"https://clueless-server-v1-5to6jzrcka-ue.a.run.app\"; // Remote Server\nconst socket = io.connect(url);\nexport { socket };\n\n// Called by App to join\nconst startClient = function (port) {\n  socket.on(\"connect\", function () {\n    socket.emit(\"join\", port);\n  });\n};\n\nfunction sendJoinGame(create, game, username, char, player) {\n  // create_game: (bool; true to start game)\n  // game_id: (int; ID of the game to join if joining active game)\n  // username: (string; player username)\n  // character: (int; ID of chosen character)\n  // player_id: (int; ID of player\n\n  //console.log(\"sendJoin\" + game);\n  var message = {\n    create_game: create,\n    game_id: game,\n    username: username,\n    character: char,\n    player_id: player,\n  };\n  //console.log('movement request: ' + move + room)\n  console.log(\"sendJoinGame: \" + JSON.stringify(message));\n  socket.emit(2, message);\n}\n\nfunction sendStartGame() {\n  // create_game: (bool; true to start game)\n  // game_id: (int; ID of the game to join if joining active game)\n  // username: (string; player username)\n  // character: (int; ID of chosen character)\n  // player_id: (int; ID of player\n\n  var message = {\n    start_game: true,\n  };\n  //console.log('movement request: ' + move + room)\n  console.log(\"sendCreateGame: \" + JSON.stringify(message));\n  socket.emit(4, message);\n}\n\n// Messages to server from client, called by user input\nfunction makeMovement(move, room) {\n  // “movement_made”:\n  // “movement_id”:\n  // }\n  // movement_made (bool) - True if the player has moved to a new location, false otherwise.\n  // new_location (int) - The unique ID of the chosen movement option.\n\n  var movement = {\n    movement_made: move,\n    movement_id: room,\n  };\n  //console.log('movement request: ' + move + room)\n  console.log(\"makeMovement: \" + JSON.stringify(movement));\n  socket.emit(41, movement);\n}\n\nfunction makeSuggestion(room, person, weapon) {\n  // “suggested_character”:\n  // “suggested_weapon”:\n  // }\n  // suggested_character (String) - The name of the character that was suggested.\n  // suggested_weapon (String) - The name ID if the weapon that was suggested.\n\n  var suggestion = {\n    suggested_room: room,\n    suggested_character: person,\n    suggested_weapon: weapon,\n  };\n  console.log(\"suggestion request: \" + room + person + weapon);\n  console.log(\"makeSuggestion: \" + JSON.stringify(suggestion));\n  socket.emit(42, suggestion);\n}\n\nfunction makeDisprove(disprove, card) {\n  // “suggestion_id”:\n  // “can_disprove”:\n  // “disprove_card”:\n  // }\n  // suggestion_id (int) - The unique ID of the suggestion being disproven.\n  // can_disprove (bool) - True if the suggestion is disproved, false otherwise.\n  // disprove_card (String) - The card used to disprove the suggestion; only populated if can_disprove is true.\n\n  var disprove = {\n    suggestion_id: 0,\n    can_disprove: disprove,\n    disprove_card: card,\n  };\n  //console.log('disprove request: ' + disprove + card)\n  console.log(\"makeDisprove: \" + JSON.stringify(disprove));\n  socket.emit(43, disprove);\n}\n\nfunction makeAccusation(accuse, room, person, weapon) {\n  // “accused_room”:\n  // “accused_character”:\n  // “accused_weapon”:\n  // }\n  // accused-room (String) - The name of the room that was accused.\n  // accused_character (String) - The name of the character that was accused.\n  // accused_weapon (String) - The name ID if the weapon that was accused.\n\n  var accusation = {\n    accuse_made: accuse,\n    accused_room: room,\n    accused_character: person,\n    accused_weapon: weapon,\n  };\n  //console.log('accusation request: ' + accuse + person + weapon + room)\n  console.log(\"makeAccusation: \" + JSON.stringify(accusation));\n  socket.emit(44, accusation);\n}\n\nfunction sendPlayerMessage(username, message) {\n  var playerMessageObj = {\n    playerUsername: username,\n    playerMessage: message,\n  };\n  console.log(\"Player Message to SERVER: \" + JSON.stringify(playerMessageObj));\n  socket.emit(\"chat_to_server\", playerMessageObj);\n}\n\nfunction sendThemeChange(primary, secondary) {\n  var colorPalette = {\n    primaryColor: primary,\n    secondaryColor: secondary,\n  };\n  console.log(\"Theme Change: \" + JSON.stringify(colorPalette));\n  socket.emit(\"theme_change\", colorPalette);\n}\n\nexport {\n  startClient,\n  sendJoinGame,\n  sendStartGame,\n  makeMovement,\n  makeSuggestion,\n  makeDisprove,\n  makeAccusation,\n  sendPlayerMessage,\n  sendThemeChange,\n};\n"]},"metadata":{},"sourceType":"module"}