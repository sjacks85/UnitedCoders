{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { socket } from './ClientManager.js';\n\nclass Cards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: []\n    };\n    this.state = {\n      actions: this.props.actions\n    };\n  }\n\n  // updateArray(elem) {\n  //   this.setState({ actions : [elem, ...this.state.actions] })\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, this.props.actions.forEach(element => {\n      if (element.message_type == 11) {\n        /*#__PURE__*/\n        React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }, JSON.stringify(element));\n      }\n\n      return true;\n    }));\n  }\n\n}\n\nexport default Cards; // export default function Cards() {\n//   const [cards, setCards] = useState();\n//   const [assigned, assignedCards] = useState(false);\n//   useEffect(() => {\n//     socket.on('assignCards', data => {\n//       if ( assigned ) {\n//         //alert(\"UNDEFINED\")\n//       } else {\n//         setCards(data)\n//         assignedCards(true)\n//         console.log(\"Cards:\", cards);\n//         console.log(\"Assigned:\", assigned);\n//        //alert(\"Cards:\" + JSON.stringify(cards))\n//       }\n//    });\n//   }, []);\n//   return (\n//     <div>\n//       <p>\n//         {JSON.stringify(cards)}\n//       </p>\n//     </div>\n//   );\n// }\n// class Message extends Component {\n//   constructor(){\n//     super();\n//     window.alertMessage = this.alertMessage.bind(this);\n// }\n//   state = {\n//     getBody: ''\n//   };\n//   componentWillUnmount() {\n//     clearInterval(this.timer)\n//     this.timer = null;\n//   }\n//   alertMessage() {\n//       console.log(\"From the outside\")\n//   }\n//   getItems() {\n//     //http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\n//     //Get request and then assign it to state.getBoby\n//     //return state.getBody in render\n//     //Could also unshift into array, and return the array like Divider:Stubbed_Messages\n//   }\n//   componentDidMount() {\n//     this.getItems();\n//     //Starting timer to fetch every 5 seconds\n//     this.timer = setInterval(()=> this.getItems(), 5000);\n//   }\n// render() {\n//     return (\n//         <p>!{this.state.getBody}!</p>\n//     );\n//   }\n// }\n// export default Message;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Cards.js"],"names":["React","useEffect","useState","socket","Cards","Component","constructor","props","state","actions","render","forEach","element","message_type","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AACNC,MAAAA,OAAO,EAAE;AADH,KANW;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AADT,KAAb;AAGD;;AAKD;AACA;AACA;AAEFC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,OAAnB,CAA2BC,OAAO,IAAI;AACrC,UAAIA,OAAO,CAACC,YAAR,IAAwB,EAA5B,EAAgC;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAL;AACD;;AACD,aAAO,IAAP;AACD,KALA,CADH,CADF;AAUD;;AA3BmC;;AA8BpC,eAAeR,KAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { socket } from './ClientManager.js'\n\nclass Cards extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions\n    };\n  }\n  state = {\n    actions: []\n  };\n\n  // updateArray(elem) {\n  //   this.setState({ actions : [elem, ...this.state.actions] })\n  // }\n\nrender() {\n  return (\n    <ul>\n      {this.props.actions.forEach(element => {\n        if (element.message_type == 11) {\n          <li>{JSON.stringify(element)}</li>\n        }\n        return true;\n      })}\n    </ul>\n  );\n}\n}\n\nexport default Cards;\n\n// export default function Cards() {\n\n//   const [cards, setCards] = useState();\n//   const [assigned, assignedCards] = useState(false);\n\n//   useEffect(() => {\n//     socket.on('assignCards', data => {\n//       if ( assigned ) {\n//         //alert(\"UNDEFINED\")\n//       } else {\n//         setCards(data)\n//         assignedCards(true)\n//         console.log(\"Cards:\", cards);\n//         console.log(\"Assigned:\", assigned);\n//        //alert(\"Cards:\" + JSON.stringify(cards))\n//       }\n//    });\n//   }, []);\n\n//   return (\n//     <div>\n//       <p>\n//         {JSON.stringify(cards)}\n//       </p>\n//     </div>\n    \n//   );\n// }\n\n// class Message extends Component {\n//   constructor(){\n//     super();\n//     window.alertMessage = this.alertMessage.bind(this);\n// }\n//   state = {\n//     getBody: ''\n//   };\n  \n//   componentWillUnmount() {\n//     clearInterval(this.timer)\n//     this.timer = null;\n//   }\n//   alertMessage() {\n//       console.log(\"From the outside\")\n//   }\n\n//   getItems() {\n//     //http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\n//     //Get request and then assign it to state.getBoby\n//     //return state.getBody in render\n//     //Could also unshift into array, and return the array like Divider:Stubbed_Messages\n//   }\n\n//   componentDidMount() {\n//     this.getItems();\n//     //Starting timer to fetch every 5 seconds\n//     this.timer = setInterval(()=> this.getItems(), 5000);\n//   }\n  \n// render() {\n//     return (\n//         <p>!{this.state.getBody}!</p>\n//     );\n//   }\n// }\n\n// export default Message;"]},"metadata":{},"sourceType":"module"}