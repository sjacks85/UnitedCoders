{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { socket } from './ClientManager.js';\n\nclass Cards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: []\n    };\n    this.state = {\n      actions: this.props.actions\n    };\n  }\n\n  // updateArray(elem) {\n  //   this.setState({ actions : [elem, ...this.state.actions] })\n  // }\n  checkNested(obj\n  /*, level1, level2, ... levelN*/\n  ) {\n    let args = Array.prototype.slice.call(arguments, 1);\n\n    for (var i = 0; i < args.length; i++) {\n      if (!obj || !obj.hasOwnProperty(args[i])) {\n        return false;\n      }\n\n      obj = obj[args[i]];\n    }\n\n    return true;\n  } //this.checkNested(element, 'cards')\n\n\n  render() {\n    const temp = this.props.actions.filter(element => element.message_type = 11 && element.player_id != 0);\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, temp.map(elem => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, JSON.stringify(elem.message.player_id) + JSON.stringify(elem.message.character) + JSON.stringify(elem.message.cards))));\n  }\n\n}\n\nexport default Cards; // export default function Cards() {\n//   const [cards, setCards] = useState();\n//   const [assigned, assignedCards] = useState(false);\n//   useEffect(() => {\n//     socket.on('assignCards', data => {\n//       if ( assigned ) {\n//         //alert(\"UNDEFINED\")\n//       } else {\n//         setCards(data)\n//         assignedCards(true)\n//         console.log(\"Cards:\", cards);\n//         console.log(\"Assigned:\", assigned);\n//        //alert(\"Cards:\" + JSON.stringify(cards))\n//       }\n//    });\n//   }, []);\n//   return (\n//     <div>\n//       <p>\n//         {JSON.stringify(cards)}\n//       </p>\n//     </div>\n//   );\n// }\n// class Message extends Component {\n//   constructor(){\n//     super();\n//     window.alertMessage = this.alertMessage.bind(this);\n// }\n//   state = {\n//     getBody: ''\n//   };\n//   componentWillUnmount() {\n//     clearInterval(this.timer)\n//     this.timer = null;\n//   }\n//   alertMessage() {\n//       console.log(\"From the outside\")\n//   }\n//   getItems() {\n//     //http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\n//     //Get request and then assign it to state.getBoby\n//     //return state.getBody in render\n//     //Could also unshift into array, and return the array like Divider:Stubbed_Messages\n//   }\n//   componentDidMount() {\n//     this.getItems();\n//     //Starting timer to fetch every 5 seconds\n//     this.timer = setInterval(()=> this.getItems(), 5000);\n//   }\n// render() {\n//     return (\n//         <p>!{this.state.getBody}!</p>\n//     );\n//   }\n// }\n// export default Message;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/Cards.js"],"names":["React","useEffect","useState","socket","Cards","Component","constructor","props","state","actions","checkNested","obj","args","Array","prototype","slice","call","arguments","i","length","hasOwnProperty","render","temp","filter","element","message_type","player_id","map","elem","JSON","stringify","message","character","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AACNC,MAAAA,OAAO,EAAE;AADH,KANW;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AADT,KAAb;AAGD;;AAKD;AACA;AACA;AAEAC,EAAAA,WAAW,CAACC;AAAI;AAAL,IAAwC;AACjD,QAAIC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAI,CAACP,GAAD,IAAQ,CAACA,GAAG,CAACS,cAAJ,CAAmBR,IAAI,CAACM,CAAD,CAAvB,CAAb,EAA0C;AACxC,eAAO,KAAP;AACD;;AACDP,MAAAA,GAAG,GAAGA,GAAG,CAACC,IAAI,CAACM,CAAD,CAAL,CAAT;AACD;;AACD,WAAO,IAAP;AACD,GAzBiC,CA0BlC;;;AAEFG,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKf,KAAL,CAAWE,OAAX,CAAmBc,MAAnB,CAA0BC,OAAO,IAAIA,OAAO,CAACC,YAAR,GAAuB,MACpED,OAAO,CAACE,SAAR,IAAqB,CADb,CAAb;AAEA,wBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCJ,IAAI,CAACK,GAAL,CAASC,IAAI,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACG,OAAL,CAAaL,SAA5B,IAAyCG,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACG,OAAL,CAAaC,SAA5B,CAAzC,GACDH,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACG,OAAL,CAAaE,KAA5B,CADJ,CADD,CADD,CADV;AAQD;;AAvCmC;;AA0CpC,eAAe7B,KAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { socket } from './ClientManager.js'\n\nclass Cards extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: this.props.actions\n    };\n  }\n  state = {\n    actions: []\n  };\n\n  // updateArray(elem) {\n  //   this.setState({ actions : [elem, ...this.state.actions] })\n  // }\n\n  checkNested(obj /*, level1, level2, ... levelN*/ ) {\n    let args = Array.prototype.slice.call(arguments, 1);\n    for (var i = 0; i < args.length; i++) {\n      if (!obj || !obj.hasOwnProperty(args[i])) {\n        return false;\n      }\n      obj = obj[args[i]];\n    }\n    return true;\n  }\n  //this.checkNested(element, 'cards')\n\nrender() {\n  const temp = this.props.actions.filter(element => element.message_type = 11 \n    && element.player_id != 0 )\n  return (\n            <ul>\n            {temp.map(elem => (\n              <li>{JSON.stringify(elem.message.player_id) + JSON.stringify(elem.message.character) \n                + JSON.stringify(elem.message.cards) }</li>\n            ))}\n            </ul>\n  );\n}\n}\n\nexport default Cards;\n\n// export default function Cards() {\n\n//   const [cards, setCards] = useState();\n//   const [assigned, assignedCards] = useState(false);\n\n//   useEffect(() => {\n//     socket.on('assignCards', data => {\n//       if ( assigned ) {\n//         //alert(\"UNDEFINED\")\n//       } else {\n//         setCards(data)\n//         assignedCards(true)\n//         console.log(\"Cards:\", cards);\n//         console.log(\"Assigned:\", assigned);\n//        //alert(\"Cards:\" + JSON.stringify(cards))\n//       }\n//    });\n//   }, []);\n\n//   return (\n//     <div>\n//       <p>\n//         {JSON.stringify(cards)}\n//       </p>\n//     </div>\n    \n//   );\n// }\n\n// class Message extends Component {\n//   constructor(){\n//     super();\n//     window.alertMessage = this.alertMessage.bind(this);\n// }\n//   state = {\n//     getBody: ''\n//   };\n  \n//   componentWillUnmount() {\n//     clearInterval(this.timer)\n//     this.timer = null;\n//   }\n//   alertMessage() {\n//       console.log(\"From the outside\")\n//   }\n\n//   getItems() {\n//     //http://node-express-env.eba-m3dz2nxw.us-east-2.elasticbeanstalk.com/test\n//     //Get request and then assign it to state.getBoby\n//     //return state.getBody in render\n//     //Could also unshift into array, and return the array like Divider:Stubbed_Messages\n//   }\n\n//   componentDidMount() {\n//     this.getItems();\n//     //Starting timer to fetch every 5 seconds\n//     this.timer = setInterval(()=> this.getItems(), 5000);\n//   }\n  \n// render() {\n//     return (\n//         <p>!{this.state.getBody}!</p>\n//     );\n//   }\n// }\n\n// export default Message;"]},"metadata":{},"sourceType":"module"}