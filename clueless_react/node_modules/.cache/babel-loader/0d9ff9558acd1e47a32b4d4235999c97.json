{"ast":null,"code":"var _jsxFileName = \"/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/TicTac.js\";\nimport React from 'react'; //import { grid } from '../data/grid.js';\n\nimport { Square } from './Square';\nvar roomCode = ['11', '12', '13', '21', '22', '23', '31', '32', '33', '1112', '1213', '1121', '1222', '1323', '2122', '2223', '2131', '2232', '2333', '3132', '3233']; //All rooms and Hallways locations to put objects. Sequence is important - Please don't change them.\n\nvar roomArra = {\n  \"11\": [103, 241, 273, 426],\n  \"12\": [379, 300, 585, 455],\n  \"13\": [691, 235, 853, 394],\n  \"21\": [103, 541, 337, 716],\n  \"22\": [423, 544, 561, 715],\n  \"23\": [674, 510, 828, 660],\n  \"31\": [103, 835, 305, 1011],\n  \"32\": [385, 796, 569, 995],\n  \"33\": [640, 892, 861, 1017],\n  \"1112\": [304, 374, 304, 374],\n  \"1213\": [625, 374, 625, 374],\n  \"1121\": [219, 460, 219, 460],\n  \"1222\": [543, 479, 543, 479],\n  \"1323\": [735, 440, 735, 440],\n  \"2122\": [365, 599, 365, 599],\n  \"2223\": [591, 567, 591, 567],\n  \"2131\": [284, 753, 284, 753],\n  \"2232\": [444, 741, 444, 741],\n  \"2333\": [680, 725, 680, 725],\n  \"3132\": [335, 924, 335, 924],\n  \"3233\": [590, 923, 590, 923]\n}; //All valid rooms and hallways to move in (based on player's current location). Sequence is important - Please don't change them.\n\nvar roomAccess = [[{\n  roomId: \"11\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: '1112',\n    x: 0,\n    y: 1\n  }, {\n    id: '1121',\n    x: 1,\n    y: 0\n  }, {\n    id: '33',\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1112\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '11',\n    x: 0,\n    y: 0\n  }, {\n    id: '12',\n    x: 0,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"12\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: '1112',\n    x: 0,\n    y: 1\n  }, {\n    id: '1222',\n    x: 3,\n    y: 3\n  }, {\n    id: '1213',\n    x: 0,\n    y: 3\n  }],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1213\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '12',\n    x: 0,\n    y: 2\n  }, {\n    id: '13',\n    x: 0,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"13\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: '1213',\n    x: 0,\n    y: 3\n  }, '1323', {\n    id: '31',\n    x: 4,\n    y: 0\n  }],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"1121\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '11',\n    x: 0,\n    y: 0\n  }, {\n    id: '21',\n    x: 2,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1222\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '12',\n    x: 0,\n    y: 2\n  }, {\n    id: '22',\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"1323\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '13',\n    x: 0,\n    y: 4\n  }, {\n    id: '23',\n    x: 2,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"21\",\n  roomName: \"Room\",\n  roomAccess: ['1121', '2122', '2131'],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2122\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '21',\n    x: 2,\n    y: 0\n  }, {\n    id: '22',\n    x: 2,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"22\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: '2122',\n    x: 1,\n    y: 1\n  }, {\n    id: '1222',\n    x: 1,\n    y: 1\n  }, '2223', '2232'],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2223\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '22',\n    x: 2,\n    y: 2\n  }, '23'],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"23\",\n  roomName: \"Room\",\n  roomAccess: ['2223', '1323', '2333'],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"2131\",\n  roomName: \"Room\",\n  roomAccess: ['21', {\n    id: '31',\n    x: 4,\n    y: 0\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2232\",\n  roomName: \"Room\",\n  roomAccess: [{\n    id: '22',\n    x: 2,\n    y: 2\n  }, {\n    id: '32',\n    x: 4,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"0\",\n  roomName: \"Empty\",\n  roomAccess: [],\n  roomLimit: 0,\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"2333\",\n  roomName: \"Room\",\n  roomAccess: ['23', {\n    id: '33',\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}], [{\n  roomId: \"31\",\n  roomName: \"Room\",\n  roomAccess: ['2131', '3132', {\n    id: '13',\n    x: 0,\n    y: 4\n  }],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"3132\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '31',\n    x: 4,\n    y: 0\n  }, {\n    id: '32',\n    x: 4,\n    y: 2\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"32\",\n  roomName: \"Room\",\n  roomAccess: ['3132', '2232', '3233'],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"3233\",\n  roomName: \"Hallway\",\n  roomAccess: [{\n    id: '32',\n    x: 4,\n    y: 2\n  }, {\n    id: '33',\n    x: 4,\n    y: 4\n  }],\n  roomLimit: 1,\n  // Because it is the hallway\n  roomPlayers: [],\n  roomWeapons: []\n}, {\n  roomId: \"33\",\n  roomName: \"Room\",\n  roomAccess: ['3233', '2333', {\n    id: '11',\n    x: 0,\n    y: 0\n  }],\n  roomLimit: 0,\n  // No limit because 0\n  roomPlayers: [],\n  roomWeapons: []\n}]];\nexport class TicTac extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dim: 3,\n      //grid:Array(5).fill(0).map(x=>Array(5).fill({})),\n      grid: roomAccess,\n      player: 'X',\n      winner: null,\n      active: true,\n      // Stores players current locID\n      players: [\"2333\", //Miss Scarlet\n      \"3233\", //Mr. Green\n      \"2131\", //Colonel Mustard\n      \"1121\", //Prof. Plum\n      \"1112\", //Mrs. Peacock\n      \"1323\" //Mrs. White\n      ],\n      // Stores weapons current locID\n      weapons: [\"11\", \"13\", \"22\", \"23\", \"31\", \"32\"],\n      currentX: 0,\n      currentY: 0,\n      currentPlayer: \"P1\"\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.dims = [parseFloat(500 / this.state.grid.length), parseFloat(500 / this.state.grid[0].length)];\n  } // checkWins(x, y){\n  //   const g = this.state.grid\n  //   function checkDiagonal1(){\n  //     if (x == y){\n  //       const result = new Set(g.map((_, i)=>g[i][i]));\n  //       announceWin(result);\n  //     }\n  //   }\n  //   function checkDiagonal2(){\n  //     if (x+y+1 == g.length){\n  //       const result = new Set(g.map((_, i)=>g[i][g.length-1-i]))\n  //       announceWin(result);\n  //     }\n  //   }\n  //   function checkHorizontal(x){\n  //     const result = new Set(g[x]);\n  //     announceWin(result);\n  //   }\n  //   function checkVertical(y){\n  //     const result = new Set(g.map((x)=>x[y]));\n  //     announceWin(result);\n  //   }\n  //   function announceWin(l){\n  //     if (l.size == 1){\n  //       if (l.has(\"X\")){\n  //         setTimeout(()=>{alert(\"X wins\")}, 10);\n  //         return;\n  //       } else {\n  //         setTimeout(()=>{alert(\"O wins\")}, 10);\n  //         return;\n  //       }\n  //     }\n  //   }\n  //   checkDiagonal1();\n  //   checkDiagonal2();\n  //   checkHorizontal(x);\n  //   checkVertical(y);\n  // }\n  // Movement message\n  //{\"game_id\":0,\"player_id\":0,\"message_type\":22,\"message\":\n  //{\"character_moved\":true,\"weapon_moved\":false,\"moved_character\":1,\"moved_weapon\":\"\",\"new_weapon_location\":[]}}\n  //Process the Move for Person or Weapon to new location\n\n\n  moveObject(PID, TO) {\n    var currentLoc = document.getElementById(PID).getAttribute('data-locId');\n    document.getElementById(PID).setAttribute('data-locId', TO);\n    this.RenderRoom(currentLoc);\n    this.RenderRoom(TO);\n  } //Organizes Objects in a room/hallway  (Updates Room on Gui)\n\n\n  RenderRoom(RID) {\n    console.log(\"renderroom\" + RID);\n    var roomidx = -1;\n\n    for (roomidx = 0; roomidx < 21; roomidx++) {\n      if (RID == roomCode[roomidx]) break;\n    } //alert(roomidx+','+roomCode[roomidx]);\n\n\n    var fromx = roomArra[roomidx][0];\n    var fromy = roomArra[roomidx][1];\n    var tox = roomArra[roomidx][2];\n    var toy = roomArra[roomidx][3];\n    var i = 0;\n    var cx = fromx;\n    var cy = fromy;\n\n    for (i = 1; i < 7; i++) {\n      if (roomCode[roomidx] == document.getElementById('P' + i).getAttribute('data-locId')) {\n        //$('#P'+i).css({ left: cx+ 'px' });\n        //$('#P'+i).css({ top: cy+'px' });\n        cy += 45;\n\n        if (cy + 40 > toy) {\n          cx += 45;\n          cy = fromy;\n        }\n      }\n    }\n\n    for (i = 1; i < 7; i++) {\n      if (roomCode[roomidx] == document.getElementById('W' + i).getAttribute('data-locId')) {\n        //$('#W'+i).css({ left: cx+ 'px' });\n        //$('#W'+i).css({ top: cy+'px' });\n        cy += 45;\n\n        if (cy + 40 > toy) {\n          cx += 45;\n          cy = fromy;\n        }\n      }\n    }\n\n    var rcode = roomCode;\n  } //Checks if Hallway is free to move in ?\n\n\n  ISFree(HWID) {\n    console.log('Isfree' + HWID);\n    console.log('Isfree' + document.getElementById('P1').getAttribute('data-locId'));\n\n    for (var i = 1; i < 7; i++) {\n      if (HWID == document.getElementById('P' + i).getAttribute('data-locId')) {\n        return false;\n      }\n    }\n\n    return true;\n  } //Validates the requested move.\n  // We can not move to a Hallway if already someone is there\n  // We only can move to neighbor areas and cross connected rooms\n\n\n  validateMove(dataId) {\n    var roomidx = -1;\n    var locid = document.getElementById(this.state.myid).getAttribute('data-locId');\n    console.log(\"validatemove\" + locid);\n\n    for (roomidx = 0; roomidx < 21; roomidx++) {\n      if (locid == roomCode[roomidx]) break;\n    }\n\n    for (var i = 0; i < roomAccess[roomidx].length; i++) {\n      if (roomAccess[roomidx][i] == dataId) {\n        if (roomAccess[roomidx][i].length == 2) return true;\n        return this.ISFree(roomAccess[roomidx][i]);\n      }\n    }\n\n    return false;\n  } //Manages Click event on area (Room or Hallway) . Validate the Move and Move the player to new location.\n\n\n  AreaClicked(area) {\n    console.log(area);\n    console.log(this.state.myid);\n    var dataId = area.name;\n    if (!this.state.started) return;\n\n    if (!this.ValidateMove(dataId)) {\n      alert('Your requested move is not valid!');\n      return;\n    }\n\n    this.MoveObject(this.state.myid, dataId);\n  }\n\n  validateMove(x, y) {\n    const g = this.state.grid;\n    console.log(g);\n  }\n\n  handleOnClick(x, y) {\n    const g = this.state.grid;\n    console.log(\"TicTac x=\" + x + \" y=\" + y + \" \");\n    console.log(\"TicTac \" + JSON.stringify(this.state.grid)); // Need to store current player, with location to base valid movements on\n\n    const currentRoom = this.state.grid[this.state.currentX][this.state.currentY];\n    console.log(\"TicTac \" + JSON.stringify(currentRoom)); // {\n    //   roomId: \"3233\",\n    //   roomName: \"Hallway\",\n    //   roomAccess: ['32','33'],\n    //   roomLimit: 1, // Because it is the hallway\n    //   roomPlayers: [],\n    //   roomWeapons: [],\n    // },\n    //this.validateMove(x, y)\n    // if (this.state.active){\n    //   if (g[x][y] == []){\n    //     g[x][y] = this.state.player;\n    //     this.setState({'grid':g});\n    //     this.state.player = this.state.player == 'X' ? 'O':'X';\n    //     this.checkWins(x, y);\n    // } else {\n    //   alert('Please select an empty square!');\n    //   }\n    // }\n  }\n\n  render() {\n    const style = {\n      margin: 'auto',\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: 'white',\n      color: 'white',\n      fontSize: \"3em\",\n      tableLayout: 'fixed'\n    };\n    console.log(this.state.grid);\n    const rows = this.state.grid.map((r, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"row_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 7\n        }\n      }, r.map((d, j) => {\n        console.log('building');\n        return /*#__PURE__*/React.createElement(Square, {\n          key: i + \"_\" + j,\n          dims: this.dims,\n          onClick: () => {\n            this.handleOnClick(i, j);\n          } //contents={d==\"+\"?\" \":d}\n          ,\n          contents: d,\n          name: \"Austin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 11\n          }\n        });\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }\n    }, \"Tic-Tac-React!\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }\n    }, \"tic-tac-toe, written with \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 42\n      }\n    }, \"ReactJS\"), \". Enjoy!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }\n    }, \"Current Player: \", this.state.player), /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: \"0\",\n      id: \"table\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }, rows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 20\n      }\n    }));\n  }\n\n}\nexport default TicTac;","map":{"version":3,"sources":["/Users/kathryncrisafulli/Desktop/clueless_git/UnitedCoders/clueless_react/src/TicTac.js"],"names":["React","Square","roomCode","roomArra","roomAccess","roomId","roomName","id","x","y","roomLimit","roomPlayers","roomWeapons","TicTac","Component","constructor","props","state","dim","grid","player","winner","active","players","weapons","currentX","currentY","currentPlayer","handleOnClick","bind","dims","parseFloat","length","moveObject","PID","TO","currentLoc","document","getElementById","getAttribute","setAttribute","RenderRoom","RID","console","log","roomidx","fromx","fromy","tox","toy","i","cx","cy","rcode","ISFree","HWID","validateMove","dataId","locid","myid","AreaClicked","area","name","started","ValidateMove","alert","MoveObject","g","JSON","stringify","currentRoom","render","style","margin","width","height","backgroundColor","color","fontSize","tableLayout","rows","map","r","d","j","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAIC,QAAQ,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EAAyC,IAAzC,EACf,MADe,EACR,MADQ,EACD,MADC,EACM,MADN,EACa,MADb,EACoB,MADpB,EAC2B,MAD3B,EACkC,MADlC,EACyC,MADzC,EACgD,MADhD,EACuD,MADvD,EAC8D,MAD9D,CAAf,C,CAGA;;AACA,IAAIC,QAAQ,GAAG;AACb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CADO;AAEb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAFO;AAGb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAHO;AAIb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAJO;AAKb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CALO;AAMb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CANO;AAOb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,IAAb,CAPO;AAQb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CARO;AASb,QAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,IAAb,CATO;AAUb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAVK;AAWb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAXK;AAYb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAZK;AAab,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAbK;AAcb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAdK;AAeb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAfK;AAgBb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAhBK;AAiBb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAjBK;AAkBb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAlBK;AAmBb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAnBK;AAoBb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CApBK;AAqBb,UAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb;AArBK,CAAf,C,CAwBA;;AACA,IAAIC,UAAU,GAAG,CACjB,CAAE;AACEC,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAD,EAAuB;AAACF,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAvB,EAA6C;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAA7C,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAAF,EAQE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CARF,EAgBE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAD,EAAuB;AAACF,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAvB,EAA6C;AAACF,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAA7C,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAhBF,EAwBE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAxBF,EAgCE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAD,EAAuB,MAAvB,EAA8B;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAA9B,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAhCF,CADiB,EA0CjB,CACE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CADF,EASE;AACEP,EAAAA,MAAM,EAAE,GADV;AAEEC,EAAAA,QAAQ,EAAE,OAFZ;AAGEF,EAAAA,UAAU,EAAE,EAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAKEC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CATF,EAiBE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBF,EAyBE;AACEP,EAAAA,MAAM,EAAE,GADV;AAEEC,EAAAA,QAAQ,EAAE,OAFZ;AAGEF,EAAAA,UAAU,EAAE,EAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAKEC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAzBF,EAiCE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjCF,CA1CiB,EAoFjB,CACE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CADF,EASE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CATF,EAiBE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAD,EAAuB;AAACF,IAAAA,EAAE,EAAC,MAAJ;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC;AAAnB,GAAvB,EAA6C,MAA7C,EAAoD,MAApD,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBF,EAyBE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB,IAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAzBF,EAiCE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjCF,CApFiB,EA8HjB,CACE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,IAAD,EAAM;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAN,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CADF,EASE;AACEP,EAAAA,MAAM,EAAE,GADV;AAEEC,EAAAA,QAAQ,EAAE,OAFZ;AAGEF,EAAAA,UAAU,EAAE,EAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAKEC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CATF,EAiBE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBF,EAyBE;AACEP,EAAAA,MAAM,EAAE,GADV;AAEEC,EAAAA,QAAQ,EAAE,OAFZ;AAGEF,EAAAA,UAAU,EAAE,EAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAKEC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAzBF,EAiCE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,IAAD,EAAM;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAN,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjCF,CA9HiB,EAwKjB,CACE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAf,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CADF,EASE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CATF,EAiBE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAHd;AAIEM,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBF,EAyBE;AACEP,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAD,EAAqB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAArB,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAzBF,EAiCE;AACEP,EAAAA,MAAM,EAAE,IADV;AAEEC,EAAAA,QAAQ,EAAE,MAFZ;AAGEF,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe;AAACG,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,CAAC,EAAC,CAAZ;AAAeC,IAAAA,CAAC,EAAC;AAAjB,GAAf,CAHd;AAIEC,EAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,EAAAA,WAAW,EAAE,EALf;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjCF,CAxKiB,CAAjB;AAoNA,OAAO,MAAMC,MAAN,SAAqBb,KAAK,CAACc,SAA3B,CAAqC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAC,CADO;AAEX;AACAC,MAAAA,IAAI,EAACf,UAHM;AAIXgB,MAAAA,MAAM,EAAC,GAJI;AAKXC,MAAAA,MAAM,EAAC,IALI;AAMXC,MAAAA,MAAM,EAAC,IANI;AAQX;AACAC,MAAAA,OAAO,EAAE,CACT,MADS,EACD;AACR,YAFS,EAED;AACR,YAHS,EAGD;AACR,YAJS,EAID;AACR,YALS,EAKD;AACR,YANS,CAMF;AANE,OATE;AAkBb;AACEC,MAAAA,OAAO,EAAE,CACT,IADS,EAET,IAFS,EAGT,IAHS,EAIT,IAJS,EAKT,IALS,EAMT,IANS,CAnBE;AA4BXC,MAAAA,QAAQ,EAAE,CA5BC;AA6BXC,MAAAA,QAAQ,EAAE,CA7BC;AA8BXC,MAAAA,aAAa,EAAE;AA9BJ,KAAb;AAiCA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,IAAL,GAAY,CAACC,UAAU,CAAC,MAAI,KAAKd,KAAL,CAAWE,IAAX,CAAgBa,MAArB,CAAX,EAAyCD,UAAU,CAAC,MAAI,KAAKd,KAAL,CAAWE,IAAX,CAAgB,CAAhB,EAAmBa,MAAxB,CAAnD,CAAZ;AAED,GAvCyC,CA0C1C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AAEA;;;AACAC,EAAAA,UAAU,CAACC,GAAD,EAAKC,EAAL,EAAQ;AACd,QAAIC,UAAU,GAACC,QAAQ,CAACC,cAAT,CAAwBJ,GAAxB,EAA6BK,YAA7B,CAA0C,YAA1C,CAAf;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwBJ,GAAxB,EAA6BM,YAA7B,CAA0C,YAA1C,EAAuDL,EAAvD;AACA,SAAKM,UAAL,CAAgBL,UAAhB;AACA,SAAKK,UAAL,CAAgBN,EAAhB;AACH,GAjGuC,CAmGxC;;;AACAM,EAAAA,UAAU,CAACC,GAAD,EAAK;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,GAA3B;AACA,QAAIG,OAAO,GAAC,CAAC,CAAb;;AACA,SAAIA,OAAO,GAAC,CAAZ,EAAcA,OAAO,GAAC,EAAtB,EAAyBA,OAAO,EAAhC,EAAmC;AAC/B,UAAGH,GAAG,IAAExC,QAAQ,CAAC2C,OAAD,CAAhB,EACI;AACP,KANU,CAOX;;;AACA,QAAIC,KAAK,GAAC3C,QAAQ,CAAC0C,OAAD,CAAR,CAAkB,CAAlB,CAAV;AACA,QAAIE,KAAK,GAAC5C,QAAQ,CAAC0C,OAAD,CAAR,CAAkB,CAAlB,CAAV;AACA,QAAIG,GAAG,GAAC7C,QAAQ,CAAC0C,OAAD,CAAR,CAAkB,CAAlB,CAAR;AACA,QAAII,GAAG,GAAC9C,QAAQ,CAAC0C,OAAD,CAAR,CAAkB,CAAlB,CAAR;AACA,QAAIK,CAAC,GAAC,CAAN;AACA,QAAIC,EAAE,GAACL,KAAP;AACA,QAAIM,EAAE,GAACL,KAAP;;AACA,SAAIG,CAAC,GAAC,CAAN,EAAQA,CAAC,GAAC,CAAV,EAAYA,CAAC,EAAb,EAAgB;AACZ,UAAGhD,QAAQ,CAAC2C,OAAD,CAAR,IAAmBR,QAAQ,CAACC,cAAT,CAAwB,MAAIY,CAA5B,EAA+BX,YAA/B,CAA4C,YAA5C,CAAtB,EAAgF;AAC5E;AACA;AACAa,QAAAA,EAAE,IAAE,EAAJ;;AACA,YAAGA,EAAE,GAAC,EAAH,GAAMH,GAAT,EAAc;AACVE,UAAAA,EAAE,IAAE,EAAJ;AACAC,UAAAA,EAAE,GAACL,KAAH;AACH;AACJ;AACJ;;AACD,SAAIG,CAAC,GAAC,CAAN,EAAQA,CAAC,GAAC,CAAV,EAAYA,CAAC,EAAb,EAAgB;AACZ,UAAGhD,QAAQ,CAAC2C,OAAD,CAAR,IAAmBR,QAAQ,CAACC,cAAT,CAAwB,MAAIY,CAA5B,EAA+BX,YAA/B,CAA4C,YAA5C,CAAtB,EAAgF;AAC5E;AACA;AACAa,QAAAA,EAAE,IAAE,EAAJ;;AAEA,YAAGA,EAAE,GAAC,EAAH,GAAMH,GAAT,EAAc;AACVE,UAAAA,EAAE,IAAE,EAAJ;AACAC,UAAAA,EAAE,GAACL,KAAH;AACH;AACJ;AACJ;;AACD,QAAIM,KAAK,GAACnD,QAAV;AACH,GA3IuC,CA6IxC;;;AACAoD,EAAAA,MAAM,CAACC,IAAD,EAAM;AACTZ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWW,IAAvB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,YAA9B,CAA2C,YAA3C,CAAvB;;AACC,SAAI,IAAIW,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAqB;AACjB,UAAIK,IAAI,IAAIlB,QAAQ,CAACC,cAAT,CAAwB,MAAMY,CAA9B,EAAiCX,YAAjC,CAA8C,YAA9C,CAAZ,EAAyE;AACrE,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAvJuC,CAyJxC;AACA;AACA;;;AACAiB,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAChB,QAAIZ,OAAO,GAAC,CAAC,CAAb;AAEA,QAAIa,KAAK,GAAErB,QAAQ,CAACC,cAAT,CAAwB,KAAKrB,KAAL,CAAW0C,IAAnC,EAAyCpB,YAAzC,CAAsD,YAAtD,CAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBc,KAA7B;;AACA,SAAIb,OAAO,GAAC,CAAZ,EAAcA,OAAO,GAAC,EAAtB,EAAyBA,OAAO,EAAhC,EAAmC;AAC/B,UAAGa,KAAK,IAAExD,QAAQ,CAAC2C,OAAD,CAAlB,EACI;AACP;;AAED,SAAK,IAAIK,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC9C,UAAU,CAACyC,OAAD,CAAV,CAAoBb,MAAnC,EAA0CkB,CAAC,EAA3C,EAA8C;AAC1C,UAAG9C,UAAU,CAACyC,OAAD,CAAV,CAAoBK,CAApB,KAAwBO,MAA3B,EAAkC;AAC9B,YAAGrD,UAAU,CAACyC,OAAD,CAAV,CAAoBK,CAApB,EAAuBlB,MAAvB,IAA+B,CAAlC,EACI,OAAO,IAAP;AACJ,eAAO,KAAKsB,MAAL,CAAYlD,UAAU,CAACyC,OAAD,CAAV,CAAoBK,CAApB,CAAZ,CAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GA9KuC,CAgLxC;;;AACAU,EAAAA,WAAW,CAACC,IAAD,EAAM;AACblB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAZ;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAW0C,IAAvB;AACA,QAAIF,MAAM,GAAGI,IAAI,CAACC,IAAlB;AACA,QAAG,CAAC,KAAK7C,KAAL,CAAW8C,OAAf,EACI;;AACJ,QAAG,CAAC,KAAKC,YAAL,CAAkBP,MAAlB,CAAJ,EACA;AACIQ,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACA;AACH;;AACD,SAAKC,UAAL,CAAgB,KAAKjD,KAAL,CAAW0C,IAA3B,EAAiCF,MAAjC;AACH;;AAEDD,EAAAA,YAAY,CAAChD,CAAD,EAAIC,CAAJ,EAAM;AAChB,UAAM0D,CAAC,GAAG,KAAKlD,KAAL,CAAWE,IAArB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,CAAZ;AACD;;AAGHvC,EAAAA,aAAa,CAACpB,CAAD,EAAIC,CAAJ,EAAM;AACjB,UAAM0D,CAAC,GAAG,KAAKlD,KAAL,CAAWE,IAArB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcpC,CAAd,GAAkB,KAAlB,GAA0BC,CAA1B,GAA8B,GAA1C;AACAkC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYwB,IAAI,CAACC,SAAL,CAAe,KAAKpD,KAAL,CAAWE,IAA1B,CAAxB,EAHiB,CAKjB;;AAEA,UAAMmD,WAAW,GAAG,KAAKrD,KAAL,CAAWE,IAAX,CAAgB,KAAKF,KAAL,CAAWQ,QAA3B,EAAqC,KAAKR,KAAL,CAAWS,QAAhD,CAApB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYwB,IAAI,CAACC,SAAL,CAAeC,WAAf,CAAxB,EARiB,CAUjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAC,MADK;AAEZC,MAAAA,KAAK,EAAE,MAFK;AAGZC,MAAAA,MAAM,EAAC,MAHK;AAIZC,MAAAA,eAAe,EAAC,OAJJ;AAKZC,MAAAA,KAAK,EAAC,OALM;AAMZC,MAAAA,QAAQ,EAAC,KANG;AAOZC,MAAAA,WAAW,EAAC;AAPA,KAAd;AASApC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWE,IAAvB;AACA,UAAM6D,IAAI,GAAG,KAAK/D,KAAL,CAAWE,IAAX,CAAgB8D,GAAhB,CAAoB,CAACC,CAAD,EAAIhC,CAAJ,KAAU;AAAC,0BAC1C;AAAI,QAAA,GAAG,EAAE,SAAOA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgC,CAAC,CAACD,GAAF,CAAM,CAACE,CAAD,EAAIC,CAAJ,KAAU;AAACzC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAAyB,4BACzC,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEM,CAAC,GAAC,GAAF,GAAMkC,CADb;AAEE,UAAA,IAAI,EAAE,KAAKtD,IAFb;AAGE,UAAA,OAAO,EAAE,MAAI;AAAC,iBAAKF,aAAL,CAAmBsB,CAAnB,EAAqBkC,CAArB;AAAwB,WAHxC,CAIE;AAJF;AAKE,UAAA,QAAQ,EAAED,CALZ;AAME,UAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyC;AAStC,OATJ,CADH,CAD0C;AAevC,KAfQ,CAAb;AAiBA,wBACE;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoB,KAAKpE,KAAL,CAAWG,MAA/B,CAHF,eAIE;AAAO,MAAA,WAAW,EAAC,GAAnB;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAkC,MAAA,KAAK,EAAEoD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,IADH,CADF,CAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eAiBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,eAiBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBb,CADF;AAqBD;;AAvRyC;AA0R5C,eAAenE,MAAf","sourcesContent":["import React from 'react';\n//import { grid } from '../data/grid.js';\nimport { Square } from './Square';\n\nvar roomCode = ['11','12','13','21','22','23','31','32','33',\n'1112','1213','1121','1222','1323','2122','2223','2131','2232','2333','3132','3233']\n\n//All rooms and Hallways locations to put objects. Sequence is important - Please don't change them.\nvar roomArra = {\n  \"11\": [103,241,273,426], \n  \"12\": [379,300,585,455],\n  \"13\": [691,235,853,394],\n  \"21\": [103,541,337,716],\n  \"22\": [423,544,561,715],\n  \"23\": [674,510,828,660],\n  \"31\": [103,835,305,1011],\n  \"32\": [385,796,569,995],\n  \"33\": [640,892,861,1017],\n  \"1112\": [304,374,304,374],\n  \"1213\": [625,374,625,374],\n  \"1121\": [219,460,219,460],\n  \"1222\": [543,479,543,479],\n  \"1323\": [735,440,735,440],\n  \"2122\": [365,599,365,599],\n  \"2223\": [591,567,591,567],\n  \"2131\": [284,753,284,753],\n  \"2232\": [444,741,444,741],\n  \"2333\": [680,725,680,725],\n  \"3132\": [335,924,335,924],\n  \"3233\": [590,923,590,923]\n}\n\n//All valid rooms and hallways to move in (based on player's current location). Sequence is important - Please don't change them.\nvar roomAccess = [\n[ {\n    roomId: \"11\",\n    roomName: \"Room\",\n    roomAccess: [{id:'1112', x:0, y:1},{id:'1121', x:1, y:0},{id:'33', x:4, y:4}],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"1112\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'11', x:0, y:0},{id:'12', x:0, y:2}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"12\",\n    roomName: \"Room\",\n    roomAccess: [{id:'1112', x:0, y:1},{id:'1222', x:3, y:3},{id:'1213', x:0, y:3}],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"1213\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'12', x:0, y:2},{id:'13', x:0, y:4}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"13\",\n    roomName: \"Room\",\n    roomAccess: [{id:'1213', x:0, y:3},'1323',{id:'31', x:4, y:0}],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  }\n],\n[\n  {\n    roomId: \"1121\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'11', x:0, y:0},{id:'21', x:2, y:0}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"0\",\n    roomName: \"Empty\",\n    roomAccess: [],\n    roomLimit: 0,\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"1222\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'12', x:0, y:2},{id:'22', x:2, y:2}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"0\",\n    roomName: \"Empty\",\n    roomAccess: [],\n    roomLimit: 0,\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"1323\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'13', x:0, y:4},{id:'23', x:2, y:4}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n],\n[\n  {\n    roomId: \"21\",\n    roomName: \"Room\",\n    roomAccess: ['1121','2122','2131'],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"2122\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'21', x:2, y:0},{id:'22', x:2, y:2}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"22\",\n    roomName: \"Room\",\n    roomAccess: [{id:'2122', x:1, y:1},{id:'1222', x:1, y:1},'2223','2232'],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"2223\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'22', x:2, y:2},'23'],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"23\",\n    roomName: \"Room\",\n    roomAccess: ['2223','1323','2333'],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  }\n],\n[\n  {\n    roomId: \"2131\",\n    roomName: \"Room\",\n    roomAccess: ['21',{id:'31', x:4, y:0}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"0\",\n    roomName: \"Empty\",\n    roomAccess: [],\n    roomLimit: 0,\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"2232\",\n    roomName: \"Room\",\n    roomAccess: [{id:'22', x:2, y:2},{id:'32', x:4, y:2}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"0\",\n    roomName: \"Empty\",\n    roomAccess: [],\n    roomLimit: 0,\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"2333\",\n    roomName: \"Room\",\n    roomAccess: ['23',{id:'33', x:4, y:4}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n],\n[\n  {\n    roomId: \"31\",\n    roomName: \"Room\",\n    roomAccess: ['2131','3132',{id:'13', x:0, y:4}],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"3132\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'31', x:4, y:0},{id:'32', x:4, y:2}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"32\",\n    roomName: \"Room\",\n    roomAccess: ['3132','2232','3233'],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"3233\",\n    roomName: \"Hallway\",\n    roomAccess: [{id:'32', x:4, y:2},{id:'33', x:4, y:4}],\n    roomLimit: 1, // Because it is the hallway\n    roomPlayers: [],\n    roomWeapons: [],\n  },\n  {\n    roomId: \"33\",\n    roomName: \"Room\",\n    roomAccess: ['3233','2333',{id:'11', x:0, y:0}],\n    roomLimit: 0, // No limit because 0\n    roomPlayers: [],\n    roomWeapons: [],\n  }\n]\n]\n\nexport class TicTac extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      dim:3,\n      //grid:Array(5).fill(0).map(x=>Array(5).fill({})),\n      grid:roomAccess,\n      player:'X',\n      winner:null,\n      active:true,\n\n      // Stores players current locID\n      players: [\n      \"2333\", //Miss Scarlet\n      \"3233\", //Mr. Green\n      \"2131\", //Colonel Mustard\n      \"1121\", //Prof. Plum\n      \"1112\", //Mrs. Peacock\n      \"1323\" //Mrs. White\n      ],\n\n    // Stores weapons current locID\n      weapons: [\n      \"11\",\n      \"13\",\n      \"22\",\n      \"23\",\n      \"31\",\n      \"32\"\n      ],\n\n      currentX: 0,\n      currentY: 0,\n      currentPlayer: \"P1\",\n\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.dims = [parseFloat(500/this.state.grid.length), parseFloat(500/this.state.grid[0].length)]\n    \n  }\n\n\n  // checkWins(x, y){\n  //   const g = this.state.grid\n\n  //   function checkDiagonal1(){\n  //     if (x == y){\n  //       const result = new Set(g.map((_, i)=>g[i][i]));\n  //       announceWin(result);\n  //     }\n  //   }\n\n  //   function checkDiagonal2(){\n  //     if (x+y+1 == g.length){\n  //       const result = new Set(g.map((_, i)=>g[i][g.length-1-i]))\n  //       announceWin(result);\n  //     }\n  //   }\n\n  //   function checkHorizontal(x){\n  //     const result = new Set(g[x]);\n  //     announceWin(result);\n  //   }\n\n  //   function checkVertical(y){\n  //     const result = new Set(g.map((x)=>x[y]));\n  //     announceWin(result);\n  //   }\n\n  //   function announceWin(l){\n  //     if (l.size == 1){\n  //       if (l.has(\"X\")){\n  //         setTimeout(()=>{alert(\"X wins\")}, 10);\n  //         return;\n  //       } else {\n  //         setTimeout(()=>{alert(\"O wins\")}, 10);\n  //         return;\n  //       }\n  //     }\n  //   }\n\n  //   checkDiagonal1();\n  //   checkDiagonal2();\n  //   checkHorizontal(x);\n  //   checkVertical(y);\n  // }\n\n  // Movement message\n    //{\"game_id\":0,\"player_id\":0,\"message_type\":22,\"message\":\n    //{\"character_moved\":true,\"weapon_moved\":false,\"moved_character\":1,\"moved_weapon\":\"\",\"new_weapon_location\":[]}}\n\n    //Process the Move for Person or Weapon to new location\n    moveObject(PID,TO){\n        var currentLoc=document.getElementById(PID).getAttribute('data-locId');\n        document.getElementById(PID).setAttribute('data-locId',TO);\n        this.RenderRoom(currentLoc);\n        this.RenderRoom(TO);\n    }\n\n    //Organizes Objects in a room/hallway  (Updates Room on Gui)\n    RenderRoom(RID){\n        console.log(\"renderroom\" + RID)\n        var roomidx=-1;\n        for(roomidx=0;roomidx<21;roomidx++){\n            if(RID==roomCode[roomidx])\n                break;\n        }\n        //alert(roomidx+','+roomCode[roomidx]);\n        var fromx=roomArra[roomidx][0];\n        var fromy=roomArra[roomidx][1];\n        var tox=roomArra[roomidx][2];\n        var toy=roomArra[roomidx][3];\n        var i=0;\n        var cx=fromx;\n        var cy=fromy;\n        for(i=1;i<7;i++){\n            if(roomCode[roomidx]==document.getElementById('P'+i).getAttribute('data-locId')){\n                //$('#P'+i).css({ left: cx+ 'px' });\n                //$('#P'+i).css({ top: cy+'px' });\n                cy+=45;\n                if(cy+40>toy) {\n                    cx+=45;\n                    cy=fromy;\n                }\n            }\n        }\n        for(i=1;i<7;i++){\n            if(roomCode[roomidx]==document.getElementById('W'+i).getAttribute('data-locId')){\n                //$('#W'+i).css({ left: cx+ 'px' });\n                //$('#W'+i).css({ top: cy+'px' });\n                cy+=45;\n\n                if(cy+40>toy) {\n                    cx+=45;\n                    cy=fromy;\n                }\n            }\n        }\n        var rcode=roomCode;\n    }\n\n    //Checks if Hallway is free to move in ?\n    ISFree(HWID){\n       console.log('Isfree' + HWID)\n       console.log('Isfree' + document.getElementById('P1').getAttribute('data-locId'))\n        for(var i=1;i<7;i++) {\n            if (HWID == document.getElementById('P' + i).getAttribute('data-locId')) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //Validates the requested move.\n    // We can not move to a Hallway if already someone is there\n    // We only can move to neighbor areas and cross connected rooms\n    validateMove(dataId){\n        var roomidx=-1;\n\n        var locid= document.getElementById(this.state.myid).getAttribute('data-locId');\n        console.log(\"validatemove\" + locid)\n        for(roomidx=0;roomidx<21;roomidx++){\n            if(locid==roomCode[roomidx])\n                break;\n        }\n\n        for (var i=0;i<roomAccess[roomidx].length;i++){\n            if(roomAccess[roomidx][i]==dataId){\n                if(roomAccess[roomidx][i].length==2)\n                    return true;\n                return this.ISFree(roomAccess[roomidx][i]);\n            }\n        }\n        return false;\n    }\n\n    //Manages Click event on area (Room or Hallway) . Validate the Move and Move the player to new location.\n    AreaClicked(area){\n        console.log(area)\n        console.log(this.state.myid)\n        var dataId = area.name;\n        if(!this.state.started)\n            return ;\n        if(!this.ValidateMove(dataId))\n        {\n            alert('Your requested move is not valid!');\n            return ;\n        }\n        this.MoveObject(this.state.myid, dataId);\n    }\n\n    validateMove(x, y){\n      const g = this.state.grid\n      console.log(g)\n    }\n    \n\n  handleOnClick(x, y){\n    const g = this.state.grid\n    console.log(\"TicTac x=\" + x + \" y=\" + y + \" \");\n    console.log(\"TicTac \" + JSON.stringify(this.state.grid))\n\n    // Need to store current player, with location to base valid movements on\n\n    const currentRoom = this.state.grid[this.state.currentX][this.state.currentY];\n    console.log(\"TicTac \" + JSON.stringify(currentRoom))\n\n    // {\n    //   roomId: \"3233\",\n    //   roomName: \"Hallway\",\n    //   roomAccess: ['32','33'],\n    //   roomLimit: 1, // Because it is the hallway\n    //   roomPlayers: [],\n    //   roomWeapons: [],\n    // },\n\n\n    //this.validateMove(x, y)\n    // if (this.state.active){\n    //   if (g[x][y] == []){\n    //     g[x][y] = this.state.player;\n    //     this.setState({'grid':g});\n    //     this.state.player = this.state.player == 'X' ? 'O':'X';\n    //     this.checkWins(x, y);\n    // } else {\n    //   alert('Please select an empty square!');\n    //   }\n    // }\n  }\n\n  render(){\n    const style = {\n      margin:'auto',\n      width: \"auto\",\n      height:\"auto\",\n      backgroundColor:'white',\n      color:'white',\n      fontSize:\"3em\",\n      tableLayout:'fixed',\n    }\n    console.log(this.state.grid)\n    const rows = this.state.grid.map((r, i) => {return (\n      <tr key={\"row_\"+i}>\n        {r.map((d, j) => {console.log('building'); return(\n          <Square\n            key={i+\"_\"+j}\n            dims={this.dims}\n            onClick={()=>{this.handleOnClick(i,j)}}\n            //contents={d==\"+\"?\" \":d}\n            contents={d}\n            name=\"Austin\" />\n              )\n            }\n          )\n        }\n        </tr>)\n        }\n      );\n    return (\n      <div style={{textAlign:\"center\"}}>\n        <h1>Tic-Tac-React!</h1>\n        <small>tic-tac-toe, written with <b>ReactJS</b>. Enjoy!</small>\n        <p>Current Player: {this.state.player}</p>\n        <table cellSpacing=\"0\" id=\"table\" style={style}>\n          <tbody>\n            {rows}\n          </tbody>\n        </table>\n        <br />\n        {/* <button style={{margin:\"auto\"}} onClick={this.handleReset}>reset</button>\n        <br /><br />\n        <button onClick={()=>{this.state.dim==1?1:this.state.dim-=1;this.setState({dim:this.state.dim})}}>-</button>\n\n            &nbsp;&nbsp;&nbsp;<span style={{color:'white'}}>{this.state.dim}</span>&nbsp;&nbsp;&nbsp;\n\n        <button onClick={()=>{this.state.dim+=1;this.setState({dim:this.state.dim})}}>+</button> */}\n        <br /><br/><br/>\n      </div>\n  )\n  }\n}\n\nexport default TicTac;\n"]},"metadata":{},"sourceType":"module"}